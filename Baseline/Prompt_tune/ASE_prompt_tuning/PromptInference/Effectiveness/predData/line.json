[{"lib": "cloudbees", "pred_out": [{"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ConfigurationParametersResponse { private java.lang.String configuration; public ConfigurationParametersResponse() { } public ConfigurationParametersResponse(java.lang.String configuration) { this.configuration = configuration; } public void setConfiguration(java.lang.String configuration) { this.configuration = configuration; } public java.lang.String getConfiguration() { return this.configuration; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class SayHelloResponse { private java.lang.String message; public java.lang.String getMessage() { return this.message; } };"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "class ParameterSettings implements <mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.String> { @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String name; @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String value; public ParameterSettings(java.lang.String name, java.lang.String value) { this.name = name; this.value = value; } public java.lang.String getName() { return this.name;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAsAttribute", "truth_type": "com.thoughtworks.xstream.annotations", "context": "class ParameterSettings implements java.util.Map.Entry<java.lang.String, java.lang.String> { @<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAsAttribute private java.lang.String name; @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String value; public ParameterSettings(java.lang.String name, java.lang.String value) { this.name = name; this.value = value; } public java.lang.String getName() { return this.name;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAsAttribute", "truth_type": "com.thoughtworks.xstream.annotations", "context": "class ParameterSettings implements java.util.Map.Entry<java.lang.String, java.lang.String> { @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String name; @<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAsAttribute private java.lang.String value; public ParameterSettings(java.lang.String name, java.lang.String value) { this.name = name; this.value = value; } public java.lang.String getName() { return this.name;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings", "truth_type": "com.cloudbees.api.config", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } <mask><mask><mask><mask><mask><mask><mask><mask>.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings", "truth_type": "com.cloudbees.api.config", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } com.cloudbees.api.config.ParameterSettings that = ((<mask><mask><mask><mask><mask><mask><mask><mask>.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false;"}, {"fqn": "this.name.equals", "truth_type": "this.name", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !<mask><mask><mask>.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.name", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.name", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false;"}, {"fqn": "this.value.equals", "truth_type": "this.value", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !<mask><mask><mask>.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.value", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.value", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} public boolean equals(java.lang.Object o) { if (this == o) { return true; } if ((o == null) || (getClass() != o.getClass())) { return false; } com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.value != null) { return false;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings", "truth_type": "com.cloudbees.api.config", "context": "} <mask><mask><mask><mask><mask><mask><mask><mask>.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings", "truth_type": "com.cloudbees.api.config", "context": "} com.cloudbees.api.config.ParameterSettings that = ((<mask><mask><mask><mask><mask><mask><mask><mask>.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "this.name.equals", "truth_type": "this.name", "context": "} com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !<mask><mask><mask>.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.name", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.name", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "this.value.equals", "truth_type": "this.value", "context": "} com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !<mask><mask><mask>.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.value", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.value", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0;"}, {"fqn": "this.name.hashCode()", "truth_type": "this.name", "context": "} com.cloudbees.api.config.ParameterSettings that = ((com.cloudbees.api.config.ParameterSettings) (o)); if (this.name != null ? !this.name.equals com.cloudbees.api.config.ParameterSettings.name) : com.cloudbees.api.config.ParameterSettings.name != null) { return false; } if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? <mask><mask><mask>.hashCode() : 0;"}, {"fqn": "this.value.equals", "truth_type": "this.value", "context": "} if (this.value != null ? !<mask><mask><mask>.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0; result = (31 * result) + (this.value != null ? this.value.hashCode() : 0); return result;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.value", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} if (this.value != null ? !this.value.equals <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0; result = (31 * result) + (this.value != null ? this.value.hashCode() : 0); return result;"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.value", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0; result = (31 * result) + (this.value != null ? this.value.hashCode() : 0); return result;"}, {"fqn": "this.name.hashCode()", "truth_type": "this.name", "context": "} if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? <mask><mask><mask>.hashCode() : 0; result = (31 * result) + (this.value != null ? this.value.hashCode() : 0); return result;"}, {"fqn": "this.value.hashCode()", "truth_type": "this.value", "context": "} if (this.value != null ? !this.value.equals com.cloudbees.api.config.ParameterSettings.value) : com.cloudbees.api.config.ParameterSettings.value != null) { return false; } return true; } public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0; result = (31 * result) + (this.value != null ? <mask><mask><mask>.hashCode() : 0); return result;"}, {"fqn": "this.name.hashCode()", "truth_type": "this.name", "context": "} public int hashCode() { int result = (this.name != null) ? <mask><mask><mask>.hashCode() : 0; result = (31 * result) + (this.value != null ? this.value.hashCode() : 0); return result; } };"}, {"fqn": "this.value.hashCode()", "truth_type": "this.value", "context": "} public int hashCode() { int result = (this.name != null) ? this.name.hashCode() : 0; result = (31 * result) + (this.value != null ? <mask><mask><mask>.hashCode() : 0); return result; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ApplicationDeleteResponse { private boolean deleted; public ApplicationDeleteResponse() { } public ApplicationDeleteResponse(boolean deleted) { this.deleted = deleted; } public boolean isDeleted() { return this.deleted; } };"}, {"fqn": "javax.net.SocketFactory", "truth_type": "javax.net", "context": "public abstract class TrustAllSocketFactory extends <mask><mask><mask><mask><mask>.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "javax.net.ssl.SSLSocketFactory", "truth_type": "javax.net.ssl", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static <mask><mask><mask><mask><mask><mask><mask>.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "javax.net.ssl.SSLContext", "truth_type": "javax.net.ssl", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { <mask><mask><mask><mask><mask><mask><mask>.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "javax.net.ssl.SSLContext.getInstance()", "truth_type": "javax.net.ssl.SSLContext", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "javax.net.ssl.SSLContext.init()", "truth_type": "javax.net.ssl.SSLContext", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "javax.net.ssl.TrustManager", "truth_type": "javax.net.ssl", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new <mask><mask><mask><mask><mask><mask><mask>.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "javax.net.ssl.X509TrustManager()", "truth_type": "javax.net.ssl", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new <mask><mask><mask><mask><mask><mask><mask>.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.security.cert.X509Certificate", "truth_type": "java.security.cert", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(<mask><mask><mask><mask><mask>.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.security.cert.CertificateException", "truth_type": "java.security.cert", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws <mask><mask><mask><mask><mask>.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.security.cert.X509Certificate", "truth_type": "java.security.cert", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(<mask><mask><mask><mask><mask>.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.security.cert.CertificateException", "truth_type": "java.security.cert", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws <mask><mask><mask><mask><mask>.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "com.cloudbees.api.TrustAllSocketFactory", "truth_type": "com.cloudbees.api", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (<mask><mask><mask><mask><mask><mask>.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.util.logging.Logger.isLoggable()", "truth_type": "java.util.logging.Logger", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory <mask><mask><mask><mask><mask><mask><mask><mask><mask>.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.util.logging.Level.FINE", "truth_type": "java.util.logging.Level", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(<mask><mask><mask><mask><mask><mask><mask><mask>.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "com.cloudbees.api.TrustAllSocketFactory", "truth_type": "com.cloudbees.api", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { <mask><mask><mask><mask><mask><mask>.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.util.logging.Logger.fine()", "truth_type": "java.util.logging.Logger", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory <mask><mask><mask><mask><mask><mask><mask><mask><mask>.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.util.Arrays.asList()", "truth_type": "java.util.Arrays", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + <mask><mask><mask><mask><mask><mask>.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.security.cert.X509Certificate", "truth_type": "java.security.cert", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public <mask><mask><mask><mask><mask>.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.security.cert.X509Certificate", "truth_type": "java.security.cert", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new <mask><mask><mask><mask><mask>.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "java.security.SecureRandom()", "truth_type": "java.security", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new <mask><mask><mask>.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory();"}, {"fqn": "javax.net.ssl.SSLContext.getSocketFactory()", "truth_type": "javax.net.ssl.SSLContext", "context": "public abstract class TrustAllSocketFactory extends javax.net.SocketFactory { public static javax.net.ssl.SSLSocketFactory create() { try { javax.net.ssl.SSLContext context = javax.net.ssl.SSLContext.getInstance(String);  javax.net.ssl.SSLContext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public void checkClientTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { } public void checkServerTrusted(java.security.cert.X509Certificate[] x509Certificates, java.lang.String authType) throws java.security.cert.CertificateException { if (com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.isLoggable(java.util.logging.Level.FINE)) { com.cloudbees.api.TrustAllSocketFactory java.util.logging.Logger.fine(String + java.util.Arrays.asList(x509Certificates)); } } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getSocketFactory();"}, {"fqn": "java.security.cert.X509Certificate", "truth_type": "java.security.cert", "context": "} } public <mask><mask><mask><mask><mask>.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e);"}, {"fqn": "java.security.cert.X509Certificate", "truth_type": "java.security.cert", "context": "} } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new <mask><mask><mask><mask><mask>.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e);"}, {"fqn": "java.security.SecureRandom()", "truth_type": "java.security", "context": "} } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new <mask><mask><mask>.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e);"}, {"fqn": "javax.net.ssl.SSLContext.getSocketFactory()", "truth_type": "javax.net.ssl.SSLContext", "context": "} } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e);"}, {"fqn": "java.security.NoSuchAlgorithmException", "truth_type": "java.security", "context": "} } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory(); } catch (<mask><mask><mask>.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e);"}, {"fqn": "java.lang.Error()", "truth_type": "java.lang", "context": "} } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new <mask><mask><mask>.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e);"}, {"fqn": "java.security.KeyManagementException", "truth_type": "java.security", "context": "} } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (<mask><mask><mask>.KeyManagementException e) { throw new java.lang.Error(e);"}, {"fqn": "java.lang.Error()", "truth_type": "java.lang", "context": "} } public java.security.cert.X509Certificate[] getAcceptedIssuers() { return new java.security.cert.X509Certificate[0]; } } }, new java.security.SecureRandom()); return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new <mask><mask><mask>.Error(e);"}, {"fqn": "javax.net.ssl.SSLContext.getSocketFactory()", "truth_type": "javax.net.ssl.SSLContext", "context": "return <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.security.NoSuchAlgorithmException", "truth_type": "java.security", "context": "return javax.net.ssl.SSLContext.getSocketFactory(); } catch (<mask><mask><mask>.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.lang.Error()", "truth_type": "java.lang", "context": "return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new <mask><mask><mask>.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.security.KeyManagementException", "truth_type": "java.security", "context": "return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (<mask><mask><mask>.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.lang.Error()", "truth_type": "java.lang", "context": "return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new <mask><mask><mask>.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.util.logging.Logger", "truth_type": "java.util.logging", "context": "return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final <mask><mask><mask><mask><mask><mask>.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.util.logging.Logger.getLogger()", "truth_type": "java.util.logging.Logger", "context": "return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = <mask><mask><mask><mask><mask><mask><mask><mask><mask>.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "com.cloudbees.api.TrustAllSocketFactory.class.getName()", "truth_type": "com.cloudbees.api.TrustAllSocketFactory.class", "context": "return javax.net.ssl.SSLContext.getSocketFactory(); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.Error(e); } catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName()); };"}, {"fqn": "java.security.KeyManagementException", "truth_type": "java.security", "context": "} catch (<mask><mask><mask>.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.lang.Error()", "truth_type": "java.lang", "context": "} catch (java.security.KeyManagementException e) { throw new <mask><mask><mask>.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.util.logging.Logger", "truth_type": "java.util.logging", "context": "} catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final <mask><mask><mask><mask><mask><mask>.Logger LOGGER = java.util.logging.Logger.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "java.util.logging.Logger.getLogger()", "truth_type": "java.util.logging.Logger", "context": "} catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = <mask><mask><mask><mask><mask><mask><mask><mask><mask>.getLogger(com.cloudbees.api.TrustAllSocketFactory.class.getName()); };"}, {"fqn": "com.cloudbees.api.TrustAllSocketFactory.class.getName()", "truth_type": "com.cloudbees.api.TrustAllSocketFactory.class", "context": "} catch (java.security.KeyManagementException e) { throw new java.lang.Error(e); } } private static final java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName()); };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ApplicationJarHashesResponse { java.util.Map<java.lang.String, java.lang.String> jarHash; public ApplicationJarHashesResponse() { } public ApplicationJarHashesResponse(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } public java.util.Map<java.lang.String, java.lang.String> getJarHash() { return this.jarHash; } public void setJarHash(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ApplicationJarHashesResponse { <mask><mask><mask>.Map<java.lang.String, java.lang.String> jarHash; public ApplicationJarHashesResponse() { } public ApplicationJarHashesResponse(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } public java.util.Map<java.lang.String, java.lang.String> getJarHash() { return this.jarHash; } public void setJarHash(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ApplicationJarHashesResponse { java.util.Map<java.lang.String, java.lang.String> jarHash; public ApplicationJarHashesResponse() { } public ApplicationJarHashesResponse(<mask><mask><mask>.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } public java.util.Map<java.lang.String, java.lang.String> getJarHash() { return this.jarHash; } public void setJarHash(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ApplicationJarHashesResponse { java.util.Map<java.lang.String, java.lang.String> jarHash; public ApplicationJarHashesResponse() { } public ApplicationJarHashesResponse(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getJarHash() { return this.jarHash; } public void setJarHash(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ApplicationJarHashesResponse { java.util.Map<java.lang.String, java.lang.String> jarHash; public ApplicationJarHashesResponse() { } public ApplicationJarHashesResponse(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } public java.util.Map<java.lang.String, java.lang.String> getJarHash() { return this.jarHash; } public void setJarHash(<mask><mask><mask>.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getJarHash() { return this.jarHash; } public void setJarHash(java.util.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.util.Map<java.lang.String, java.lang.String> getJarHash() { return this.jarHash; } public void setJarHash(<mask><mask><mask>.Map<java.lang.String, java.lang.String> jarHash) { this.jarHash = jarHash; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ConfigurationParametersDeleteResponse { private java.lang.String status; public ConfigurationParametersDeleteResponse() { } public ConfigurationParametersDeleteResponse(java.lang.String status) { this.status = status; } public java.lang.String getStatus() { return this.status; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ApplicationScaleResponse { private java.lang.String status; public ApplicationScaleResponse() { } public ApplicationScaleResponse(java.lang.String status) { this.status = status; } public java.lang.String getStatus() { return this.status; } };"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "public class DateHelper { public static <mask><mask><mask>.Date parseW3CDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); int tzMinuteIndex = dateString.length() - 3; if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "public class DateHelper { public static java.util.Date parseW3CDate(java.lang.String dateString) throws <mask><mask><mask>.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); int tzMinuteIndex = dateString.length() - 3; if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.SimpleDateFormat", "truth_type": "java.text", "context": "public class DateHelper { public static java.util.Date parseW3CDate(java.lang.String dateString) throws java.text.ParseException { <mask><mask><mask>.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); int tzMinuteIndex = dateString.length() - 3; if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.SimpleDateFormat()", "truth_type": "java.text", "context": "public class DateHelper { public static java.util.Date parseW3CDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new <mask><mask><mask>.SimpleDateFormat(String, java.util.Locale.US); int tzMinuteIndex = dateString.length() - 3; if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.util.Locale.US", "truth_type": "java.util.Locale", "context": "public class DateHelper { public static java.util.Date parseW3CDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, <mask><mask><mask><mask><mask><mask>.US); int tzMinuteIndex = dateString.length() - 3; if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "public class DateHelper { public static java.util.Date parseW3CDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); int tzMinuteIndex = dateString.length() - 3; if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } <mask><mask><mask>.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.SimpleDateFormat.parse()", "truth_type": "java.text.SimpleDateFormat", "context": "public class DateHelper { public static java.util.Date parseW3CDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); int tzMinuteIndex = dateString.length() - 3; if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = <mask><mask><mask><mask><mask><mask><mask>.parse(dateString); return d;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } <mask><mask><mask>.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.text.SimpleDateFormat.parse()", "truth_type": "java.text.SimpleDateFormat", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = <mask><mask><mask><mask><mask><mask><mask>.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static <mask><mask><mask>.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws <mask><mask><mask>.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.text.SimpleDateFormat", "truth_type": "java.text", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { <mask><mask><mask>.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.text.SimpleDateFormat()", "truth_type": "java.text", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new <mask><mask><mask>.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.util.Locale.US", "truth_type": "java.util.Locale", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, <mask><mask><mask><mask><mask><mask>.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); <mask><mask><mask>.Date d = java.text.SimpleDateFormat.parse(dateString);"}, {"fqn": "java.text.SimpleDateFormat.parse()", "truth_type": "java.text.SimpleDateFormat", "context": "if (dateString.charAt(tzMinuteIndex) == ':') { dateString = dateString.substring(0, tzMinuteIndex) + dateString.substring(tzMinuteIndex + 1); } java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseRssDate(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = <mask><mask><mask><mask><mask><mask><mask>.parse(dateString);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "<mask><mask><mask>.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.SimpleDateFormat.parse()", "truth_type": "java.text.SimpleDateFormat", "context": "java.util.Date d = <mask><mask><mask><mask><mask><mask><mask>.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static <mask><mask><mask>.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws <mask><mask><mask>.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.SimpleDateFormat", "truth_type": "java.text", "context": "java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { <mask><mask><mask>.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.SimpleDateFormat()", "truth_type": "java.text", "context": "java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new <mask><mask><mask>.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.util.Locale.US", "truth_type": "java.util.Locale", "context": "java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, <mask><mask><mask><mask><mask><mask>.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); <mask><mask><mask>.Date d = java.text.SimpleDateFormat.parse(dateString); return d;"}, {"fqn": "java.text.SimpleDateFormat.parse()", "truth_type": "java.text.SimpleDateFormat", "context": "java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = <mask><mask><mask><mask><mask><mask><mask>.parse(dateString); return d;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public static <mask><mask><mask>.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws <mask><mask><mask>.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.text.SimpleDateFormat", "truth_type": "java.text", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { <mask><mask><mask>.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.text.SimpleDateFormat()", "truth_type": "java.text", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new <mask><mask><mask>.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.util.Locale.US", "truth_type": "java.util.Locale", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, <mask><mask><mask><mask><mask><mask>.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); <mask><mask><mask>.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.text.SimpleDateFormat.parse()", "truth_type": "java.text.SimpleDateFormat", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = <mask><mask><mask><mask><mask><mask><mask>.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(<mask><mask><mask>.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.text.SimpleDateFormat", "truth_type": "java.text", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { <mask><mask><mask>.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.text.SimpleDateFormat()", "truth_type": "java.text", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new <mask><mask><mask>.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.util.Locale.US", "truth_type": "java.util.Locale", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, <mask><mask><mask><mask><mask><mask>.US); java.lang.String dateString = java.text.SimpleDateFormat.format(d);"}, {"fqn": "java.text.SimpleDateFormat.format()", "truth_type": "java.text.SimpleDateFormat", "context": "} public static java.util.Date parseW3CDateWithFractionalSeconds(java.lang.String dateString) throws java.text.ParseException { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.util.Date d = java.text.SimpleDateFormat.parse(dateString); return d; } public static java.lang.String toW3CDateString(java.util.Date d) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(String, java.util.Locale.US); java.lang.String dateString = <mask><mask><mask><mask><mask><mask><mask>.format(d);"}, {"fqn": "java.text.SimpleDateFormat.format()", "truth_type": "java.text.SimpleDateFormat", "context": "java.lang.String dateString = <mask><mask><mask><mask><mask><mask><mask>.format(d); int tzMinuteIndex = dateString.length() - 2; dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "java.lang.String dateString = java.text.SimpleDateFormat.format(d); int tzMinuteIndex = dateString.length() - 2; dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static <mask><mask><mask>.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString);"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "java.lang.String dateString = java.text.SimpleDateFormat.format(d); int tzMinuteIndex = dateString.length() - 2; dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws <mask><mask><mask>.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString);"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDate()", "truth_type": "com.cloudbees.api.DateHelper", "context": "java.lang.String dateString = java.text.SimpleDateFormat.format(d); int tzMinuteIndex = dateString.length() - 2; dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDate(dateString);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static <mask><mask><mask>.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (java.text.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws <mask><mask><mask>.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (java.text.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDate()", "truth_type": "com.cloudbees.api.DateHelper", "context": "dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDate(dateString); } catch (java.text.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (<mask><mask><mask>.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds()", "truth_type": "com.cloudbees.api.DateHelper", "context": "dateString = (dateString.substring(0, tzMinuteIndex) + String) + dateString.substring(tzMinuteIndex); return dateString; } public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (java.text.ParseException e) { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public static <mask><mask><mask>.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (java.text.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws <mask><mask><mask>.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (java.text.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDate()", "truth_type": "com.cloudbees.api.DateHelper", "context": "} public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDate(dateString); } catch (java.text.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (<mask><mask><mask>.ParseException e) { return com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDateWithFractionalSeconds()", "truth_type": "com.cloudbees.api.DateHelper", "context": "} public static java.util.Date parseW3CDateRobust(java.lang.String dateString) throws java.text.ParseException { try { return com.cloudbees.api.DateHelper.parseW3CDate(dateString); } catch (java.text.ParseException e) { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDateWithFractionalSeconds(dateString); } } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ApplicationDeployArchiveResponse { private java.lang.String id; private java.lang.String url; public ApplicationDeployArchiveResponse() { } public ApplicationDeployArchiveResponse(java.lang.String id, java.lang.String url) { this.id = id; this.url = url; } public java.lang.String getId() { return this.id;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class DatabaseSnapshotDeployResponse { private boolean deployed; public DatabaseSnapshotDeployResponse() { } public DatabaseSnapshotDeployResponse(boolean deployed) { this.deployed = deployed; } public boolean isDeployed() { return this.deployed; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private <mask><mask><mask>.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "com.cloudbees.api.DatabaseSnapshotInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<<mask><mask><mask><mask><mask><mask>.DatabaseSnapshotInfo> snapshots; public java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public <mask><mask><mask>.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "com.cloudbees.api.DatabaseSnapshotInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public java.util.List<<mask><mask><mask><mask><mask><mask>.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new <mask><mask><mask>.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "com.cloudbees.api.DatabaseSnapshotInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask>.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(<mask><mask><mask>.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "com.cloudbees.api.DatabaseSnapshotInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseSnapshotListResponse { private java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> snapshots; public java.util.List<com.cloudbees.api.DatabaseSnapshotInfo> getSnapshots() { if (this.snapshots == null) { this.snapshots = new java.util.ArrayList<com.cloudbees.api.DatabaseSnapshotInfo>(); } return this.snapshots; } public void setSnapshots(java.util.List<<mask><mask><mask><mask><mask><mask>.DatabaseSnapshotInfo> snapshots) { this.snapshots = snapshots; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ServiceResourceInfo { java.lang.String id; java.util.Map<java.lang.String, java.lang.String> config; java.util.Map<java.lang.String, java.lang.String> settings; java.lang.String resourceType; java.lang.String message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceInfo { java.lang.String id; <mask><mask><mask>.Map<java.lang.String, java.lang.String> config; java.util.Map<java.lang.String, java.lang.String> settings; java.lang.String resourceType; java.lang.String message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceInfo { java.lang.String id; java.util.Map<java.lang.String, java.lang.String> config; <mask><mask><mask>.Map<java.lang.String, java.lang.String> settings; java.lang.String resourceType; java.lang.String message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings; java.lang.String resourceType; java.lang.String message; java.lang.String service; public ServiceResourceInfo() { } public ServiceResourceInfo(java.lang.String id, java.util.Map<java.lang.String, java.lang.String> config, java.lang.String message) { this.config = config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.util.Map<java.lang.String, java.lang.String> settings; java.lang.String resourceType; java.lang.String message; java.lang.String service; public ServiceResourceInfo() { } public ServiceResourceInfo(java.lang.String id, <mask><mask><mask>.Map<java.lang.String, java.lang.String> config, java.lang.String message) { this.config = config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.lang.String message; java.lang.String service; public ServiceResourceInfo() { } public ServiceResourceInfo(java.lang.String id, <mask><mask><mask>.Map<java.lang.String, java.lang.String> config, java.lang.String message) { this.config = config; this.id = id; this.message = message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public ServiceResourceInfo() { } public ServiceResourceInfo(java.lang.String id, <mask><mask><mask>.Map<java.lang.String, java.lang.String> config, java.lang.String message) { this.config = config; this.id = id; this.message = message; } public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(java.util.Map<java.lang.String, java.lang.String> config) { this.config = config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public ServiceResourceInfo() { } public ServiceResourceInfo(java.lang.String id, java.util.Map<java.lang.String, java.lang.String> config, java.lang.String message) { this.config = config; this.id = id; this.message = message; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(java.util.Map<java.lang.String, java.lang.String> config) { this.config = config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public ServiceResourceInfo() { } public ServiceResourceInfo(java.lang.String id, java.util.Map<java.lang.String, java.lang.String> config, java.lang.String message) { this.config = config; this.id = id; this.message = message; } public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(<mask><mask><mask>.Map<java.lang.String, java.lang.String> config) { this.config = config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setConfig(<mask><mask><mask>.Map<java.lang.String, java.lang.String> config) { this.config = config; } public java.lang.String getId() { return this.id; } public void setId(java.lang.String id) { this.id = id; } public java.lang.String getMessage() { return this.message; } public void setMessage(java.lang.String message) { this.message = message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setId(java.lang.String id) { this.id = id; } public java.lang.String getMessage() { return this.message; } public void setMessage(java.lang.String message) { this.message = message; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setId(java.lang.String id) { this.id = id; } public java.lang.String getMessage() { return this.message; } public void setMessage(java.lang.String message) { this.message = message; } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings) { this.settings = settings;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setMessage(java.lang.String message) { this.message = message; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } public java.lang.String getResourceType() { return this.resourceType; } public void setResourceType(java.lang.String resourceType) { this.resourceType = resourceType;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setMessage(java.lang.String message) { this.message = message; } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } public java.lang.String getResourceType() { return this.resourceType; } public void setResourceType(java.lang.String resourceType) { this.resourceType = resourceType;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setSettings(<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } public java.lang.String getResourceType() { return this.resourceType; } public void setResourceType(java.lang.String resourceType) { this.resourceType = resourceType; } public java.lang.String getService() { return this.service; } public void setService(java.lang.String service) { this.service = service;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class DatabaseInfoResponse { private com.cloudbees.api.DatabaseInfo database; public DatabaseInfoResponse(com.cloudbees.api.DatabaseInfo database) { this.database = database; } public com.cloudbees.api.DatabaseInfo getDatabaseInfo() { return this.database; } };"}, {"fqn": "com.cloudbees.api.DatabaseInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseInfoResponse { private <mask><mask><mask><mask><mask><mask>.DatabaseInfo database; public DatabaseInfoResponse(com.cloudbees.api.DatabaseInfo database) { this.database = database; } public com.cloudbees.api.DatabaseInfo getDatabaseInfo() { return this.database; } };"}, {"fqn": "com.cloudbees.api.DatabaseInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseInfoResponse { private com.cloudbees.api.DatabaseInfo database; public DatabaseInfoResponse(<mask><mask><mask><mask><mask><mask>.DatabaseInfo database) { this.database = database; } public com.cloudbees.api.DatabaseInfo getDatabaseInfo() { return this.database; } };"}, {"fqn": "com.cloudbees.api.DatabaseInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class DatabaseInfoResponse { private com.cloudbees.api.DatabaseInfo database; public DatabaseInfoResponse(com.cloudbees.api.DatabaseInfo database) { this.database = database; } public <mask><mask><mask><mask><mask><mask>.DatabaseInfo getDatabaseInfo() { return this.database; } };"}, {"fqn": "com.cloudbees.api.CBObject", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends <mask><mask><mask><mask><mask><mask>.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public <mask><mask><mask>.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<<mask><mask><mask><mask><mask><mask>.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBUser", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public <mask><mask><mask><mask><mask><mask>.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBUser", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(<mask><mask><mask><mask><mask><mask>.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws <mask><mask><mask>.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "this.root.addUserToAccount()", "truth_type": "this.root", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return <mask><mask><mask>.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public <mask><mask><mask><mask><mask><mask>.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(<mask><mask><mask><mask><mask><mask>.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws <mask><mask><mask>.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "this.root.", "truth_type": "this.root", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return <mask><mask><mask>.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<<mask><mask><mask><mask><mask><mask>.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription.class", "truth_type": "com.cloudbees.api.CBSubscription", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public <mask><mask><mask><mask><mask><mask>.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, <mask><mask><mask><mask><mask><mask>.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws <mask><mask><mask>.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "this.root.", "truth_type": "this.root", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return <mask><mask><mask>.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<<mask><mask><mask><mask><mask><mask>.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String);"}, {"fqn": "com.cloudbees.api.CBSubscription.class", "truth_type": "com.cloudbees.api.CBSubscription", "context": "public class CBAccount extends com.cloudbees.api.CBObject { java.lang.String name; public java.util.List<com.cloudbees.api.CBSubscription> subscriptions; public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class, String);"}, {"fqn": "com.cloudbees.api.CBUser", "truth_type": "com.cloudbees.api", "context": "public <mask><mask><mask><mask><mask><mask>.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBUser", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(<mask><mask><mask><mask><mask><mask>.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws <mask><mask><mask>.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "this.root.addUserToAccount()", "truth_type": "this.root", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return <mask><mask><mask>.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public <mask><mask><mask><mask><mask><mask>.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(<mask><mask><mask><mask><mask><mask>.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws <mask><mask><mask>.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "this.root.", "truth_type": "this.root", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return <mask><mask><mask>.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<<mask><mask><mask><mask><mask><mask>.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription.class", "truth_type": "com.cloudbees.api.CBSubscription", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public <mask><mask><mask><mask><mask><mask>.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, <mask><mask><mask><mask><mask><mask>.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws <mask><mask><mask>.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "this.root.", "truth_type": "this.root", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return <mask><mask><mask>.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<<mask><mask><mask><mask><mask><mask>.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription.class", "truth_type": "com.cloudbees.api.CBSubscription", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public <mask><mask><mask>.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<<mask><mask><mask><mask><mask><mask>.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws <mask><mask><mask>.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.util.Arrays.asList()", "truth_type": "java.util.Arrays", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return <mask><mask><mask><mask><mask><mask>.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "this.root.jsonPOJORequest()", "truth_type": "this.root", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (<mask><mask><mask>.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "public com.cloudbees.api.CBUser addUser(com.cloudbees.api.CBUser user) throws java.io.IOException { return this.root.addUserToAccount(this, user); } public com.cloudbees.api.CBSubscription addSubscription(com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((String + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, <mask><mask><mask><mask><mask><mask>.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "} public <mask><mask><mask><mask><mask><mask>.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, <mask><mask><mask><mask><mask><mask>.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws <mask><mask><mask>.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "this.root.", "truth_type": "this.root", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return <mask><mask><mask>.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<<mask><mask><mask><mask><mask><mask>.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription.class", "truth_type": "com.cloudbees.api.CBSubscription", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public <mask><mask><mask>.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<<mask><mask><mask><mask><mask><mask>.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws <mask><mask><mask>.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "java.util.Arrays.asList()", "truth_type": "java.util.Arrays", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return <mask><mask><mask><mask><mask><mask>.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "this.root.jsonPOJORequest()", "truth_type": "this.root", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (<mask><mask><mask>.jsonPOJORequest((String + this.name) + String, null, com.cloudbees.api.CBSubscription[].class, String)))); } };"}, {"fqn": "com.cloudbees.api.CBSubscription", "truth_type": "com.cloudbees.api", "context": "} public com.cloudbees.api.CBSubscription addSubscription(java.lang.String userid, com.cloudbees.api.CBSubscription sub) throws java.io.IOException { return this.root.<com.cloudbees.api.CBSubscription>jsonPOJORequest((((String + userid) + String) + this.name) + String, sub, com.cloudbees.api.CBSubscription.class, String); } public java.util.List<com.cloudbees.api.CBSubscription> getSubscriptions() throws java.io.IOException { return java.util.Arrays.asList(((java.lang.Object[]) (this.root.jsonPOJORequest((String + this.name) + String, null, <mask><mask><mask><mask><mask><mask>.CBSubscription[].class, String)))); } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ApplicationRestartResponse { private boolean restarted; public ApplicationRestartResponse() { } public ApplicationRestartResponse(boolean restarted) { this.restarted = restarted; } public boolean isRestarted() { return this.restarted; } };"}, {"fqn": "java.lang.IllegalAccessError()", "truth_type": "java.lang", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new <mask><mask><mask>.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static <mask><mask><mask>.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(<mask><mask><mask>.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, <mask><mask><mask>.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, <mask><mask><mask>.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws <mask><mask><mask>.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { <mask><mask><mask>.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, <mask><mask><mask>.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.getDeltas()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.makeTmpDir()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.util.zip.ZipFile", "truth_type": "java.util.zip", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); <mask><mask><mask><mask><mask>.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.util.zip.ZipFile()", "truth_type": "java.util.zip", "context": "private static final java.lang.String DELTA_FILE = String; private ArchiveUtils() { throw new java.lang.IllegalAccessError(String); } public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new <mask><mask><mask><mask><mask>.ZipFile(warFile.getAbsolutePath());"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public static <mask><mask><mask>.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public static java.io.File createDeltaWarFile(<mask><mask><mask>.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, <mask><mask><mask>.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, <mask><mask><mask>.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws <mask><mask><mask>.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { <mask><mask><mask>.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, <mask><mask><mask>.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.getDeltas()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.makeTmpDir()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.zip.ZipFile", "truth_type": "java.util.zip", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); <mask><mask><mask><mask><mask>.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.zip.ZipFile()", "truth_type": "java.util.zip", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new <mask><mask><mask><mask><mask>.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.Enumeration", "truth_type": "java.util", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); <mask><mask><mask>.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends <mask><mask><mask><mask><mask>.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.zip.ZipFile.entries()", "truth_type": "java.util.zip.ZipFile", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = <mask><mask><mask><mask><mask><mask><mask><mask>.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.Enumeration.hasMoreElements()", "truth_type": "java.util.Enumeration", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  <mask><mask><mask><mask><mask><mask><mask>.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { <mask><mask><mask><mask><mask>.ZipEntry entry = java.util.Enumeration.nextElement();"}, {"fqn": "java.util.Enumeration.nextElement()", "truth_type": "java.util.Enumeration", "context": "} public static java.io.File createDeltaWarFile(java.util.Map<java.lang.String, java.lang.Long> existingArchiveCheckSums, java.io.File warFile, java.lang.String tmp) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = com.cloudbees.upload.ArchiveUtils.getDeltas(warFile.getAbsolutePath(), existingArchiveCheckSums); java.lang.String tmpDir = com.cloudbees.upload.ArchiveUtils.makeTmpDir(warFile, tmp); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = <mask><mask><mask><mask><mask><mask><mask>.nextElement();"}, {"fqn": "java.util.zip.ZipFile", "truth_type": "java.util.zip", "context": "<mask><mask><mask><mask><mask>.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.zip.ZipFile()", "truth_type": "java.util.zip", "context": "java.util.zip.ZipFile zipFile = new <mask><mask><mask><mask><mask>.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.Enumeration", "truth_type": "java.util", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); <mask><mask><mask>.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends <mask><mask><mask><mask><mask>.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.zip.ZipFile.entries()", "truth_type": "java.util.zip.ZipFile", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = <mask><mask><mask><mask><mask><mask><mask><mask>.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.Enumeration.hasMoreElements()", "truth_type": "java.util.Enumeration", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  <mask><mask><mask><mask><mask><mask><mask>.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { <mask><mask><mask><mask><mask>.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.Enumeration.nextElement()", "truth_type": "java.util.Enumeration", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = <mask><mask><mask><mask><mask><mask><mask>.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); <mask><mask><mask>.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.Map.get", "truth_type": "java.util.Map", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = <mask><mask><mask><mask><mask>.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.zip.ZipEntry.getName()", "truth_type": "java.util.zip.ZipEntry", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get <mask><mask><mask><mask><mask><mask><mask><mask>.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.lang.Integer.intValue()", "truth_type": "java.lang.Integer", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  <mask><mask><mask><mask><mask>.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(warFile.getAbsolutePath()); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.unArchiveZipEntry(tmpDir, zipFile, entry);"}, {"fqn": "java.util.Enumeration.hasMoreElements()", "truth_type": "java.util.Enumeration", "context": "while  <mask><mask><mask><mask><mask><mask><mask>.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "while  java.util.Enumeration.hasMoreElements()) { <mask><mask><mask><mask><mask>.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.util.Enumeration.nextElement()", "truth_type": "java.util.Enumeration", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = <mask><mask><mask><mask><mask><mask><mask>.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); <mask><mask><mask>.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.util.Map.get", "truth_type": "java.util.Map", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = <mask><mask><mask><mask><mask>.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.util.zip.ZipEntry.getName()", "truth_type": "java.util.zip.ZipEntry", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get <mask><mask><mask><mask><mask><mask><mask><mask>.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.lang.Integer.intValue()", "truth_type": "java.lang.Integer", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  <mask><mask><mask><mask><mask>.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } <mask><mask><mask>.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new <mask><mask><mask>.File(tmpDir + String);  java.io.File.mkdirs();"}, {"fqn": "java.io.File.mkdirs()", "truth_type": "java.io.File", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement(); java.lang.Integer delta = java.util.Map.get java.util.zip.ZipEntry.getName()); if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  <mask><mask><mask><mask><mask>.mkdirs();"}, {"fqn": "java.lang.Integer.intValue()", "truth_type": "java.lang.Integer", "context": "if ((delta != null) &&  <mask><mask><mask><mask><mask>.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } <mask><mask><mask>.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new <mask><mask><mask>.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "java.io.File.mkdirs()", "truth_type": "java.io.File", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  <mask><mask><mask><mask><mask>.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); <mask><mask><mask>.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new <mask><mask><mask>.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream();"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream()", "truth_type": "com.thoughtworks.xstream.XStream", "context": "if ((delta != null) &&  java.lang.Integer.intValue() != com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)) { com.cloudbees.upload.ArchiveUtils.unArchiveZipEntry(tmpDir, zipFile, entry); } } java.io.File metaInfDir = new java.io.File(tmpDir + String);  java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream();"}, {"fqn": "java.io.File.mkdirs()", "truth_type": "java.io.File", "context": " <mask><mask><mask><mask><mask>.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": " java.io.File.mkdirs(); <mask><mask><mask>.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": " java.io.File.mkdirs(); java.io.File deltaFile = new <mask><mask><mask>.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": " java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream()", "truth_type": "com.thoughtworks.xstream.XStream", "context": " java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);"}, {"fqn": "java.io.FileOutputStream", "truth_type": "java.io", "context": " java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); <mask><mask><mask>.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);"}, {"fqn": "java.io.FileOutputStream()", "truth_type": "java.io", "context": " java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new <mask><mask><mask>.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.toXML()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " java.io.File.mkdirs(); java.io.File deltaFile = new java.io.File(metaInfDir, String); com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.toXML(deltas, fos);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);  java.io.FileOutputStream.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent();"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream()", "truth_type": "com.thoughtworks.xstream.XStream", "context": "com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);  java.io.FileOutputStream.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent();"}, {"fqn": "java.io.FileOutputStream", "truth_type": "java.io", "context": "com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); <mask><mask><mask>.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);  java.io.FileOutputStream.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent();"}, {"fqn": "java.io.FileOutputStream()", "truth_type": "java.io", "context": "com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new <mask><mask><mask>.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);  java.io.FileOutputStream.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent();"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.toXML()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": "com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.toXML(deltas, fos);  java.io.FileOutputStream.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent();"}, {"fqn": "java.io.FileOutputStream.close()", "truth_type": "java.io.FileOutputStream", "context": "com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream(); java.io.FileOutputStream fos = new java.io.FileOutputStream(deltaFile);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);  <mask><mask><mask><mask><mask><mask><mask>.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent();"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.toXML()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.toXML(deltas, fos);  java.io.FileOutputStream.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent(); java.lang.String deltaArchiveFile = (deltaDir + String) + warFile.getName(); com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile);"}, {"fqn": "java.io.FileOutputStream.close()", "truth_type": "java.io.FileOutputStream", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);  <mask><mask><mask><mask><mask><mask><mask>.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent(); java.lang.String deltaArchiveFile = (deltaDir + String) + warFile.getName(); com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.archiveDirectory()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.toXML(deltas, fos);  java.io.FileOutputStream.close(); java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent(); java.lang.String deltaArchiveFile = (deltaDir + String) + warFile.getName(); <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.archiveDirectory(tmpDir, deltaArchiveFile);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.archiveDirectory()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent(); java.lang.String deltaArchiveFile = (deltaDir + String) + warFile.getName(); <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.deleteAll()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent(); java.lang.String deltaArchiveFile = (deltaDir + String) + warFile.getName(); com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile);"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent(); java.lang.String deltaArchiveFile = (deltaDir + String) + warFile.getName(); com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new <mask><mask><mask>.File(tmpDir)); return new java.io.File(deltaArchiveFile);"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "java.lang.String deltaDir = (warFile.getParent() == null) ? String : warFile.getParent(); java.lang.String deltaArchiveFile = (deltaDir + String) + warFile.getName(); com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new <mask><mask><mask>.File(deltaArchiveFile);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.archiveDirectory()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.deleteAll()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new <mask><mask><mask>.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new <mask><mask><mask>.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static <mask><mask><mask>.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, <mask><mask><mask>.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, <mask><mask><mask>.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, <mask><mask><mask>.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws <mask><mask><mask>.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { <mask><mask><mask>.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, <mask><mask><mask>.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, <mask><mask><mask>.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); <mask><mask><mask>.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, <mask><mask><mask>.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.getCheckSums()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "com.cloudbees.upload.ArchiveUtils.archiveDirectory(tmpDir, deltaArchiveFile); com.cloudbees.upload.ArchiveUtils.deleteAll(new java.io.File(tmpDir)); return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getCheckSums(archiveFile);"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "return new <mask><mask><mask>.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "return new java.io.File(deltaArchiveFile); } public static <mask><mask><mask>.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, <mask><mask><mask>.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, <mask><mask><mask>.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, <mask><mask><mask>.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws <mask><mask><mask>.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { <mask><mask><mask>.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, <mask><mask><mask>.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Integer", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, <mask><mask><mask>.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); <mask><mask><mask>.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, <mask><mask><mask>.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.getCheckSums()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.concurrent.ConcurrentHashMap", "truth_type": "java.util.concurrent", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); <mask><mask><mask><mask><mask><mask>.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, <mask><mask><mask>.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.concurrent.ConcurrentHashMap", "truth_type": "java.util.concurrent", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new <mask><mask><mask><mask><mask><mask>.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, <mask><mask><mask>.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (<mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, <mask><mask><mask>.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.Map.entrySet()", "truth_type": "java.util.Map", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : <mask><mask><mask><mask><mask>.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey();"}, {"fqn": "java.util.zip.ZipEntry.getKey()", "truth_type": "java.util.zip.ZipEntry", "context": "return new java.io.File(deltaArchiveFile); } public static java.util.Map<java.lang.String, java.lang.Integer> getDeltas(java.lang.String archiveFile, java.util.Map<java.lang.String, java.lang.Long> oldCheckSums) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Integer> deltas = new java.util.HashMap<java.lang.String, java.lang.Integer>(); java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = <mask><mask><mask><mask><mask><mask><mask><mask>.getKey();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "<mask><mask><mask>.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "java.util.Map<java.lang.String, <mask><mask><mask>.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.getCheckSums()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.concurrent.ConcurrentHashMap", "truth_type": "java.util.concurrent", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); <mask><mask><mask><mask><mask><mask>.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, <mask><mask><mask>.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.concurrent.ConcurrentHashMap", "truth_type": "java.util.concurrent", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new <mask><mask><mask><mask><mask><mask>.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, <mask><mask><mask>.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (<mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, <mask><mask><mask>.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.Map.entrySet()", "truth_type": "java.util.Map", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : <mask><mask><mask><mask><mask>.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.zip.ZipEntry.getKey()", "truth_type": "java.util.zip.ZipEntry", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = <mask><mask><mask><mask><mask><mask><mask><mask>.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.get()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.Map.put()", "truth_type": "java.util.Map", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { <mask><mask><mask><mask><mask>.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "java.lang.Integer.valueOf()", "truth_type": "java.lang.Integer", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, <mask><mask><mask><mask><mask>.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue;"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "java.util.Map<java.lang.String, java.lang.Long> newCheckSums = com.cloudbees.upload.ArchiveUtils.getCheckSums(archiveFile); java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> checkSumsTmp = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>(oldCheckSums); for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_ADDED)); continue;"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "for (<mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "for (java.util.Map.Entry<java.lang.String, <mask><mask><mask>.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.Map.entrySet()", "truth_type": "java.util.Map", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : <mask><mask><mask><mask><mask>.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.zip.ZipEntry.getKey()", "truth_type": "java.util.zip.ZipEntry", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = <mask><mask><mask><mask><mask><mask><mask><mask>.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.get()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.Map.put()", "truth_type": "java.util.Map", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { <mask><mask><mask><mask><mask>.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.lang.Integer.valueOf()", "truth_type": "java.lang.Integer", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, <mask><mask><mask><mask><mask>.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((<mask><mask><mask>.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.zip.ZipEntry.getValue()", "truth_type": "java.util.zip.ZipEntry", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  <mask><mask><mask><mask><mask><mask><mask><mask>.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((<mask><mask><mask>.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.get()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.Map.put()", "truth_type": "java.util.Map", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { <mask><mask><mask><mask><mask>.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.lang.Integer.valueOf()", "truth_type": "java.lang.Integer", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, <mask><mask><mask><mask><mask>.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_UPDATED));  java.util.concurrent.ConcurrentHashMap.remove(key);"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.remove()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": "for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry : java.util.Map.entrySet()) { java.lang.String key = java.util.zip.ZipEntry.getKey(); if  java.util.concurrent.ConcurrentHashMap.get(key) == null) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_ADDED)); continue; } if (((java.lang.Long)  java.util.zip.ZipEntry.getValue())).longValue() != ((java.lang.Long)  java.util.concurrent.ConcurrentHashMap.get(key))).longValue()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_UPDATED));  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.remove(key);"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.remove()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": " <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.remove(key); continue; } java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas;"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.remove()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": " java.util.concurrent.ConcurrentHashMap.remove(key); continue; } <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas;"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.keySet()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": " java.util.concurrent.ConcurrentHashMap.remove(key); continue; } java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas;"}, {"fqn": "java.util.Map.put()", "truth_type": "java.util.Map", "context": " java.util.concurrent.ConcurrentHashMap.remove(key); continue; } java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { <mask><mask><mask><mask><mask>.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas;"}, {"fqn": "java.lang.Integer.valueOf()", "truth_type": "java.lang.Integer", "context": " java.util.concurrent.ConcurrentHashMap.remove(key); continue; } java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, <mask><mask><mask><mask><mask>.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas;"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": " java.util.concurrent.ConcurrentHashMap.remove(key); continue; } java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_DELETED)); } return deltas;"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.remove()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": "} <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.util.concurrent.ConcurrentHashMap.keySet()", "truth_type": "java.util.concurrent.ConcurrentHashMap", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.util.Map.put()", "truth_type": "java.util.Map", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { <mask><mask><mask><mask><mask>.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.lang.Integer.valueOf()", "truth_type": "java.lang.Integer", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, <mask><mask><mask><mask><mask>.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static <mask><mask><mask>.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, <mask><mask><mask>.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws <mask><mask><mask>.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { <mask><mask><mask>.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, <mask><mask><mask>.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.lang.Long", "truth_type": "java.lang", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, <mask><mask><mask>.Long>(); java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.util.zip.ZipFile", "truth_type": "java.util.zip", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); <mask><mask><mask><mask><mask>.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile);"}, {"fqn": "java.util.zip.ZipFile()", "truth_type": "java.util.zip", "context": "} java.util.concurrent.ConcurrentHashMap.remove(key); } for (java.lang.String key : java.util.concurrent.ConcurrentHashMap.keySet()) { java.util.Map.put(key, java.lang.Integer.valueOf(com.cloudbees.upload.ArchiveUtils.ENTRY_DELETED)); } return deltas; } public static java.util.Map<java.lang.String, java.lang.Long> getCheckSums(java.lang.String archiveFile) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Long> checkSums = new java.util.HashMap<java.lang.String, java.lang.Long>(); java.util.zip.ZipFile zipFile = new <mask><mask><mask><mask><mask>.ZipFile(archiveFile);"}, {"fqn": "java.util.zip.ZipFile", "truth_type": "java.util.zip", "context": "<mask><mask><mask><mask><mask>.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.zip.ZipFile()", "truth_type": "java.util.zip", "context": "java.util.zip.ZipFile zipFile = new <mask><mask><mask><mask><mask>.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.Enumeration", "truth_type": "java.util", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); <mask><mask><mask>.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends <mask><mask><mask><mask><mask>.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.zip.ZipFile.entries()", "truth_type": "java.util.zip.ZipFile", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = <mask><mask><mask><mask><mask><mask><mask><mask>.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.Enumeration.hasMoreElements()", "truth_type": "java.util.Enumeration", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  <mask><mask><mask><mask><mask><mask><mask>.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { <mask><mask><mask><mask><mask>.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.Enumeration.nextElement()", "truth_type": "java.util.Enumeration", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = <mask><mask><mask><mask><mask><mask><mask>.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.Map.put", "truth_type": "java.util.Map", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  <mask><mask><mask><mask><mask>.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.zip.ZipEntry.getName()", "truth_type": "java.util.zip.ZipEntry", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put <mask><mask><mask><mask><mask><mask><mask><mask>.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.lang.Long.valueOf", "truth_type": "java.lang.Long", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), <mask><mask><mask><mask><mask>.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums;"}, {"fqn": "java.util.zip.ZipEntry.getCrc()", "truth_type": "java.util.zip.ZipEntry", "context": "java.util.zip.ZipFile zipFile = new java.util.zip.ZipFile(archiveFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = java.util.zip.ZipFile.entries(); while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf <mask><mask><mask><mask><mask><mask><mask><mask>.getCrc())); } return checkSums;"}, {"fqn": "java.util.Enumeration.hasMoreElements()", "truth_type": "java.util.Enumeration", "context": "while  <mask><mask><mask><mask><mask><mask><mask>.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "while  java.util.Enumeration.hasMoreElements()) { <mask><mask><mask><mask><mask>.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.Enumeration.nextElement()", "truth_type": "java.util.Enumeration", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = <mask><mask><mask><mask><mask><mask><mask>.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.Map.put", "truth_type": "java.util.Map", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  <mask><mask><mask><mask><mask>.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.zip.ZipEntry.getName()", "truth_type": "java.util.zip.ZipEntry", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put <mask><mask><mask><mask><mask><mask><mask><mask>.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.lang.Long.valueOf", "truth_type": "java.lang.Long", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), <mask><mask><mask><mask><mask>.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.zip.ZipEntry.getCrc()", "truth_type": "java.util.zip.ZipEntry", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf <mask><mask><mask><mask><mask><mask><mask><mask>.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.zip.ZipFile", "truth_type": "java.util.zip", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, <mask><mask><mask><mask><mask>.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.zip.ZipEntry", "truth_type": "java.util.zip", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, <mask><mask><mask><mask><mask>.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws <mask><mask><mask>.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { <mask><mask><mask>.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "com.cloudbees.utils.ZipHelper.unzipEntryToFolder()", "truth_type": "com.cloudbees.utils.ZipHelper", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = <mask><mask><mask><mask><mask><mask><mask><mask><mask>.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new <mask><mask><mask>.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.zip.ZipEntry.getTime()", "truth_type": "java.util.zip.ZipEntry", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  <mask><mask><mask><mask><mask><mask><mask><mask>.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.io.File.setLastModified", "truth_type": "java.io.File", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { <mask><mask><mask><mask><mask>.setLastModified java.util.zip.ZipEntry.getTime());"}, {"fqn": "java.util.zip.ZipEntry.getTime()", "truth_type": "java.util.zip.ZipEntry", "context": "while  java.util.Enumeration.hasMoreElements()) { java.util.zip.ZipEntry entry = java.util.Enumeration.nextElement();  java.util.Map.put java.util.zip.ZipEntry.getName(), java.lang.Long.valueOf java.util.zip.ZipEntry.getCrc())); } return checkSums; } private static void unArchiveZipEntry(java.lang.String destinationDirectory, java.util.zip.ZipFile zipfile, java.util.zip.ZipEntry entry) throws java.io.IOException { java.io.File file = com.cloudbees.utils.ZipHelper.unzipEntryToFolder(entry, zipfile.getInputStream(entry), new java.io.File(destinationDirectory)); if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified <mask><mask><mask><mask><mask><mask><mask><mask>.getTime());"}, {"fqn": "java.util.zip.ZipEntry.getTime()", "truth_type": "java.util.zip.ZipEntry", "context": "if  <mask><mask><mask><mask><mask><mask><mask><mask>.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.File.setLastModified", "truth_type": "java.io.File", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { <mask><mask><mask><mask><mask>.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.util.zip.ZipEntry.getTime()", "truth_type": "java.util.zip.ZipEntry", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified <mask><mask><mask><mask><mask><mask><mask><mask>.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.IOException", "truth_type": "java.io", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws <mask><mask><mask>.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { <mask><mask><mask>.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new <mask><mask><mask>.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.File.createNewFile()", "truth_type": "java.io.File", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  <mask><mask><mask><mask><mask>.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.FileOutputStream", "truth_type": "java.io", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); <mask><mask><mask>.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.FileOutputStream()", "truth_type": "java.io", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new <mask><mask><mask>.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.util.zip.ZipOutputStream", "truth_type": "java.util.zip", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); <mask><mask><mask><mask><mask>.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.util.zip.ZipOutputStream()", "truth_type": "java.util.zip", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new <mask><mask><mask><mask><mask>.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.BufferedOutputStream()", "truth_type": "java.io", "context": "if  java.util.zip.ZipEntry.getTime() > (-1L)) { java.io.File.setLastModified java.util.zip.ZipEntry.getTime()); } } private static void archiveDirectory(java.lang.String directory, java.lang.String archiveFile) throws java.io.IOException { java.io.File archive = new java.io.File(archiveFile);  java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new <mask><mask><mask>.BufferedOutputStream(fileOutputStream));"}, {"fqn": "java.io.File.createNewFile()", "truth_type": "java.io.File", "context": " <mask><mask><mask><mask><mask>.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.io.FileOutputStream", "truth_type": "java.io", "context": " java.io.File.createNewFile(); <mask><mask><mask>.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.io.FileOutputStream()", "truth_type": "java.io", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new <mask><mask><mask>.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.util.zip.ZipOutputStream", "truth_type": "java.util.zip", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); <mask><mask><mask><mask><mask>.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.util.zip.ZipOutputStream()", "truth_type": "java.util.zip", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new <mask><mask><mask><mask><mask>.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.io.BufferedOutputStream()", "truth_type": "java.io", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new <mask><mask><mask>.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "com.cloudbees.utils.ZipHelper.addDirectoryToZip()", "truth_type": "com.cloudbees.utils.ZipHelper", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); <mask><mask><mask><mask><mask><mask><mask><mask><mask>.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new <mask><mask><mask>.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new <mask><mask><mask>.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close();"}, {"fqn": "java.util.zip.ZipOutputStream.close()", "truth_type": "java.util.zip.ZipOutputStream", "context": " java.io.File.createNewFile(); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(archive); java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  <mask><mask><mask><mask><mask><mask><mask><mask><mask>.close();"}, {"fqn": "java.util.zip.ZipOutputStream", "truth_type": "java.util.zip", "context": "<mask><mask><mask><mask><mask>.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "java.util.zip.ZipOutputStream()", "truth_type": "java.util.zip", "context": "java.util.zip.ZipOutputStream zipOutputStream = new <mask><mask><mask><mask><mask>.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "java.io.BufferedOutputStream()", "truth_type": "java.io", "context": "java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new <mask><mask><mask>.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "com.cloudbees.utils.ZipHelper.addDirectoryToZip()", "truth_type": "com.cloudbees.utils.ZipHelper", "context": "java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); <mask><mask><mask><mask><mask><mask><mask><mask><mask>.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new <mask><mask><mask>.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new <mask><mask><mask>.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "java.util.zip.ZipOutputStream.close()", "truth_type": "java.util.zip.ZipOutputStream", "context": "java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  <mask><mask><mask><mask><mask><mask><mask><mask><mask>.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(<mask><mask><mask>.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName();"}, {"fqn": "java.io.File.getName()", "truth_type": "java.io.File", "context": "java.util.zip.ZipOutputStream zipOutputStream = new java.util.zip.ZipOutputStream(new java.io.BufferedOutputStream(fileOutputStream)); com.cloudbees.utils.ZipHelper.addDirectoryToZip(new java.io.File(directory), new java.io.File(directory), null, zipOutputStream);  java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = <mask><mask><mask><mask><mask>.getName();"}, {"fqn": "java.util.zip.ZipOutputStream.close()", "truth_type": "java.util.zip.ZipOutputStream", "context": " <mask><mask><mask><mask><mask><mask><mask><mask><mask>.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName(); int idx = fileName.lastIndexOf('.'); if (idx > (-1)) { fileName = fileName.substring(0, idx);"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": " java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(<mask><mask><mask>.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = java.io.File.getName(); int idx = fileName.lastIndexOf('.'); if (idx > (-1)) { fileName = fileName.substring(0, idx);"}, {"fqn": "java.io.File.getName()", "truth_type": "java.io.File", "context": " java.util.zip.ZipOutputStream.close(); } private static java.lang.String makeTmpDir(java.io.File file, java.lang.String tmp) { if (tmp == null) { tmp = String; } java.lang.String fileName = <mask><mask><mask><mask><mask>.getName(); int idx = fileName.lastIndexOf('.'); if (idx > (-1)) { fileName = fileName.substring(0, idx);"}, {"fqn": "java.io.File.getName()", "truth_type": "java.io.File", "context": "} java.lang.String fileName = <mask><mask><mask><mask><mask>.getName(); int idx = fileName.lastIndexOf('.'); if (idx > (-1)) { fileName = fileName.substring(0, idx); } if (!tmp.endsWith(java.io.File.separator)) { tmp = tmp + java.io.File.separator; } tmp = ((tmp + String) + fileName) + java.io.File.separator;"}, {"fqn": "java.io.File.separator", "truth_type": "java.io.File", "context": "} java.lang.String fileName = java.io.File.getName(); int idx = fileName.lastIndexOf('.'); if (idx > (-1)) { fileName = fileName.substring(0, idx); } if (!tmp.endsWith(<mask><mask><mask><mask><mask>.separator)) { tmp = tmp + java.io.File.separator; } tmp = ((tmp + String) + fileName) + java.io.File.separator;"}, {"fqn": "java.io.File.separator", "truth_type": "java.io.File", "context": "} java.lang.String fileName = java.io.File.getName(); int idx = fileName.lastIndexOf('.'); if (idx > (-1)) { fileName = fileName.substring(0, idx); } if (!tmp.endsWith(java.io.File.separator)) { tmp = tmp + <mask><mask><mask><mask><mask>.separator; } tmp = ((tmp + String) + fileName) + java.io.File.separator;"}, {"fqn": "java.io.File.separator", "truth_type": "java.io.File", "context": "} java.lang.String fileName = java.io.File.getName(); int idx = fileName.lastIndexOf('.'); if (idx > (-1)) { fileName = fileName.substring(0, idx); } if (!tmp.endsWith(java.io.File.separator)) { tmp = tmp + java.io.File.separator; } tmp = ((tmp + String) + fileName) + <mask><mask><mask><mask><mask>.separator;"}, {"fqn": "java.io.File.separator", "truth_type": "java.io.File", "context": "} tmp = ((tmp + String) + fileName) + <mask><mask><mask><mask><mask>.separator; java.io.File dir = new java.io.File(tmp); com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} tmp = ((tmp + String) + fileName) + java.io.File.separator; <mask><mask><mask>.File dir = new java.io.File(tmp); com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp;"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "} tmp = ((tmp + String) + fileName) + java.io.File.separator; java.io.File dir = new <mask><mask><mask>.File(tmp); com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp;"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.deleteAll()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "} tmp = ((tmp + String) + fileName) + java.io.File.separator; java.io.File dir = new java.io.File(tmp); <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.deleteAll(dir);  java.io.File.mkdirs(); return tmp;"}, {"fqn": "java.io.File.mkdirs()", "truth_type": "java.io.File", "context": "} tmp = ((tmp + String) + fileName) + java.io.File.separator; java.io.File dir = new java.io.File(tmp); com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  <mask><mask><mask><mask><mask>.mkdirs(); return tmp;"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.deleteAll()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File.mkdirs()", "truth_type": "java.io.File", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  <mask><mask><mask><mask><mask>.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(<mask><mask><mask>.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File.exists()", "truth_type": "java.io.File", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  <mask><mask><mask><mask><mask>.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File.isDirectory()", "truth_type": "java.io.File", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  <mask><mask><mask><mask><mask>.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { <mask><mask><mask>.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File.listFiles()", "truth_type": "java.io.File", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = <mask><mask><mask><mask><mask>.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (<mask><mask><mask>.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "java.io.File.isDirectory()", "truth_type": "java.io.File", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  <mask><mask><mask><mask><mask>.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f);"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.deleteAll()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "com.cloudbees.upload.ArchiveUtils.deleteAll(dir);  java.io.File.mkdirs(); return tmp; } private static void deleteAll(java.io.File dir) { if  java.io.File.exists()) { if  java.io.File.isDirectory()) { java.io.File[] files = java.io.File.listFiles(); if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.deleteAll(f);"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "if (files != null) { for (<mask><mask><mask>.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f); } else { java.io.File.delete(); } } } } java.io.File.delete(); } } };"}, {"fqn": "java.io.File.isDirectory()", "truth_type": "java.io.File", "context": "if (files != null) { for (java.io.File f : files) { if  <mask><mask><mask><mask><mask>.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f); } else { java.io.File.delete(); } } } } java.io.File.delete(); } } };"}, {"fqn": "com.cloudbees.upload.ArchiveUtils.deleteAll()", "truth_type": "com.cloudbees.upload.ArchiveUtils", "context": "if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.deleteAll(f); } else { java.io.File.delete(); } } } } java.io.File.delete(); } } };"}, {"fqn": "java.io.File.delete()", "truth_type": "java.io.File", "context": "if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f); } else { <mask><mask><mask><mask><mask>.delete(); } } } } java.io.File.delete(); } } };"}, {"fqn": "java.io.File.delete()", "truth_type": "java.io.File", "context": "if (files != null) { for (java.io.File f : files) { if  java.io.File.isDirectory()) { com.cloudbees.upload.ArchiveUtils.deleteAll(f); } else { java.io.File.delete(); } } } } <mask><mask><mask><mask><mask>.delete(); } } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ApplicationInfo { private java.lang.String id; private java.lang.String title; private java.lang.String created; private java.lang.String status; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamImplicit()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ApplicationInfo { private java.lang.String id; private java.lang.String title; private java.lang.String created; private java.lang.String status; @<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ApplicationInfo { private java.lang.String id; private java.lang.String title; private java.lang.String created; private java.lang.String status; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private <mask><mask><mask>.List<java.lang.String> urls;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamImplicit()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "private java.lang.String created; private java.lang.String status; @<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls; java.util.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "private java.lang.String created; private java.lang.String status; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private <mask><mask><mask>.List<java.lang.String> urls; java.util.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "private java.lang.String created; private java.lang.String status; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls; <mask><mask><mask>.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "private java.lang.String created; private java.lang.String status; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls; java.util.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, <mask><mask><mask>.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamImplicit()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls; java.util.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = com.cloudbees.api.DateHelper.toW3CDateString(created);"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private <mask><mask><mask>.List<java.lang.String> urls; java.util.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = com.cloudbees.api.DateHelper.toW3CDateString(created);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls; <mask><mask><mask>.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = com.cloudbees.api.DateHelper.toW3CDateString(created);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls; java.util.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, <mask><mask><mask>.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = com.cloudbees.api.DateHelper.toW3CDateString(created);"}, {"fqn": "com.cloudbees.api.DateHelper.toW3CDateString()", "truth_type": "com.cloudbees.api.DateHelper", "context": "@com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<java.lang.String> urls; java.util.Map<java.lang.String, java.lang.String> settings; public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = <mask><mask><mask><mask><mask><mask><mask><mask><mask>.toW3CDateString(created);"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "public ApplicationInfo(java.lang.String id, java.lang.String title, <mask><mask><mask>.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = com.cloudbees.api.DateHelper.toW3CDateString(created); this.status = status; this.urls = new java.util.ArrayList<java.lang.String>();"}, {"fqn": "com.cloudbees.api.DateHelper.toW3CDateString()", "truth_type": "com.cloudbees.api.DateHelper", "context": "public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = <mask><mask><mask><mask><mask><mask><mask><mask><mask>.toW3CDateString(created); this.status = status; this.urls = new java.util.ArrayList<java.lang.String>();"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "public ApplicationInfo(java.lang.String id, java.lang.String title, java.util.Date created, java.lang.String status, java.lang.String[] urls) { this.id = id; this.title = title; this.created = com.cloudbees.api.DateHelper.toW3CDateString(created); this.status = status; this.urls = new <mask><mask><mask>.ArrayList<java.lang.String>();"}, {"fqn": "com.cloudbees.api.DateHelper.toW3CDateString()", "truth_type": "com.cloudbees.api.DateHelper", "context": "this.created = <mask><mask><mask><mask><mask><mask><mask><mask><mask>.toW3CDateString(created); this.status = status; this.urls = new java.util.ArrayList<java.lang.String>(); for (java.lang.String url : urls) { this.urls.add(url); } } public java.lang.String getId() { return this.id;"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "this.created = com.cloudbees.api.DateHelper.toW3CDateString(created); this.status = status; this.urls = new <mask><mask><mask>.ArrayList<java.lang.String>(); for (java.lang.String url : urls) { this.urls.add(url); } } public java.lang.String getId() { return this.id;"}, {"fqn": "this.urls.add()", "truth_type": "this.urls", "context": "this.created = com.cloudbees.api.DateHelper.toW3CDateString(created); this.status = status; this.urls = new java.util.ArrayList<java.lang.String>(); for (java.lang.String url : urls) { <mask><mask><mask><mask>.add(url); } } public java.lang.String getId() { return this.id;"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "this.urls = new <mask><mask><mask>.ArrayList<java.lang.String>(); for (java.lang.String url : urls) { this.urls.add(url); } } public java.lang.String getId() { return this.id; } public java.lang.String getTitle() { return this.title; } public java.util.Date getCreated() { if (this.created == null) { return null;"}, {"fqn": "this.urls.add()", "truth_type": "this.urls", "context": "this.urls = new java.util.ArrayList<java.lang.String>(); for (java.lang.String url : urls) { <mask><mask><mask><mask>.add(url); } } public java.lang.String getId() { return this.id; } public java.lang.String getTitle() { return this.title; } public java.util.Date getCreated() { if (this.created == null) { return null;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "this.urls = new java.util.ArrayList<java.lang.String>(); for (java.lang.String url : urls) { this.urls.add(url); } } public java.lang.String getId() { return this.id; } public java.lang.String getTitle() { return this.title; } public <mask><mask><mask>.Date getCreated() { if (this.created == null) { return null;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} } public java.lang.String getId() { return this.id; } public java.lang.String getTitle() { return this.title; } public <mask><mask><mask>.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null;"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDate()", "truth_type": "com.cloudbees.api.DateHelper", "context": "} } public java.lang.String getId() { return this.id; } public java.lang.String getTitle() { return this.title; } public java.util.Date getCreated() { if (this.created == null) { return null; } try { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null;"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} } public java.lang.String getId() { return this.id; } public java.lang.String getTitle() { return this.title; } public java.util.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (<mask><mask><mask>.ParseException e) { return null;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public <mask><mask><mask>.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>();"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDate()", "truth_type": "com.cloudbees.api.DateHelper", "context": "} public java.util.Date getCreated() { if (this.created == null) { return null; } try { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>();"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} public java.util.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (<mask><mask><mask>.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>();"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "} public java.util.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new <mask><mask><mask>.ArrayList<java.lang.String>();"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} catch (<mask><mask><mask>.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>(); } return this.urls.<java.lang.String>toArray(new java.lang.String[0]); } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings;"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "} catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new <mask><mask><mask>.ArrayList<java.lang.String>(); } return this.urls.<java.lang.String>toArray(new java.lang.String[0]); } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings;"}, {"fqn": "this.urls.", "truth_type": "this.urls", "context": "} catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>(); } return <mask><mask><mask><mask>.<java.lang.String>toArray(new java.lang.String[0]); } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>(); } return this.urls.<java.lang.String>toArray(new java.lang.String[0]); } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings;"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "} public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new <mask><mask><mask>.ArrayList<java.lang.String>(); } return this.urls.<java.lang.String>toArray(new java.lang.String[0]); } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } };"}, {"fqn": "this.urls.", "truth_type": "this.urls", "context": "} public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>(); } return <mask><mask><mask><mask>.<java.lang.String>toArray(new java.lang.String[0]); } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>(); } return this.urls.<java.lang.String>toArray(new java.lang.String[0]); } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.lang.String[] getUrls() { if (this.urls == null) { this.urls = new java.util.ArrayList<java.lang.String>(); } return this.urls.<java.lang.String>toArray(new java.lang.String[0]); } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class Environment extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String name; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name;"}, {"fqn": "com.cloudbees.api.config.ParameterHolder", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class Environment extends <mask><mask><mask><mask><mask><mask><mask><mask>.ParameterHolder { @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String name; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAsAttribute", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class Environment extends com.cloudbees.api.config.ParameterHolder { @<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAsAttribute private java.lang.String name; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name;"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamImplicit()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class Environment extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String name; @<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class Environment extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String name; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private <mask><mask><mask>.List<com.cloudbees.api.config.ResourceSettings> resources; public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name;"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class Environment extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks.xstream.annotations.XStreamAsAttribute private java.lang.String name; @com.thoughtworks.xstream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> resources; public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name; } public <mask><mask><mask>.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources;"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name; } public java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources;"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new <mask><mask><mask>.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources;"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "public Environment() { } public Environment(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings>(); } return this.resources;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "} public void setName(java.lang.String name) { this.name = name; } public <mask><mask><mask>.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setName(java.lang.String name) { this.name = name; } public java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "} public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new <mask><mask><mask>.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "} public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(<mask><mask><mask>.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "} public void setName(java.lang.String name) { this.name = name; } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public <mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "java.util.Iterator", "truth_type": "java.util", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { <mask><mask><mask>.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "java.util.Iterator", "truth_type": "java.util", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { <mask><mask><mask>.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "java.util.Iterator.hasNext()", "truth_type": "java.util.Iterator", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  <mask><mask><mask><mask><mask>.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "java.util.Iterator.next()", "truth_type": "java.util.Iterator", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  <mask><mask><mask><mask><mask>.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "java.util.Iterator.remove()", "truth_type": "java.util.Iterator", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { <mask><mask><mask><mask><mask>.remove(); } } } };"}, {"fqn": "java.util.Iterator", "truth_type": "java.util", "context": "} public void deleteResource(java.lang.String name) { <mask><mask><mask>.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "java.util.Iterator.hasNext()", "truth_type": "java.util.Iterator", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  <mask><mask><mask><mask><mask>.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "java.util.Iterator.next()", "truth_type": "java.util.Iterator", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  <mask><mask><mask><mask><mask>.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } };"}, {"fqn": "java.util.Iterator.remove()", "truth_type": "java.util.Iterator", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { <mask><mask><mask><mask><mask>.remove(); } } } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class DatabaseSnapshotDeleteResponse { private boolean deleted; public DatabaseSnapshotDeleteResponse() { } public DatabaseSnapshotDeleteResponse(boolean deleted) { this.deleted = deleted; } public boolean isDeleted() { return this.deleted; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ServiceListResponse { private java.util.List<com.cloudbees.api.ServiceInfo> services; public java.util.List<com.cloudbees.api.ServiceInfo> getServices() { return this.services; } public void setServices(java.util.List<com.cloudbees.api.ServiceInfo> services) { this.services = services; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceListResponse { private <mask><mask><mask>.List<com.cloudbees.api.ServiceInfo> services; public java.util.List<com.cloudbees.api.ServiceInfo> getServices() { return this.services; } public void setServices(java.util.List<com.cloudbees.api.ServiceInfo> services) { this.services = services; } };"}, {"fqn": "com.cloudbees.api.ServiceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceListResponse { private java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceInfo> services; public java.util.List<com.cloudbees.api.ServiceInfo> getServices() { return this.services; } public void setServices(java.util.List<com.cloudbees.api.ServiceInfo> services) { this.services = services; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceListResponse { private java.util.List<com.cloudbees.api.ServiceInfo> services; public <mask><mask><mask>.List<com.cloudbees.api.ServiceInfo> getServices() { return this.services; } public void setServices(java.util.List<com.cloudbees.api.ServiceInfo> services) { this.services = services; } };"}, {"fqn": "com.cloudbees.api.ServiceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceListResponse { private java.util.List<com.cloudbees.api.ServiceInfo> services; public java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceInfo> getServices() { return this.services; } public void setServices(java.util.List<com.cloudbees.api.ServiceInfo> services) { this.services = services; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceListResponse { private java.util.List<com.cloudbees.api.ServiceInfo> services; public java.util.List<com.cloudbees.api.ServiceInfo> getServices() { return this.services; } public void setServices(<mask><mask><mask>.List<com.cloudbees.api.ServiceInfo> services) { this.services = services; } };"}, {"fqn": "com.cloudbees.api.ServiceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceListResponse { private java.util.List<com.cloudbees.api.ServiceInfo> services; public java.util.List<com.cloudbees.api.ServiceInfo> getServices() { return this.services; } public void setServices(java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceInfo> services) { this.services = services; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class AccountInfo { private java.lang.String name; public AccountInfo(java.lang.String name) { this.name = name; } public java.lang.String getName() { return this.name; } };"}, {"fqn": "java.util.AbstractMap", "truth_type": "java.util", "context": "public abstract class ParameterMap extends <mask><mask><mask>.AbstractMap<java.lang.String, java.lang.String> { public int getInt(java.lang.String key, int defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Integer.parseInt(v); } public void putInt(java.lang.String key, int value) { put(key, java.lang.String.valueOf(value)); } public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key);"}, {"fqn": "java.lang.NumberFormatException", "truth_type": "java.lang", "context": "public abstract class ParameterMap extends java.util.AbstractMap<java.lang.String, java.lang.String> { public int getInt(java.lang.String key, int defaultValue) throws <mask><mask><mask>.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Integer.parseInt(v); } public void putInt(java.lang.String key, int value) { put(key, java.lang.String.valueOf(value)); } public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key);"}, {"fqn": "java.lang.Integer.parseInt()", "truth_type": "java.lang.Integer", "context": "public abstract class ParameterMap extends java.util.AbstractMap<java.lang.String, java.lang.String> { public int getInt(java.lang.String key, int defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return <mask><mask><mask><mask><mask>.parseInt(v); } public void putInt(java.lang.String key, int value) { put(key, java.lang.String.valueOf(value)); } public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key);"}, {"fqn": "java.lang.String.valueOf()", "truth_type": "java.lang.String", "context": "public abstract class ParameterMap extends java.util.AbstractMap<java.lang.String, java.lang.String> { public int getInt(java.lang.String key, int defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Integer.parseInt(v); } public void putInt(java.lang.String key, int value) { put(key, <mask><mask><mask><mask><mask>.valueOf(value)); } public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key);"}, {"fqn": "java.lang.Integer.parseInt()", "truth_type": "java.lang.Integer", "context": "} return <mask><mask><mask><mask><mask>.parseInt(v); } public void putInt(java.lang.String key, int value) { put(key, java.lang.String.valueOf(value)); } public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Boolean.parseBoolean(v);"}, {"fqn": "java.lang.String.valueOf()", "truth_type": "java.lang.String", "context": "} return java.lang.Integer.parseInt(v); } public void putInt(java.lang.String key, int value) { put(key, <mask><mask><mask><mask><mask>.valueOf(value)); } public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Boolean.parseBoolean(v);"}, {"fqn": "java.lang.Boolean.parseBoolean()", "truth_type": "java.lang.Boolean", "context": "} return java.lang.Integer.parseInt(v); } public void putInt(java.lang.String key, int value) { put(key, java.lang.String.valueOf(value)); } public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key); if (v == null) { return defaultValue; } return <mask><mask><mask><mask><mask><mask>.parseBoolean(v);"}, {"fqn": "java.lang.Boolean.parseBoolean()", "truth_type": "java.lang.Boolean", "context": "} public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key); if (v == null) { return defaultValue; } return <mask><mask><mask><mask><mask><mask>.parseBoolean(v); } public void putBoolean(java.lang.String key, boolean value) { put(key, java.lang.String.valueOf(value)); } public double getDouble(java.lang.String key, double defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key);"}, {"fqn": "java.lang.String.valueOf()", "truth_type": "java.lang.String", "context": "} public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Boolean.parseBoolean(v); } public void putBoolean(java.lang.String key, boolean value) { put(key, <mask><mask><mask><mask><mask>.valueOf(value)); } public double getDouble(java.lang.String key, double defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key);"}, {"fqn": "java.lang.NumberFormatException", "truth_type": "java.lang", "context": "} public boolean getBoolean(java.lang.String key, boolean defaultValue) { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Boolean.parseBoolean(v); } public void putBoolean(java.lang.String key, boolean value) { put(key, java.lang.String.valueOf(value)); } public double getDouble(java.lang.String key, double defaultValue) throws <mask><mask><mask>.NumberFormatException { java.lang.String v = get(key);"}, {"fqn": "java.lang.Boolean.parseBoolean()", "truth_type": "java.lang.Boolean", "context": "} return <mask><mask><mask><mask><mask><mask>.parseBoolean(v); } public void putBoolean(java.lang.String key, boolean value) { put(key, java.lang.String.valueOf(value)); } public double getDouble(java.lang.String key, double defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Double.parseDouble(v);"}, {"fqn": "java.lang.String.valueOf()", "truth_type": "java.lang.String", "context": "} return java.lang.Boolean.parseBoolean(v); } public void putBoolean(java.lang.String key, boolean value) { put(key, <mask><mask><mask><mask><mask>.valueOf(value)); } public double getDouble(java.lang.String key, double defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Double.parseDouble(v);"}, {"fqn": "java.lang.NumberFormatException", "truth_type": "java.lang", "context": "} return java.lang.Boolean.parseBoolean(v); } public void putBoolean(java.lang.String key, boolean value) { put(key, java.lang.String.valueOf(value)); } public double getDouble(java.lang.String key, double defaultValue) throws <mask><mask><mask>.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Double.parseDouble(v);"}, {"fqn": "java.lang.Double.parseDouble()", "truth_type": "java.lang.Double", "context": "} return java.lang.Boolean.parseBoolean(v); } public void putBoolean(java.lang.String key, boolean value) { put(key, java.lang.String.valueOf(value)); } public double getDouble(java.lang.String key, double defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return <mask><mask><mask><mask><mask>.parseDouble(v);"}, {"fqn": "java.lang.NumberFormatException", "truth_type": "java.lang", "context": "} public double getDouble(java.lang.String key, double defaultValue) throws <mask><mask><mask>.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Double.parseDouble(v); } public void putDouble(java.lang.String key, double value) { put(key, java.lang.String.valueOf(value)); } };"}, {"fqn": "java.lang.Double.parseDouble()", "truth_type": "java.lang.Double", "context": "} public double getDouble(java.lang.String key, double defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return <mask><mask><mask><mask><mask>.parseDouble(v); } public void putDouble(java.lang.String key, double value) { put(key, java.lang.String.valueOf(value)); } };"}, {"fqn": "java.lang.String.valueOf()", "truth_type": "java.lang.String", "context": "} public double getDouble(java.lang.String key, double defaultValue) throws java.lang.NumberFormatException { java.lang.String v = get(key); if (v == null) { return defaultValue; } return java.lang.Double.parseDouble(v); } public void putDouble(java.lang.String key, double value) { put(key, <mask><mask><mask><mask><mask>.valueOf(value)); } };"}, {"fqn": "java.lang.Double.parseDouble()", "truth_type": "java.lang.Double", "context": "} return <mask><mask><mask><mask><mask>.parseDouble(v); } public void putDouble(java.lang.String key, double value) { put(key, java.lang.String.valueOf(value)); } };"}, {"fqn": "java.lang.String.valueOf()", "truth_type": "java.lang.String", "context": "} return java.lang.Double.parseDouble(v); } public void putDouble(java.lang.String key, double value) { put(key, <mask><mask><mask><mask><mask>.valueOf(value)); } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ApplicationGetSourceUrlResponse { private java.lang.String url; public ApplicationGetSourceUrlResponse() { } public ApplicationGetSourceUrlResponse(java.lang.String url) { this.url = url; } public java.lang.String getUrl() { return this.url; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ServiceInfo { java.lang.String name; java.lang.String description; public java.lang.String getDescription() { return this.description; } public void setDescription(java.lang.String description) { this.description = description; } public java.lang.String getName() { return this.name;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "public class ApplicationDeployArgs { public final java.lang.String appId; public final boolean create; public final java.lang.String environment; public final java.lang.String description; public final <mask><mask><mask>.File archiveFile;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "public final java.lang.String environment; public final java.lang.String description; public final <mask><mask><mask>.File archiveFile; public final java.io.File srcFile; public final java.lang.String archiveType;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "public final java.lang.String environment; public final java.lang.String description; public final java.io.File archiveFile; public final <mask><mask><mask>.File srcFile; public final java.lang.String archiveType;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "public final <mask><mask><mask>.File archiveFile; public final java.io.File srcFile; public final java.lang.String archiveType; public final boolean deltaDeploy; public final java.util.Map<java.lang.String, java.lang.String> parameters;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "public final java.io.File archiveFile; public final <mask><mask><mask>.File srcFile; public final java.lang.String archiveType; public final boolean deltaDeploy; public final java.util.Map<java.lang.String, java.lang.String> parameters;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public final java.io.File archiveFile; public final java.io.File srcFile; public final java.lang.String archiveType; public final boolean deltaDeploy; public final <mask><mask><mask>.Map<java.lang.String, java.lang.String> parameters;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public final java.lang.String archiveType; public final boolean deltaDeploy; public final <mask><mask><mask>.Map<java.lang.String, java.lang.String> parameters; public final java.util.Map<java.lang.String, java.lang.String> variables; public final com.cloudbees.api.UploadProgress progress;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public final java.lang.String archiveType; public final boolean deltaDeploy; public final java.util.Map<java.lang.String, java.lang.String> parameters; public final <mask><mask><mask>.Map<java.lang.String, java.lang.String> variables; public final com.cloudbees.api.UploadProgress progress;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "public final java.lang.String archiveType; public final boolean deltaDeploy; public final java.util.Map<java.lang.String, java.lang.String> parameters; public final java.util.Map<java.lang.String, java.lang.String> variables; public final <mask><mask><mask><mask><mask><mask>.UploadProgress progress;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public final <mask><mask><mask>.Map<java.lang.String, java.lang.String> parameters; public final java.util.Map<java.lang.String, java.lang.String> variables; public final com.cloudbees.api.UploadProgress progress; private ApplicationDeployArgs(com.cloudbees.api.ApplicationDeployArgs.Builder b) { this.appId = b.appId; this.create = b.create;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public final java.util.Map<java.lang.String, java.lang.String> parameters; public final <mask><mask><mask>.Map<java.lang.String, java.lang.String> variables; public final com.cloudbees.api.UploadProgress progress; private ApplicationDeployArgs(com.cloudbees.api.ApplicationDeployArgs.Builder b) { this.appId = b.appId; this.create = b.create;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "public final java.util.Map<java.lang.String, java.lang.String> parameters; public final java.util.Map<java.lang.String, java.lang.String> variables; public final <mask><mask><mask><mask><mask><mask>.UploadProgress progress; private ApplicationDeployArgs(com.cloudbees.api.ApplicationDeployArgs.Builder b) { this.appId = b.appId; this.create = b.create;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "public final java.util.Map<java.lang.String, java.lang.String> parameters; public final java.util.Map<java.lang.String, java.lang.String> variables; public final com.cloudbees.api.UploadProgress progress; private ApplicationDeployArgs(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder b) { this.appId = b.appId; this.create = b.create;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "public final <mask><mask><mask><mask><mask><mask>.UploadProgress progress; private ApplicationDeployArgs(com.cloudbees.api.ApplicationDeployArgs.Builder b) { this.appId = b.appId; this.create = b.create; this.environment = b.environment; this.description = b.description;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "public final com.cloudbees.api.UploadProgress progress; private ApplicationDeployArgs(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder b) { this.appId = b.appId; this.create = b.create; this.environment = b.environment; this.description = b.description;"}, {"fqn": "java.util.Collections.unmodifiableMap()", "truth_type": "java.util.Collections", "context": "this.srcFile = b.srcFile; this.deltaDeploy = b.deltaDeploy; this.archiveType = b.archiveType; this.parameters = <mask><mask><mask><mask><mask><mask>.unmodifiableMap(b.parameters); this.variables = java.util.Collections.unmodifiableMap(b.variables);"}, {"fqn": "java.util.Collections.unmodifiableMap()", "truth_type": "java.util.Collections", "context": "this.srcFile = b.srcFile; this.deltaDeploy = b.deltaDeploy; this.archiveType = b.archiveType; this.parameters = java.util.Collections.unmodifiableMap(b.parameters); this.variables = <mask><mask><mask><mask><mask><mask>.unmodifiableMap(b.variables);"}, {"fqn": "java.util.Collections.unmodifiableMap()", "truth_type": "java.util.Collections", "context": "this.archiveType = b.archiveType; this.parameters = <mask><mask><mask><mask><mask><mask>.unmodifiableMap(b.parameters); this.variables = java.util.Collections.unmodifiableMap(b.variables); this.progress = b.progress; } public static class Builder { java.lang.String appId;"}, {"fqn": "java.util.Collections.unmodifiableMap()", "truth_type": "java.util.Collections", "context": "this.archiveType = b.archiveType; this.parameters = java.util.Collections.unmodifiableMap(b.parameters); this.variables = <mask><mask><mask><mask><mask><mask>.unmodifiableMap(b.variables); this.progress = b.progress; } public static class Builder { java.lang.String appId;"}, {"fqn": "java.util.Collections.unmodifiableMap()", "truth_type": "java.util.Collections", "context": "this.variables = <mask><mask><mask><mask><mask><mask>.unmodifiableMap(b.variables); this.progress = b.progress; } public static class Builder { java.lang.String appId; boolean create = false; java.lang.String environment;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public static class Builder { java.lang.String appId; boolean create = false; java.lang.String environment; java.lang.String description; <mask><mask><mask>.File archiveFile;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "java.lang.String environment; java.lang.String description; <mask><mask><mask>.File archiveFile; java.io.File srcFile; java.lang.String archiveType;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "java.lang.String environment; java.lang.String description; java.io.File archiveFile; <mask><mask><mask>.File srcFile; java.lang.String archiveType;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "<mask><mask><mask>.File archiveFile; java.io.File srcFile; java.lang.String archiveType; boolean deltaDeploy = true; java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>();"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "java.io.File archiveFile; <mask><mask><mask>.File srcFile; java.lang.String archiveType; boolean deltaDeploy = true; java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.io.File archiveFile; java.io.File srcFile; java.lang.String archiveType; boolean deltaDeploy = true; <mask><mask><mask>.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>();"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "java.io.File archiveFile; java.io.File srcFile; java.lang.String archiveType; boolean deltaDeploy = true; java.util.Map<java.lang.String, java.lang.String> parameters = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.String>();"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.lang.String archiveType; boolean deltaDeploy = true; <mask><mask><mask>.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress;"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "java.lang.String archiveType; boolean deltaDeploy = true; java.util.Map<java.lang.String, java.lang.String> parameters = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.lang.String archiveType; boolean deltaDeploy = true; java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); <mask><mask><mask>.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress;"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "java.lang.String archiveType; boolean deltaDeploy = true; java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "java.lang.String archiveType; boolean deltaDeploy = true; java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); <mask><mask><mask><mask><mask><mask>.UploadProgress progress;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "<mask><mask><mask>.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress; public Builder(java.lang.String appId) { this.appId = appId; } public java.lang.String getAppId() { return this.appId;"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "java.util.Map<java.lang.String, java.lang.String> parameters = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress; public Builder(java.lang.String appId) { this.appId = appId; } public java.lang.String getAppId() { return this.appId;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); <mask><mask><mask>.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress; public Builder(java.lang.String appId) { this.appId = appId; } public java.lang.String getAppId() { return this.appId;"}, {"fqn": "java.util.HashMap", "truth_type": "java.util", "context": "java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new <mask><mask><mask>.HashMap<java.lang.String, java.lang.String>(); com.cloudbees.api.UploadProgress progress; public Builder(java.lang.String appId) { this.appId = appId; } public java.lang.String getAppId() { return this.appId;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "java.util.Map<java.lang.String, java.lang.String> parameters = new java.util.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> variables = new java.util.HashMap<java.lang.String, java.lang.String>(); <mask><mask><mask><mask><mask><mask>.UploadProgress progress; public Builder(java.lang.String appId) { this.appId = appId; } public java.lang.String getAppId() { return this.appId;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "<mask><mask><mask><mask><mask><mask>.UploadProgress progress; public Builder(java.lang.String appId) { this.appId = appId; } public java.lang.String getAppId() { return this.appId; } public com.cloudbees.api.ApplicationDeployArgs.Builder appId(java.lang.String appId) { this.appId = appId; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "com.cloudbees.api.UploadProgress progress; public Builder(java.lang.String appId) { this.appId = appId; } public java.lang.String getAppId() { return this.appId; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder appId(java.lang.String appId) { this.appId = appId; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public java.lang.String getAppId() { return this.appId; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder appId(java.lang.String appId) { this.appId = appId; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder asNewApp() { this.create = true; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public java.lang.String getAppId() { return this.appId; } public com.cloudbees.api.ApplicationDeployArgs.Builder appId(java.lang.String appId) { this.appId = appId; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder asNewApp() { this.create = true; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(<mask><mask><mask>.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "java.lang.Deprecated", "truth_type": "java.lang", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @<mask><mask><mask>.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new <mask><mask><mask>.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(<mask><mask><mask>.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "java.lang.Deprecated", "truth_type": "java.lang", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @<mask><mask><mask>.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new <mask><mask><mask>.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder warFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.lang.String file) { return deployPackage(new java.io.File(file), String); } public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(<mask><mask><mask>.File file, java.lang.String type) { this.archiveType = type;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(<mask><mask><mask>.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this;"}, {"fqn": "java.lang.Deprecated", "truth_type": "java.lang", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @<mask><mask><mask>.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this;"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new <mask><mask><mask>.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder earFile(java.io.File file) { return deployPackage(file, String); } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.lang.String file, java.lang.String type) { return deployPackage(new java.io.File(file), type); } public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(<mask><mask><mask>.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this; } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.lang.String srcFile) { return srcFile(new java.io.File(srcFile)); } public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(<mask><mask><mask>.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this; } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.lang.String srcFile) { return srcFile(new java.io.File(srcFile)); } public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile;"}, {"fqn": "java.lang.Deprecated", "truth_type": "java.lang", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this; } @<mask><mask><mask>.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.lang.String srcFile) { return srcFile(new java.io.File(srcFile)); } public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this; } @java.lang.Deprecated public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder srcFile(java.lang.String srcFile) { return srcFile(new java.io.File(srcFile)); } public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile;"}, {"fqn": "java.io.File()", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this; } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.lang.String srcFile) { return srcFile(new <mask><mask><mask>.File(srcFile)); } public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this; } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.lang.String srcFile) { return srcFile(new java.io.File(srcFile)); } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder deployPackage(java.io.File file, java.lang.String type) { this.archiveType = type; this.archiveFile = file; return this; } @java.lang.Deprecated public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.lang.String srcFile) { return srcFile(new java.io.File(srcFile)); } public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(<mask><mask><mask>.File srcFile) { this.srcFile = srcFile;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder archiveType(java.lang.String archiveType) { this.archiveType = archiveType; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy;"}, {"fqn": "java.io.File", "truth_type": "java.io", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(<mask><mask><mask>.File srcFile) { this.srcFile = srcFile; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder archiveType(java.lang.String archiveType) { this.archiveType = archiveType; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder archiveType(java.lang.String archiveType) { this.archiveType = archiveType; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder srcFile(java.io.File srcFile) { this.srcFile = srcFile; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder archiveType(java.lang.String archiveType) { this.archiveType = archiveType; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder archiveType(java.lang.String archiveType) { this.archiveType = archiveType; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder archiveType(java.lang.String archiveType) { this.archiveType = archiveType; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder archiveType(java.lang.String archiveType) { this.archiveType = archiveType; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withIncrementalDeployment() { this.deltaDeploy = true;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value);"}, {"fqn": "this.parameters.put()", "truth_type": "this.parameters", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder incrementalDeployment(boolean deltaDeploy) { this.deltaDeploy = deltaDeploy; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { <mask><mask><mask><mask>.put(name, value);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params);"}, {"fqn": "this.parameters.put()", "truth_type": "this.parameters", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { <mask><mask><mask><mask>.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(<mask><mask><mask>.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params);"}, {"fqn": "this.parameters.putAll()", "truth_type": "this.parameters", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withIncrementalDeployment() { this.deltaDeploy = true; return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { <mask><mask><mask><mask>.putAll(params);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value);"}, {"fqn": "this.parameters.put()", "truth_type": "this.parameters", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { <mask><mask><mask><mask>.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(<mask><mask><mask>.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value);"}, {"fqn": "this.parameters.putAll()", "truth_type": "this.parameters", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { <mask><mask><mask><mask>.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value);"}, {"fqn": "this.variables.put()", "truth_type": "this.variables", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParam(java.lang.String name, java.lang.String value) { this.parameters.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { <mask><mask><mask><mask>.put(name, value);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(<mask><mask><mask>.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars);"}, {"fqn": "this.parameters.putAll()", "truth_type": "this.parameters", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { <mask><mask><mask><mask>.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars);"}, {"fqn": "this.variables.put()", "truth_type": "this.variables", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { <mask><mask><mask><mask>.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars);"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(<mask><mask><mask>.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars);"}, {"fqn": "this.variables.putAll()", "truth_type": "this.variables", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withParams(java.util.Map<java.lang.String, java.lang.String> params) { if (params != null) { this.parameters.putAll(params); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { <mask><mask><mask><mask>.putAll(vars);"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "this.variables.put()", "truth_type": "this.variables", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { <mask><mask><mask><mask>.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(<mask><mask><mask>.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "this.variables.putAll()", "truth_type": "this.variables", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { <mask><mask><mask><mask>.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "com.cloudbees.api.config.ConfigParameters", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(<mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVar(java.lang.String name, java.lang.String value) { this.variables.put(name, value); return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((<mask><mask><mask>.Map<java.lang.String, java.lang.String>) (config.getParameters())));"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(<mask><mask><mask>.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "this.variables.putAll()", "truth_type": "this.variables", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { <mask><mask><mask><mask>.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "com.cloudbees.api.config.ConfigParameters", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(<mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((<mask><mask><mask>.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (<mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "java.lang.Iterable", "truth_type": "java.lang", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((<mask><mask><mask>.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<<mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  <mask><mask><mask>.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withVars(java.util.Map<java.lang.String, java.lang.String> vars) { if (vars != null) { this.variables.putAll(vars); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), <mask><mask><mask>.Map$Entry.getValue()); } return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "com.cloudbees.api.config.ConfigParameters", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(<mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((<mask><mask><mask>.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (<mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "java.lang.Iterable", "truth_type": "java.lang", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((<mask><mask><mask>.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "java.util.Map.Entry", "truth_type": "java.util.Map", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<<mask><mask><mask><mask><mask>.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  <mask><mask><mask>.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), <mask><mask><mask>.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs.Builder", "truth_type": "com.cloudbees.api.ApplicationDeployArgs", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Builder withProgressFeedback(com.cloudbees.api.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "} public com.cloudbees.api.ApplicationDeployArgs.Builder withConfigs(com.cloudbees.api.config.ConfigParameters config) { withVars(((java.util.Map<java.lang.String, java.lang.String>) (config.getParameters()))); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : ((java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>>) (config.getRuntimeParameters().entrySet()))) { withParam(String + ((java.lang.String)  java.util.Map$Entry.getKey())), java.util.Map$Entry.getValue()); } return this; } public com.cloudbees.api.ApplicationDeployArgs.Builder withProgressFeedback(<mask><mask><mask><mask><mask><mask>.UploadProgress progress) { this.progress = progress; return this;"}, {"fqn": "com.cloudbees.api.ApplicationDeployArgs()", "truth_type": "com.cloudbees.api", "context": "} return new <mask><mask><mask><mask><mask><mask>.ApplicationDeployArgs(this); } } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private <mask><mask><mask>.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "com.cloudbees.api.ServiceSubscriptionInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceSubscriptionInfo> subscriptions; public java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public <mask><mask><mask>.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "com.cloudbees.api.ServiceSubscriptionInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new <mask><mask><mask>.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "com.cloudbees.api.ServiceSubscriptionInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask>.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(<mask><mask><mask>.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "com.cloudbees.api.ServiceSubscriptionInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionListResponse { private java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> subscriptions; public java.util.List<com.cloudbees.api.ServiceSubscriptionInfo> getSubscriptions() { if (this.subscriptions == null) { this.subscriptions = new java.util.ArrayList<com.cloudbees.api.ServiceSubscriptionInfo>(); } return this.subscriptions; } public void setSubscriptions(java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceSubscriptionInfo> subscriptions) { this.subscriptions = subscriptions; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ResourceBindingInfo { private java.lang.String fromService; private java.lang.String fromResourceId; private java.lang.String toService; private java.lang.String toResourceId; private java.lang.String alias;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "private java.lang.String toService; private java.lang.String toResourceId; private java.lang.String alias; <mask><mask><mask>.Map<java.lang.String, java.lang.String> config; public ResourceBindingInfo() { } public ResourceBindingInfo(java.lang.String fromService, java.lang.String fromResourceId, java.lang.String toService, java.lang.String toResourceId, java.lang.String alias) { this.fromService = fromService;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "private java.lang.String alias; <mask><mask><mask>.Map<java.lang.String, java.lang.String> config; public ResourceBindingInfo() { } public ResourceBindingInfo(java.lang.String fromService, java.lang.String fromResourceId, java.lang.String toService, java.lang.String toResourceId, java.lang.String alias) { this.fromService = fromService; this.fromResourceId = fromResourceId; this.toService = toService;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setToResourceId(java.lang.String toResourceId) { this.toResourceId = toResourceId; } public java.lang.String getAlias() { return this.alias; } public void setAlias(java.lang.String alias) { this.alias = alias; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(java.util.Map<java.lang.String, java.lang.String> config) { this.config = config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setToResourceId(java.lang.String toResourceId) { this.toResourceId = toResourceId; } public java.lang.String getAlias() { return this.alias; } public void setAlias(java.lang.String alias) { this.alias = alias; } public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(<mask><mask><mask>.Map<java.lang.String, java.lang.String> config) { this.config = config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setAlias(java.lang.String alias) { this.alias = alias; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(java.util.Map<java.lang.String, java.lang.String> config) { this.config = config; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public void setAlias(java.lang.String alias) { this.alias = alias; } public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(<mask><mask><mask>.Map<java.lang.String, java.lang.String> config) { this.config = config; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<com.cloudbees.api.ServiceResourceInfo> resources; public java.util.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private <mask><mask><mask>.List<com.cloudbees.api.ServiceResourceInfo> resources; public java.util.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "com.cloudbees.api.ServiceResourceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceResourceInfo> resources; public java.util.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<com.cloudbees.api.ServiceResourceInfo> resources; public <mask><mask><mask>.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "com.cloudbees.api.ServiceResourceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<com.cloudbees.api.ServiceResourceInfo> resources; public java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<com.cloudbees.api.ServiceResourceInfo> resources; public java.util.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new <mask><mask><mask>.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "com.cloudbees.api.ServiceResourceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<com.cloudbees.api.ServiceResourceInfo> resources; public java.util.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask>.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<com.cloudbees.api.ServiceResourceInfo> resources; public java.util.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(<mask><mask><mask>.List<com.cloudbees.api.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "com.cloudbees.api.ServiceResourceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceListResponse { private java.util.List<com.cloudbees.api.ServiceResourceInfo> resources; public java.util.List<com.cloudbees.api.ServiceResourceInfo> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.ServiceResourceInfo>(); } return this.resources; } public void setResources(java.util.List<<mask><mask><mask><mask><mask><mask>.ServiceResourceInfo> resources) { this.resources = resources; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ServiceSubscriptionInfo { java.lang.String id; java.lang.String service; java.util.Map<java.lang.String, java.lang.String> config; java.util.Map<java.lang.String, java.lang.String> settings; java.lang.String message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionInfo { java.lang.String id; java.lang.String service; <mask><mask><mask>.Map<java.lang.String, java.lang.String> config; java.util.Map<java.lang.String, java.lang.String> settings; java.lang.String message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceSubscriptionInfo { java.lang.String id; java.lang.String service; java.util.Map<java.lang.String, java.lang.String> config; <mask><mask><mask>.Map<java.lang.String, java.lang.String> settings; java.lang.String message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "<mask><mask><mask>.Map<java.lang.String, java.lang.String> config; java.util.Map<java.lang.String, java.lang.String> settings; java.lang.String message; java.lang.String plan; public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.util.Map<java.lang.String, java.lang.String> config; <mask><mask><mask>.Map<java.lang.String, java.lang.String> settings; java.lang.String message; java.lang.String plan; public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.util.Map<java.lang.String, java.lang.String> config; java.util.Map<java.lang.String, java.lang.String> settings; java.lang.String message; java.lang.String plan; public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getConfig() { return this.config;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.lang.String message; java.lang.String plan; public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(java.util.Map<java.lang.String, java.lang.String> config) { this.config = config; } public java.lang.String getId() { return this.id;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "java.lang.String message; java.lang.String plan; public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(<mask><mask><mask>.Map<java.lang.String, java.lang.String> config) { this.config = config; } public java.lang.String getId() { return this.id;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(java.util.Map<java.lang.String, java.lang.String> config) { this.config = config; } public java.lang.String getId() { return this.id; } public void setId(java.lang.String id) { this.id = id; } public java.lang.String getMessage() { return this.message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "public java.util.Map<java.lang.String, java.lang.String> getConfig() { return this.config; } public void setConfig(<mask><mask><mask>.Map<java.lang.String, java.lang.String> config) { this.config = config; } public java.lang.String getId() { return this.id; } public void setId(java.lang.String id) { this.id = id; } public java.lang.String getMessage() { return this.message;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.lang.String getMessage() { return this.message; } public void setMessage(java.lang.String message) { this.message = message; } public java.lang.String getService() { return this.service; } public void setService(java.lang.String service) { this.service = service; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.lang.String getService() { return this.service; } public void setService(java.lang.String service) { this.service = service; } public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } public java.lang.String getPlan() { return this.plan;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.lang.String getService() { return this.service; } public void setService(java.lang.String service) { this.service = service; } public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } public java.lang.String getPlan() { return this.plan;"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public <mask><mask><mask>.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(java.util.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } public java.lang.String getPlan() { return this.plan; } public void setPlan(java.lang.String plan) { this.plan = plan; } };"}, {"fqn": "java.util.Map", "truth_type": "java.util", "context": "} public java.util.Map<java.lang.String, java.lang.String> getSettings() { return this.settings; } public void setSettings(<mask><mask><mask>.Map<java.lang.String, java.lang.String> settings) { this.settings = settings; } public java.lang.String getPlan() { return this.plan; } public void setPlan(java.lang.String plan) { this.plan = plan; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class DatabaseCreateResponse { private java.lang.String databaseId; public DatabaseCreateResponse() { } public DatabaseCreateResponse(java.lang.String databaseId) { this.databaseId = databaseId; } public java.lang.String getDatabaseId() { return this.databaseId; } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ServiceResourceResponse { com.cloudbees.api.ServiceResourceInfo resource; public ServiceResourceResponse() { } public ServiceResourceResponse(com.cloudbees.api.ServiceResourceInfo resource) { this.resource = resource; } public com.cloudbees.api.ServiceResourceInfo getResource() { return this.resource; } };"}, {"fqn": "com.cloudbees.api.ServiceResourceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceResponse { <mask><mask><mask><mask><mask><mask>.ServiceResourceInfo resource; public ServiceResourceResponse() { } public ServiceResourceResponse(com.cloudbees.api.ServiceResourceInfo resource) { this.resource = resource; } public com.cloudbees.api.ServiceResourceInfo getResource() { return this.resource; } };"}, {"fqn": "com.cloudbees.api.ServiceResourceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceResponse { com.cloudbees.api.ServiceResourceInfo resource; public ServiceResourceResponse() { } public ServiceResourceResponse(<mask><mask><mask><mask><mask><mask>.ServiceResourceInfo resource) { this.resource = resource; } public com.cloudbees.api.ServiceResourceInfo getResource() { return this.resource; } };"}, {"fqn": "com.cloudbees.api.ServiceResourceInfo", "truth_type": "com.cloudbees.api", "context": "@com.thoughtworks.xstream.annotations.XStreamAlias(String) public class ServiceResourceResponse { com.cloudbees.api.ServiceResourceInfo resource; public ServiceResourceResponse() { } public ServiceResourceResponse(com.cloudbees.api.ServiceResourceInfo resource) { this.resource = resource; } public <mask><mask><mask><mask><mask><mask>.ServiceResourceInfo getResource() { return this.resource; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.XStream.annotations", "context": "@com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.cloudbees.api.config.ParameterHolder", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends <mask><mask><mask><mask><mask><mask><mask><mask>.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.thoughtworks.xstream.XStream.annotations.XStreamImplicit()", "truth_type": "com.thoughtworks.xstream.XStream.annotations", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private <mask><mask><mask>.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.thoughtworks.xstream.XStream.annotations.XStreamImplicit()", "truth_type": "com.thoughtworks.xstream.XStream.annotations", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private <mask><mask><mask>.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public <mask><mask><mask>.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new <mask><mask><mask>.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(<mask><mask><mask>.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "@com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamAlias(String) public class ConfigParameters extends com.cloudbees.api.config.ParameterHolder { @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.ResourceSettings> resources; @com.thoughtworks com.thoughtworks.xstream.XStream.annotations.XStreamImplicit(itemFieldName = String) private java.util.List<com.cloudbees.api.config.Environment> environments; public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment> environments) { this.environments = environments;"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "public <mask><mask><mask>.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment);"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "public java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment);"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new <mask><mask><mask>.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment);"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment);"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(<mask><mask><mask>.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment);"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment);"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(<mask><mask><mask><mask><mask><mask><mask><mask>.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment);"}, {"fqn": "com.cloudbees.api.config.Environment.getName()", "truth_type": "com.cloudbees.api.config.Environment", "context": "public java.util.List<com.cloudbees.api.config.Environment> getEnvironments() { if (this.environments == null) { this.environments = new java.util.ArrayList<com.cloudbees.api.config.Environment>(); } return this.environments; } public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName()); getEnvironments().add(environment);"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "} public void setEnvironments(<mask><mask><mask>.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment); } public com.cloudbees.api.config.Environment getEnvironment(java.lang.String env) { for (com.cloudbees.api.config.Environment environment : getEnvironments()) { if (env.equals com.cloudbees.api.config.Environment.getName())) { return environment; } } return null;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "} public void setEnvironments(java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment); } public com.cloudbees.api.config.Environment getEnvironment(java.lang.String env) { for (com.cloudbees.api.config.Environment environment : getEnvironments()) { if (env.equals com.cloudbees.api.config.Environment.getName())) { return environment; } } return null;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "} public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(<mask><mask><mask><mask><mask><mask><mask><mask>.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment); } public com.cloudbees.api.config.Environment getEnvironment(java.lang.String env) { for (com.cloudbees.api.config.Environment environment : getEnvironments()) { if (env.equals com.cloudbees.api.config.Environment.getName())) { return environment; } } return null;"}, {"fqn": "com.cloudbees.api.config.Environment.getName()", "truth_type": "com.cloudbees.api.config.Environment", "context": "} public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName()); getEnvironments().add(environment); } public com.cloudbees.api.config.Environment getEnvironment(java.lang.String env) { for (com.cloudbees.api.config.Environment environment : getEnvironments()) { if (env.equals com.cloudbees.api.config.Environment.getName())) { return environment; } } return null;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "} public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment); } public <mask><mask><mask><mask><mask><mask><mask><mask>.Environment getEnvironment(java.lang.String env) { for (com.cloudbees.api.config.Environment environment : getEnvironments()) { if (env.equals com.cloudbees.api.config.Environment.getName())) { return environment; } } return null;"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "} public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment); } public com.cloudbees.api.config.Environment getEnvironment(java.lang.String env) { for (<mask><mask><mask><mask><mask><mask><mask><mask>.Environment environment : getEnvironments()) { if (env.equals com.cloudbees.api.config.Environment.getName())) { return environment; } } return null;"}, {"fqn": "com.cloudbees.api.config.Environment.getName()", "truth_type": "com.cloudbees.api.config.Environment", "context": "} public void setEnvironments(java.util.List<com.cloudbees.api.config.Environment> environments) { this.environments = environments; } public void setEnvironment(com.cloudbees.api.config.Environment environment) { deleteEnvironment com.cloudbees.api.config.Environment.getName()); getEnvironments().add(environment); } public com.cloudbees.api.config.Environment getEnvironment(java.lang.String env) { for (com.cloudbees.api.config.Environment environment : getEnvironments()) { if (env.equals <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName())) { return environment; } } return null;"}, {"fqn": "java.util.Iterator.hasNext()", "truth_type": "java.util.Iterator", "context": "while  <mask><mask><mask><mask><mask>.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.Environment", "truth_type": "com.cloudbees.api.config", "context": "while  java.util.Iterator.hasNext()) { if (((<mask><mask><mask><mask><mask><mask><mask><mask>.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "java.util.Iterator.next()", "truth_type": "java.util.Iterator", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  <mask><mask><mask><mask><mask>.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "java.util.Iterator.remove()", "truth_type": "java.util.Iterator", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { <mask><mask><mask><mask><mask>.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public <mask><mask><mask>.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "java.util.ArrayList", "truth_type": "java.util", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new <mask><mask><mask>.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "java.util.List", "truth_type": "java.util", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(<mask><mask><mask>.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.Environment)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } public java.util.List<com.cloudbees.api.config.ResourceSettings> getResources() { if (this.resources == null) { this.resources = new java.util.ArrayList<com.cloudbees.api.config.ResourceSettings>(); } return this.resources; } public void setResources(java.util.List<com.cloudbees.api.config.ResourceSettings> resources) { this.resources = resources; } public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName());"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public <mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "java.util.Iterator", "truth_type": "java.util", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { <mask><mask><mask>.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void setResource(com.cloudbees.api.config.ResourceSettings resource) { deleteResource com.cloudbees.api.config.ResourceSettings.getName()); getResources().add(resource); } public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> it = getResources().iterator();"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public <mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.getName()", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "java.util.Iterator", "truth_type": "java.util", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { <mask><mask><mask>.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "java.util.Iterator.hasNext()", "truth_type": "java.util.Iterator", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  <mask><mask><mask><mask><mask>.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "java.util.Iterator.next()", "truth_type": "java.util.Iterator", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  <mask><mask><mask><mask><mask>.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "java.util.Iterator.remove()", "truth_type": "java.util.Iterator", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { <mask><mask><mask><mask><mask>.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream()", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper()", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.Mapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "java.lang.Class", "truth_type": "java.lang", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(<mask><mask><mask>.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "java.lang.Object.class", "truth_type": "java.lang.Object", "context": "} public com.cloudbees.api.config.ResourceSettings getResource(java.lang.String name) { for (com.cloudbees.api.config.ResourceSettings resource : getResources()) { if  com.cloudbees.api.config.ResourceSettings.getName().equals(name)) { return resource; } } return null; } public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != <mask><mask><mask><mask><mask>.class) && super.shouldSerializeMember(definedIn, fieldName);"}, {"fqn": "java.util.Iterator", "truth_type": "java.util", "context": "} public void deleteResource(java.lang.String name) { <mask><mask><mask>.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "java.util.Iterator.hasNext()", "truth_type": "java.util.Iterator", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  <mask><mask><mask><mask><mask>.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.cloudbees.api.config.ResourceSettings", "truth_type": "com.cloudbees.api.config", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((<mask><mask><mask><mask><mask><mask><mask><mask>.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "java.util.Iterator.next()", "truth_type": "java.util.Iterator", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  <mask><mask><mask><mask><mask>.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "java.util.Iterator.remove()", "truth_type": "java.util.Iterator", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { <mask><mask><mask><mask><mask>.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream()", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper()", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.Mapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "java.lang.Class", "truth_type": "java.lang", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(<mask><mask><mask>.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "java.lang.Object.class", "truth_type": "java.lang.Object", "context": "} public void deleteResource(java.lang.String name) { java.util.Iterator<com.cloudbees.api.config.ResourceSettings> it = getResources().iterator(); while  java.util.Iterator.hasNext()) { if (((com.cloudbees.api.config.ResourceSettings)  java.util.Iterator.next())).getName().equals(name)) { java.util.Iterator.remove(); } } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != <mask><mask><mask><mask><mask>.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} } } private static com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream()", "truth_type": "com.thoughtworks.xstream.XStream", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.MapperWrapper()", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.mapper.Mapper", "truth_type": "com.thoughtworks.xstream.XStream.mapper", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "java.lang.Class", "truth_type": "java.lang", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(<mask><mask><mask>.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "java.lang.Object.class", "truth_type": "java.lang.Object", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != <mask><mask><mask><mask><mask>.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.setClassLoader()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.class.getClassLoader()", "truth_type": "com.cloudbees.api.config.ConfigParameters.class", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.class", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": "} } } private static com.thoughtworks com.thoughtworks.xstream.XStream.XStream createXStream() { com.thoughtworks com.thoughtworks.xstream.XStream.XStream xstream = new com.thoughtworks com.thoughtworks.xstream.XStream.XStream() { protected com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper wrapMapper(com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper next) { return new com.thoughtworks com.thoughtworks.xstream.XStream.mapper.MapperWrapper(((com.thoughtworks com.thoughtworks.xstream.XStream.mapper.Mapper) (next))) { public boolean shouldSerializeMember(java.lang.Class<java.lang.Object> definedIn, java.lang.String fieldName) { return (definedIn != java.lang.Object.class) && super.shouldSerializeMember(definedIn, fieldName); } }; } };  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.setClassLoader(com.cloudbees.api.config.ConfigParameters.class.getClassLoader());  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.cloudbees.api.config.ParameterSettings.class", "truth_type": "com.cloudbees.api.config.ParameterSettings", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.cloudbees.api.config.ResourceSettings.class", "truth_type": "com.cloudbees.api.config.ResourceSettings", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.cloudbees.api.config.Environment.class", "truth_type": "com.cloudbees.api.config.Environment", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.class", "truth_type": "com.cloudbees.api.config.ConfigParameters", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ParameterHolder.class);"}, {"fqn": "com.cloudbees.api.config.ParameterHolder.class", "truth_type": "com.cloudbees.api.config.ParameterHolder", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ResourceSettings.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this);"}, {"fqn": "com.cloudbees.api.config.Environment.class", "truth_type": "com.cloudbees.api.config.Environment", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this);"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.class", "truth_type": "com.cloudbees.api.config.ConfigParameters", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this);"}, {"fqn": "com.cloudbees.api.config.ParameterHolder.class", "truth_type": "com.cloudbees.api.config.ParameterHolder", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this);"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.createXStream()", "truth_type": "com.cloudbees.api.config.ConfigParameters", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.Environment.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ConfigParameters.class);  com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.createXStream().toXML(this);"}, {"fqn": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()", "truth_type": "com.thoughtworks.xstream.XStream.XStream", "context": " com.thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml)));"}, {"fqn": "com.cloudbees.api.config.ParameterHolder.class", "truth_type": "com.cloudbees.api.config.ParameterHolder", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml)));"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.createXStream()", "truth_type": "com.cloudbees.api.config.ConfigParameters", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml)));"}, {"fqn": "com.cloudbees.api.config.ConfigParameters", "truth_type": "com.cloudbees.api.config", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static <mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml)));"}, {"fqn": "com.cloudbees.api.config.ConfigParameters()", "truth_type": "com.cloudbees.api.config", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new <mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml)));"}, {"fqn": "com.cloudbees.api.config.ConfigParameters", "truth_type": "com.cloudbees.api.config", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((<mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml)));"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.createXStream()", "truth_type": "com.cloudbees.api.config.ConfigParameters", "context": " com.thoughtworks com.thoughtworks.xstream.XStream.XStream.processAnnotations(com.cloudbees.api.config.ParameterHolder.class); return xstream; } public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.createXStream().fromXML(xml)));"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.createXStream()", "truth_type": "com.cloudbees.api.config.ConfigParameters", "context": "} public java.lang.String toXML() { return <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml))); } };"}, {"fqn": "com.cloudbees.api.config.ConfigParameters", "truth_type": "com.cloudbees.api.config", "context": "} public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static <mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml))); } };"}, {"fqn": "com.cloudbees.api.config.ConfigParameters()", "truth_type": "com.cloudbees.api.config", "context": "} public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new <mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml))); } };"}, {"fqn": "com.cloudbees.api.config.ConfigParameters", "truth_type": "com.cloudbees.api.config", "context": "} public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((<mask><mask><mask><mask><mask><mask><mask><mask>.ConfigParameters) (com.cloudbees.api.config.ConfigParameters.createXStream().fromXML(xml))); } };"}, {"fqn": "com.cloudbees.api.config.ConfigParameters.createXStream()", "truth_type": "com.cloudbees.api.config.ConfigParameters", "context": "} public java.lang.String toXML() { return com.cloudbees.api.config.ConfigParameters.createXStream().toXML(this); } public static com.cloudbees.api.config.ConfigParameters parse(java.lang.String xml) { if (xml == null) { return new com.cloudbees.api.config.ConfigParameters(); } return ((com.cloudbees.api.config.ConfigParameters) (<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.createXStream().fromXML(xml))); } };"}, {"fqn": "com.thoughtworks.xstream.annotations.XStreamAlias()", "truth_type": "com.thoughtworks.xstream.annotations", "context": "@<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStreamAlias(String) public class DatabaseInfo { private java.lang.String name; private java.lang.String owner; private java.lang.String username; private java.lang.String password; private java.lang.String created;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "private java.lang.String master; private java.lang.String[] slaves; private int port; public DatabaseInfo(java.lang.String name, java.lang.String owner, java.lang.String username, java.lang.String password, <mask><mask><mask>.Date created, java.lang.String status, java.lang.String master, java.lang.String[] slaves, int port) { this.name = name; this.owner = owner;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public java.lang.String getName() { return this.name; } public java.lang.String getOwner() { return this.owner; } public java.lang.String getUsername() { return this.username; } public java.lang.String getPassword() { return this.password; } public <mask><mask><mask>.Date getCreated() { if (this.created == null) { return null;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public java.lang.String getUsername() { return this.username; } public java.lang.String getPassword() { return this.password; } public <mask><mask><mask>.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null;"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDate()", "truth_type": "com.cloudbees.api.DateHelper", "context": "} public java.lang.String getUsername() { return this.username; } public java.lang.String getPassword() { return this.password; } public java.util.Date getCreated() { if (this.created == null) { return null; } try { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null;"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} public java.lang.String getUsername() { return this.username; } public java.lang.String getPassword() { return this.password; } public java.util.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (<mask><mask><mask>.ParseException e) { return null;"}, {"fqn": "java.util.Date", "truth_type": "java.util", "context": "} public <mask><mask><mask>.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String getMaster() { return this.master;"}, {"fqn": "com.cloudbees.api.DateHelper.parseW3CDate()", "truth_type": "com.cloudbees.api.DateHelper", "context": "} public java.util.Date getCreated() { if (this.created == null) { return null; } try { return <mask><mask><mask><mask><mask><mask><mask><mask><mask>.parseW3CDate(this.created); } catch (java.text.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String getMaster() { return this.master;"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} public java.util.Date getCreated() { if (this.created == null) { return null; } try { return com.cloudbees.api.DateHelper.parseW3CDate(this.created); } catch (<mask><mask><mask>.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String getMaster() { return this.master;"}, {"fqn": "java.text.ParseException", "truth_type": "java.text", "context": "} catch (<mask><mask><mask>.ParseException e) { return null; } } public java.lang.String getStatus() { return this.status; } public java.lang.String getMaster() { return this.master; } public java.lang.String[] getSlaves() { return this.slaves; } public int getPort() { return this.port;"}, {"fqn": "com.cloudbees.api.UploadProgress", "truth_type": "com.cloudbees.api", "context": "public class HashWriteProgress implements <mask><mask><mask><mask><mask><mask>.UploadProgress { private final java.io.PrintStream out; boolean uploadComplete = false; long hashMarkCount = 0L; public HashWriteProgress() { this(java.lang.System.out); } public HashWriteProgress(java.io.PrintStream out) { this.out = out;"}, {"fqn": "java.io.PrintStream", "truth_type": "java.io", "context": "public class HashWriteProgress implements com.cloudbees.api.UploadProgress { private final <mask><mask><mask>.PrintStream out; boolean uploadComplete = false; long hashMarkCount = 0L; public HashWriteProgress() { this(java.lang.System.out); } public HashWriteProgress(java.io.PrintStream out) { this.out = out;"}, {"fqn": "java.lang.System.out", "truth_type": "java.lang.System", "context": "public class HashWriteProgress implements com.cloudbees.api.UploadProgress { private final java.io.PrintStream out; boolean uploadComplete = false; long hashMarkCount = 0L; public HashWriteProgress() { this(<mask><mask><mask><mask><mask>.out); } public HashWriteProgress(java.io.PrintStream out) { this.out = out;"}, {"fqn": "java.io.PrintStream", "truth_type": "java.io", "context": "public class HashWriteProgress implements com.cloudbees.api.UploadProgress { private final java.io.PrintStream out; boolean uploadComplete = false; long hashMarkCount = 0L; public HashWriteProgress() { this(java.lang.System.out); } public HashWriteProgress(<mask><mask><mask>.PrintStream out) { this.out = out;"}, {"fqn": "java.io.PrintStream", "truth_type": "java.io", "context": "} public HashWriteProgress(<mask><mask><mask>.PrintStream out) { this.out = out; } public void handleBytesWritten(long deltaCount, long totalWritten, long totalToSend) { if (this.uploadComplete) { return; } int totalMarks = ((int) ((((float) (totalWritten)) / ((float) (totalToSend))) / 100.0F)); while (this.hashMarkCount < totalMarks) { this.hashMarkCount++; if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { this.out.println(java.lang.String.format(String, new java.lang.Object[]{ java.lang.Long.valueOf(this.hashMarkCount) }));"}, {"fqn": "this.out.println()", "truth_type": "this.out", "context": "} public HashWriteProgress(java.io.PrintStream out) { this.out = out; } public void handleBytesWritten(long deltaCount, long totalWritten, long totalToSend) { if (this.uploadComplete) { return; } int totalMarks = ((int) ((((float) (totalWritten)) / ((float) (totalToSend))) / 100.0F)); while (this.hashMarkCount < totalMarks) { this.hashMarkCount++; if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { <mask><mask><mask>.println(java.lang.String.format(String, new java.lang.Object[]{ java.lang.Long.valueOf(this.hashMarkCount) }));"}, {"fqn": "java.lang.String.format()", "truth_type": "java.lang.String", "context": "} public HashWriteProgress(java.io.PrintStream out) { this.out = out; } public void handleBytesWritten(long deltaCount, long totalWritten, long totalToSend) { if (this.uploadComplete) { return; } int totalMarks = ((int) ((((float) (totalWritten)) / ((float) (totalToSend))) / 100.0F)); while (this.hashMarkCount < totalMarks) { this.hashMarkCount++; if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { this.out.println(<mask><mask><mask><mask><mask>.format(String, new java.lang.Object[]{ java.lang.Long.valueOf(this.hashMarkCount) }));"}, {"fqn": "java.lang.Long.valueOf()", "truth_type": "java.lang.Long", "context": "} public HashWriteProgress(java.io.PrintStream out) { this.out = out; } public void handleBytesWritten(long deltaCount, long totalWritten, long totalToSend) { if (this.uploadComplete) { return; } int totalMarks = ((int) ((((float) (totalWritten)) / ((float) (totalToSend))) / 100.0F)); while (this.hashMarkCount < totalMarks) { this.hashMarkCount++; if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { this.out.println(java.lang.String.format(String, new java.lang.Object[]{ <mask><mask><mask><mask><mask>.valueOf(this.hashMarkCount) }));"}, {"fqn": "this.out.println()", "truth_type": "this.out", "context": "if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { <mask><mask><mask>.println(java.lang.String.format(String, new java.lang.Object[]{ java.lang.Long.valueOf(this.hashMarkCount) })); continue; } this.uploadComplete = true; this.out.println(String); this.out.println(String);"}, {"fqn": "java.lang.String.format()", "truth_type": "java.lang.String", "context": "if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { this.out.println(<mask><mask><mask><mask><mask>.format(String, new java.lang.Object[]{ java.lang.Long.valueOf(this.hashMarkCount) })); continue; } this.uploadComplete = true; this.out.println(String); this.out.println(String);"}, {"fqn": "java.lang.Long.valueOf()", "truth_type": "java.lang.Long", "context": "if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { this.out.println(java.lang.String.format(String, new java.lang.Object[]{ <mask><mask><mask><mask><mask>.valueOf(this.hashMarkCount) })); continue; } this.uploadComplete = true; this.out.println(String); this.out.println(String);"}, {"fqn": "this.out.println()", "truth_type": "this.out", "context": "if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { this.out.println(java.lang.String.format(String, new java.lang.Object[]{ java.lang.Long.valueOf(this.hashMarkCount) })); continue; } this.uploadComplete = true; <mask><mask><mask>.println(String); this.out.println(String);"}, {"fqn": "this.out.println()", "truth_type": "this.out", "context": "if ((this.hashMarkCount % 25L) == 0L) { if (this.hashMarkCount < 100L) { this.out.println(java.lang.String.format(String, new java.lang.Object[]{ java.lang.Long.valueOf(this.hashMarkCount) })); continue; } this.uploadComplete = true; this.out.println(String); <mask><mask><mask>.println(String);"}, {"fqn": "this.out.println()", "truth_type": "this.out", "context": "<mask><mask><mask>.println(String); continue; } this.out.print(String); } } };"}, {"fqn": "this.out.print()", "truth_type": "this.out", "context": "this.out.println(String); continue; } <mask><mask><mask>.print(String); } } };"}]}]