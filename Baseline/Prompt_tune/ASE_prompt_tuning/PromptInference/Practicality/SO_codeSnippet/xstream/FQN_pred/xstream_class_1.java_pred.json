[
  {
    "originalCode": "public class xstream_class_1 implements Converter",
    "FQNCode": "public class xstream_class_1 implements <MASK>.Converter",
    "fqnToken": [
      [
        "com.thoughtworks.xstream.converters.Converter",
        "com.thoughtworks.xstream.converters.collections.Converter",
        "java.io.Converter",
        "com.thoughtworks.xstream.converters.ters.Converter",
        "com.thoughtworks.xstream.convertersver.Converter",
        "com.thoughtworks.xstream.conver.Converter",
        "com.thoughtworks.xstream.converters.javverers.Converter",
        "com.thoughtworks.xstream.io.Converter",
        "com.thoughtworks.xstream.Converter",
        "com.thoughtworks.xstream.converters.colended.Stream.ververter.Converter",
        "com.thoughtworks.xstream.converters.jended.et.ConStreamableStreamverter.Converter",
        "com.thoughtworks.xstreamvert.Converter",
        "j.util.ters.Converter",
        "org.mvert.Converter"
      ]
    ]
  },
  {
    "originalCode": "public Object unmarshal(HierarchicalStreamReader reader,UnmarshallingContext context)",
    "FQNCode": "public Object unmarshal(<MASK>.HierarchicalStreamReader reader,<MASK>.UnmarshallingContext context)",
    "fqnToken": [
      [
        "com.thoughtworks.xstream.io.HierarchicalStreamReader",
        "java.io.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.path.HierarchicalStreamReader",
        "com.thoughtworks.xstream.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.path.io.HierarchicalStreamReader",
        "com.thoughtworks.x.io.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.ters.refier.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.xml.j.stream.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.v.jm.io.HierarchicalStreamReader",
        "com.thoughtwinternal.stream.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.json.xlectionsHierNCHStream.Driver.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.ters.ioH.ierStream.Driver.HierarchicalStreamReader",
        "java.io.stream.HierarchicalStreamReader",
        "java.ioio.HierarchicalStreamReader"
      ],
      [
        "com.thoughtworks.xstream.converters.UnmarshallingContext",
        "com.thoughtworks.xstream.convertersmer.UnmarshallingContext",
        "com.thoughtworks.xstream.converallpc.UnmarshallingContext",
        "com.thoughtworks.xstream.converters.exter.UnmarshallingContext",
        "com.thoughtworks.xstream.conver.UnmarshallingContext",
        "java.io.UnmarshallingContext",
        "com.thoughtworks.xstream.converters.Javverer.UnmarshallingContext",
        "com.thoughtworks.xstream.con.ters.XStream.arshverter.UnmarshallingContext",
        "com.thoughtworks.xstream.coreverters.JmarshCodter.UnmarshallingContext",
        "com.thoughtworks.xstream.con.UnmarshallingContext",
        "com.thoughtworks.xstream.converters.colext.etInfoConverter.UnmarshallingContext",
        "com.thoughtworks.xstream.UnmarshallingContext",
        "sun.teleall.UnmarshallingContext",
        "com.time.er.UnmarshallingContext"
      ]
    ]
  },
  {
    "originalCode": "public void marshal(Object arg0, HierarchicalStreamWriter arg1, MarshallingContext arg2)",
    "FQNCode": "public void marshal(Object arg0, <MASK>.HierarchicalStreamWriter arg1, <MASK>.MarshallingContext arg2)",
    "fqnToken": [
      [
        "com.thoughtworks.xstream.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.path.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.path.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.pathier.HierarchicalStreamWriter",
        "java.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.ioio.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.ters.j.proxy.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.ters.xructure.io.HierarchicalStreamWriter",
        "com.thoughtworks.x.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.Jltj.pperizer.HierarchicalStreamWriter",
        "com.io.internal.stream.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.JHMarsh.streamalter.HierarchicalStreamWriter",
        "java.io.stream.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.Jenh.HHicalarch.faceslection.HierarchicalStreamWriter",
        "java.ioio.HierarchicalStreamWriter",
        "org.htwn.xstream.test.mapping.enhance.Java.azy.io.MarsharshToOnWithProxyarcharshterio.HierarchicalStreamWriter"
      ],
      [
        "com.thoughtworks.xstream.converters.MarshallingContext",
        "com.thoughtworks.xstream.converters.reflection.MarshallingContext",
        "com.thoughtworks.xstream.convertersverutil.MarshallingContext",
        "com.thoughtworks.xstream.converallter.MarshallingContext",
        "java.io.MarshallingContext",
        "com.thoughtworks.xstream.mters.MarshallingContext",
        "com.thoughtworks.xstream.converters.j.er.MarshallingContext",
        "com.thoughtworks.xstream.converters.ce.Marsher.MarshallingContext",
        "com.thoughtworks.xstream.coreverters.Hlmarshverter.MarshallingContext",
        "com.thoughtworks.xstream.coreverters.Jlarshallingter.MarshallingContext",
        "com.thoughtworks.xstream.converters.Wra.Marshallingavverter.MarshallingContext",
        "com.thoughtworks.xstream.converters.J.HHJavaMarshverter.MarshallingContext",
        "com.thoughtworks.xstream.core.MarshallingContext",
        "com.thoughtworks.xstream.MarshallingContext",
        "java.mmi.MarshallingContext",
        "java.ax.io.MarshallingContext"
      ]
    ]
  }
]