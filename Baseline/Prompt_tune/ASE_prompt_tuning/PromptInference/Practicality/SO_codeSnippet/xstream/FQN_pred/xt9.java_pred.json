[
  {
    "originalCode": "ByteArrayOutputStream outputStream = new ByteArrayOutputStream();",
    "FQNCode": "<MASK>.ByteArrayOutputStream outputStream = new <MASK>.ByteArrayOutputStream();",
    "fqnToken": [
      [
        "java.io.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xsltc.computil.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xsltc.io.ByteArrayOutputStream"
      ],
      [
        "java.io.ByteArrayOutputStream",
        "com.sun.org.apache.xml.internal.security.util.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xs.c.compWriter.ByteArrayOutputStream"
      ]
    ]
  },
  {
    "originalCode": "Result outputTarget = new StreamResult(outputStream);",
    "FQNCode": "<MASK>.Result outputTarget = new <MASK>.StreamResult(outputStream);",
    "fqnToken": [
      [
        "javax.xml.transform.Result",
        "java.lang.Result",
        "javax.xml.transform.stream.Result"
      ],
      [
        "javax.xml.transform.StreamResult",
        "javax.xml.transform.stream.StreamResult",
        "java.io.StreamResult"
      ]
    ]
  },
  {
    "originalCode": "Transformer t = TransformerFactory.newInstance().newTransformer();",
    "FQNCode": "<MASK>.Transformer t = <MASK>.TransformerFactory.newInstance().newTransformer();",
    "fqnToken": [
      [
        "javax.xml.transform.Transformer",
        "javax.xml.Transformer",
        "javax.xml.transform.Transax.Transformer"
      ],
      [
        "javax.xml.transform.TransformerFactory",
        "javax.xml.transform.transax.TransformerFactory",
        "javax.xml.TransformerFactory"
      ]
    ]
  },
  {
    "originalCode": "public xt9() throws TransformerConfigurationException",
    "FQNCode": "public xt9() throws <MASK>.TransformerConfigurationException",
    "fqnToken": [
      [
        "javax.xml.transform.TransformerConfigurationException",
        "javax.xml.TransformerConfigurationException",
        "javax.xml.xpath.TransformerConfigurationException"
      ]
    ]
  }
]