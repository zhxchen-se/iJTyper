[
  {
    "originalCode": "public class hibernate_class_44 extends DispatchAction",
    "FQNCode": "public class hibernate_class_44 extends <MASK>.DispatchAction",
    "fqnToken": [
      [
        "javax.http.DispatchAction",
        "org.apache.servlet.action.DispatchAction",
        "android.webkit.DispatchAction",
        "org.ax.servlet.DispatchAction",
        "org.applet.DispatchAction",
        "org.apache.gwt.dev.ActionServvc.DispatchAction",
        "org.apache.gwt.tool.requestclient.Dispatchpatch.DispatchAction"
      ]
    ]
  },
  {
    "originalCode": "public ActionForward add(ActionMapping mapping, ActionForm form,",
    "FQNCode": "public <MASK>.ActionForward add(<MASK>.ActionMapping mapping, <MASK>.ActionForm form,",
    "fqnToken": [
      [
        "javax.swing.ActionForward",
        "org.apache.servlet.action.ActionForward",
        "java.action.ActionForward",
        "org.apache.xml.ws.ActionForward",
        "org.applet.ActionForward"
      ],
      [
        "javax.swing.ActionMapping",
        "java.swing.ActionMapping",
        "org.apache.struts.action.ActionMapping",
        "org.ax.swing.ws.ActionMapping",
        "java.mweb.ActionMapping",
        "org.apache.xmlws.maction.ActionMapping",
        "org.apache.xmlwt.action.http.ActionMapping"
      ],
      [
        "java.action.ActionForm",
        "org.apache.servlet.action.ActionForm",
        "j.ax.action.ActionForm",
        "org.ax.swing.text.ActionForm",
        "org.hibernate.editor.requestclient.modellerjTemplateTemplate.ActionForm",
        "applicant.glet.ActionForm"
      ]
    ]
  },
  {
    "originalCode": "HttpServletRequest request, HttpServletResponse response)",
    "FQNCode": "<MASK>.HttpServletRequest request, <MASK>.HttpServletResponse response)",
    "fqnToken": [
      [
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.HttpServletRequest",
        "javax.serv.http.HttpServletRequest",
        "java.net.HttpServletRequest",
        "javax.http.HttpServletRequest",
        "javax.servletty.http.HttpServletRequest",
        "org.applet.HttpServletRequest",
        "com.google.webwt.ery.requestfactory.http.messlet.HttpServletRequest"
      ],
      [
        "javax.servlet.http.HttpServletResponse",
        "javax.Http.http.HttpServletResponse",
        "javax.servlet.HttpServletResponse",
        "java.net.HttpServletResponse",
        "j.ax.http.HttpServletResponse",
        "javax.servlet.http.http.HttpServletResponse",
        "java.servlet.HttpServletResponse"
      ]
    ]
  },
  {
    "originalCode": "if (log.isDebugEnabled())",
    "FQNCode": "if (<MASK>.log.isDebugEnabled())",
    "fqnToken": [
      [
        "this.service.log",
        "org.hibernate.byte.requestfler.test.Sche.FormGenerHandler.log.log",
        "org.hibernate.ery.requestfactory.test.FormOperationFormlet.log.log",
        "org.hibernate.jp.request.ler.J.ServiceFormcher.log.log",
        "org.hibernate.dev.internal.EntityCompFormFactory.LOG.log",
        "org.hibernate.orm.j.lerAbstract.FormImpl.LOG.log",
        "org.h.nate.engine.CGeneractory.LOG.log",
        "org.hibernate.j.CJarGenerImpl.ger.log",
        "ToolHandler.this.log",
        "Comp.Service.Tree.log",
        "org.ax.transruntime.Action.log",
        "org.Repframework.Logilities.log"
      ]
    ]
  },
  {
    "originalCode": "log.debug(\"Entering Master add method\");",
    "FQNCode": "<MASK>.log.debug(\"Entering Master add method\");",
    "fqnToken": [
      [
        "this.this.log",
        "org.hibernate.testing.D.lerAbstract.Formility.LOG.log",
        "java.Service.System.log",
        "org.hibernate.COR.CactoryGenerImplFormFactory.log",
        "MessageHandler.this.log",
        "javax.transruntime.wing.log",
        "Defence.Request<?ActivityUtilities.log"
      ]
    ]
  },
  {
    "originalCode": "public ActionForward save(ActionMapping mapping, ActionForm form,",
    "FQNCode": "public <MASK>.ActionForward save(<MASK>.ActionMapping mapping, <MASK>.ActionForm form,",
    "fqnToken": [
      [
        "java.action.ActionForward",
        "org.apache.servlet.action.ActionForward",
        "javax.swing.ActionForward",
        "orgavax.swing.ws.ActionForward",
        "org.applet.ActionForward",
        "com.hiberxmlate.engine.request.actory.ocol.app.tmlImplCodeolverImpl.ActionForward"
      ],
      [
        "java.action.ActionMapping",
        "javax.swing.ActionMapping",
        "org.apache.servuts.action.ActionMapping",
        "org.ax.swing.ws.ActionMapping",
        "java.applet.ActionMapping",
        "org.apache.xmlws.spaction.ActionMapping",
        "org.h.gate.enginews.i.ij.ActionMapping",
        "org.h.nate.action.spapper.ActionMapping"
      ],
      [
        "java.net.ActionForm",
        "org.apache.servlet.action.ActionForm",
        "javax.action.ActionForm",
        "org.apache.swing.ws.ActionForm",
        "org.applet.ActionForm"
      ]
    ]
  },
  {
    "originalCode": "HttpServletRequest request, HttpServletResponse response)",
    "FQNCode": "<MASK>.HttpServletRequest request, <MASK>.HttpServletResponse response)",
    "fqnToken": [
      [
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.HttpServletRequest",
        "javax.serv.http.HttpServletRequest",
        "java.net.HttpServletRequest",
        "javax.http.HttpServletRequest",
        "javax.servletty.http.HttpServletRequest",
        "org.applet.HttpServletRequest",
        "com.google.webwt.ery.requestfactory.http.messlet.HttpServletRequest"
      ],
      [
        "javax.servlet.http.HttpServletResponse",
        "javax.Http.http.HttpServletResponse",
        "javax.servlet.HttpServletResponse",
        "java.net.HttpServletResponse",
        "j.ax.http.HttpServletResponse",
        "javax.servlet.http.http.HttpServletResponse",
        "java.servlet.HttpServletResponse"
      ]
    ]
  },
  {
    "originalCode": "SessionFactory sessionFactory=null;",
    "FQNCode": "<MASK>.SessionFactory sessionFactory=null;",
    "fqnToken": [
      [
        "org.hibernate.context.SessionFactory",
        "org.hibernate.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "org.hiber.ate..SessionFactory",
        "org.giber.SessionFactory",
        "org.hibern.SessionFactory",
        "java.sql.SessionFactory",
        "org.hibernate.orm.shellaction.gradocol.m.CImpl.AbstractApp.letRegionter.SessionFactory"
      ]
    ]
  },
  {
    "originalCode": "Session session =null;",
    "FQNCode": "<MASK>.Session session =null;",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hibernate.context.Session",
        "org.hibernate.engine.spi.Session",
        "org.hibernate.spcontext.Session",
        "java.app.Session",
        "org.hiber.Session",
        "org.hibernate.engine.shell.nSession.Session",
        "org.hiber.letcontext.Session",
        "org.hiberate.Session",
        "org.googleibergwt.dev.requestfactory.Abstract.HttpHost.Session",
        "org.googleiberwebwt.ery.requestfactory.server.R.SessionServContext.Session",
        "org.googleiberwebwt.ery.requestfactory.server.R.ServContext.Session",
        "org.googleiberwebwt.ery.requestfactory.ocol.R.Serv.RequestContext.Session",
        "org.googleiberwebwt.ery.requestfactory.ocol.R.letDirServiceContextContext.Session",
        "org.hiberwebate.ery.requestfactory.xs.Request.HorServableLoadContext.Session",
        "com.googleibergwt.dev.requestiactory.server.AbstractServHost.Session"
      ]
    ]
  },
  {
    "originalCode": "sessionFactory = (SessionFactory) servlet",
    "FQNCode": "sessionFactory = (<MASK>.SessionFactory) <MASK>.servlet",
    "fqnToken": [
      [
        "org.hibernate.context.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "java.sql.SessionFactory",
        "org.giber.SessionFactory",
        "org.axibern.SessionFactory",
        "org.googleibernate.engine.spi.Sessionspi.SessionFactory",
        "org.hibernate.engine.spipresent.Session.c.SessionFactory",
        "com.googleiberweb.bindery.requestfactory.server.Request.UtServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.ServImplServiceServContext.SessionFactory"
      ],
      [
        "com.google.web.bindery.requestfactory.server.Request.LServServlet.servlet",
        "org.ax.servwt.http.serverServServl.servlet",
        "org.ax.servlet.Serv.Context.servlet",
        "org.ax.servate.httpcodeServServContext.servlet",
        "java.ax.Context.servlet",
        "org.ax.servate.serverServletContext.servlet",
        "j.ax.servserver.ServB.servlet",
        "java.context.servlet",
        "java.g.obContext.servlet",
        "j.misclet.Engine.Handler.servlet",
        "Request.appthis.servlet",
        "java.reflectletServ.Context.servlet"
      ]
    ]
  },
  {
    "originalCode": "Transaction tx = session.beginTransaction();",
    "FQNCode": "<MASK>.Transaction tx = session.beginTransaction();",
    "fqnToken": [
      [
        "org.hibernate.Transaction",
        "org.hibernate.boot.Transaction",
        "org.hiber.Transaction",
        "org.hibern.Transaction",
        "org.hibernate.boot.spi.Transaction",
        "org.hibernate.engine.spi.Session.Transaction",
        "java.sql.Transaction",
        "org.hibernate.engine.sp.c.Transaction",
        "org.hibern.action.Transaction",
        "org.h.nate.InterTransaction.Transaction",
        "com.googleibernwt.dev.sp.actory.server.c.Servc.Transaction",
        "com.googleibernate.dev.spiactory.server.cosServContext.Transaction",
        "com.googleibernate.orm.server.actory.SSL.cizationLognContext.Transaction"
      ]
    ]
  },
  {
    "originalCode": "public ActionForward search(ActionMapping mapping, ActionForm form,",
    "FQNCode": "public <MASK>.ActionForward search(<MASK>.ActionMapping mapping, <MASK>.ActionForm form,",
    "fqnToken": [
      [
        "org.apache.servlet.action.ActionForward",
        "orgavax.swing.ActionForward",
        "java.transform.ActionForward",
        "org.ax.xml.ws.ActionForward",
        "org.ax.servlet.ActionForward",
        "org.elet.ActionForward",
        "com.google.web.bindery.requestfactory.ocol.Forward.cherletletRouteModeEditorlet.ActionForward",
        "com.google.web.bind.wsrequestfactory.ocol.Forward.tmlletFilterletExlet.ActionForward"
      ],
      [
        "java.action.ActionMapping",
        "javax.http.ActionMapping",
        "org.ax.swing.ws.ActionMapping",
        "org.apache.servuts.action.ActionMapping",
        "org.ax.servlet.ActionMapping",
        "org.applet.ActionMapping",
        "org.apache.xmlws.maction.ActionMapping"
      ],
      [
        "java.net.ActionForm",
        "org.apache.servlet.action.ActionForm",
        "j.ax.action.ActionForm",
        "j.ax.servlet.ActionForm",
        "org.apache.swing.ws.ActionForm",
        "org.apache.xmljetws.gen.ActionForm",
        "org.applet.ActionForm",
        "com.sun.web.bindery.request.actory.server.R.Templatelet.leteDefaultHandlerForm.ActionForm",
        "com.sun.web.bindery.request.actory.xs.U.Templatelet.letJMapletUrlModeHeaderTemplate.ActionForm"
      ]
    ]
  },
  {
    "originalCode": "HttpServletRequest request, HttpServletResponse response)",
    "FQNCode": "<MASK>.HttpServletRequest request, <MASK>.HttpServletResponse response)",
    "fqnToken": [
      [
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.HttpServletRequest",
        "javax.serv.http.HttpServletRequest",
        "java.net.HttpServletRequest",
        "javax.http.HttpServletRequest",
        "javax.servletty.http.HttpServletRequest",
        "org.applet.HttpServletRequest",
        "com.google.webwt.ery.requestfactory.http.messlet.HttpServletRequest"
      ],
      [
        "javax.servlet.http.HttpServletResponse",
        "javax.Http.http.HttpServletResponse",
        "javax.servlet.HttpServletResponse",
        "java.net.HttpServletResponse",
        "j.ax.http.HttpServletResponse",
        "javax.servlet.http.http.HttpServletResponse",
        "java.servlet.HttpServletResponse"
      ]
    ]
  },
  {
    "originalCode": "SessionFactory sessionFactory = (SessionFactory) servlet",
    "FQNCode": "<MASK>.SessionFactory sessionFactory = (<MASK>.SessionFactory) <MASK>.servlet",
    "fqnToken": [
      [
        "org.hibernate.SessionFactory",
        "org.hibernate.context.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "org.niber.SessionFactory",
        "org.hibern.SessionFactory",
        "org.hiber.letate.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.ServletServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.letImplletRequestContext.SessionFactory",
        "com.google.web.bindery.requestfactory.c.Request.AbstractServContext.SessionFactory",
        "java.h.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.Servil.SessionFactory",
        "com.google.web.bindery.spiactory.server.HttpServi.SessionFactory",
        "org.google.gwt.en.spver.Session.Session.SessionFactory"
      ],
      [
        "org.hibernate.SessionFactory",
        "org.hibernate.context.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "java.app.SessionFactory",
        "org.ax.n.SessionFactory",
        "org.giber.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.ServServServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.letImplletServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.AttributeServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.RequestHServor.SessionFactory",
        "com.google.gwt.engine.shellServ.Session.SessionFactory"
      ],
      [
        "com.google.web.bindery.requestfactory.server.RequestFactoryServlet.servlet",
        "com.google.web.bindery.requestfactory.server.Request.ServServlet.servlet",
        "com.google.web.bindery.requestfactory.server.Request.ServServServlet.servlet",
        "com.google.webwt.ery.requestfactory.server.HttpHost.servlet",
        "com.google.web.bindery.requestfactory.server.Request.Servlet.letACTOR.servlet",
        "com.google.web.bindery.requestfactory.server.Request.ServServlet.Client.servlet",
        "com.google.web.bindery.requestfactory.server.Simple.ServServlet.letENlet.servlet",
        "org.apache.servlet.http.HttpServletHandler.servlet",
        "org.e.servlet.Serv.Context.servlet",
        "org.google.servlet.http.letJletServHandler.servlet",
        "org.ax.servlet.http.HttpContext.servlet",
        "org.ax.servlet.Parser.servlet",
        "point.service.servlet",
        "request.servlet.servlet",
        "java.serv.servConnection.servlet",
        "reqRequestlet.Response.servlet"
      ]
    ]
  },
  {
    "originalCode": "HttpSession session1 = request.getSession();",
    "FQNCode": "<MASK>.HttpSession session1 = request.getSession();",
    "fqnToken": [
      [
        "java.net.HttpSession",
        "org.apache.http.HttpSession",
        "org.hibernate.HttpSession",
        "org.h.nate.http.HttpSession",
        "org.h.http.session.HttpSession",
        "org.hiber.HttpSession"
      ]
    ]
  },
  {
    "originalCode": "Session session = sessionFactory.openSession();",
    "FQNCode": "<MASK>.Session session = sessionFactory.openSession();",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hibernate.internal.Session",
        "org.hiber.Session",
        "org.hibernate.engine.Httpi.Session",
        "java.sql.Session",
        "org.hibern.ssl.Session",
        "org.hibern.Session",
        "org.hibernate.engine.htmli.Session.Session",
        "org.hibernate.engine.spi.HttpSession.Session",
        "org.hibernate.orm.spi.Session.UI.Session",
        "com.googleiberweb.bindery.requestfactory.ler.Simple.SessionorsemblLEDizTest.Session"
      ]
    ]
  },
  {
    "originalCode": "Transaction tx = session.beginTransaction();",
    "FQNCode": "<MASK>.Transaction tx = session.beginTransaction();",
    "fqnToken": [
      [
        "org.hibernate.Transaction",
        "org.hibernate.boot.Transaction",
        "org.hiber.Transaction",
        "org.hibern.Transaction",
        "org.hibernate.boot.spi.Transaction",
        "org.hibernate.engine.spi.Session.Transaction",
        "java.sql.Transaction",
        "org.hibernate.engine.sp.c.Transaction",
        "org.hibern.action.Transaction",
        "org.h.nate.InterTransaction.Transaction",
        "com.googleibernwt.dev.sp.actory.server.c.Servc.Transaction",
        "com.googleibernate.dev.spiactory.server.cosServContext.Transaction",
        "com.googleibernate.orm.server.actory.SSL.cizationLognContext.Transaction"
      ]
    ]
  },
  {
    "originalCode": "Query query = session.createQuery(SQL_QUERY);",
    "FQNCode": "<MASK>.Query query = session.createQuery(SQL_QUERY);",
    "fqnToken": [
      [
        "org.hibernate.query.Query",
        "org.hibernate.orm.test.hql.Query",
        "jakarta.persistence.Query",
        "org.hibernate.orm.test.query.Query",
        "org.hibernate.query.Query.Query",
        "org.hibernate.orm.test.p.select.Query",
        "org.hibernate.criteria.Query",
        "org.hibernate.orm.test.hql.comment.toby.Query",
        "java.util.Query",
        "j.arta.reflect.Query",
        "jakjistence.Query"
      ]
    ]
  },
  {
    "originalCode": "ArrayList al = new ArrayList();",
    "FQNCode": "<MASK>.ArrayList al = new <MASK>.ArrayList();",
    "fqnToken": [
      [
        "java.util.ArrayList",
        "org.hibernate.orm.test.jpa.query.ArrayList",
        "java.awutil.ArrayList",
        "jakarta.persistence.ArrayList",
        "org.hibernate.orm.test.query.animal.ArrayList",
        "org.hibernate.orm.test.util.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.l.izedCritm.Audal.ArrayList",
        "org.hibernate.jws.util.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementf.azy.internal.PAazalqlable.ableinternal.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.Onelinedirtychecking.Columnableftest.Selectutil.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.internal.LhierL.Columneria.fableTest.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementf.azy.internal.ManyhjAff.Listeria.ArrayList",
        "org.hibernate.orm.test.bytecode.enhance.querylazyociationTo.Many.ListBListscroll.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementflazy.internal.PAIgnToExqlnUtableTest.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementquerylJociation.nonNListEmbressionable.ArrayList",
        "j.ax.list.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.internal.QueryarshComparL.WithnfclassesTest.ArrayList",
        "org.omg.CORlist.ArrayList",
        "org.hibernate.internal.ArrayList",
        "org.googleibernate.orm.util.ArrayList"
      ],
      [
        "java.util.ArrayList",
        "org.hibernate.orm.test.queryql.ArrayList",
        "org.hibernate.orm.test.jpa.query.ArrayList",
        "java.util.Array.ArrayList",
        "org.hibernate.orm.test.sql.animal.ArrayList",
        "java.awt.ArrayList",
        "org.hibernate.orm.test.util.ArrayList",
        "java.util.conlist.ArrayList",
        "org.hibernate.jws.util.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementfl.izedCritj.Audal.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.Polyhirtychecking.ManyToOneql.j.critscroll.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.PAhirtychecking.ManyToOne.ationsfSelectscroll.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.PAlinedirtychecking.Columnableeriatest.Selectscroll.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementquerylazySimpleTo.ManyazyListBQueryTest.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.PolyazyToL.ManyAndfappedized.j.listutil.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.internal.QuerylinedierL.Columneria.fSelectscroll.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementflazySimpleb.ManyByqlColumn.columneria.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.Purchase.Llinediberchecking.WithWithManyations.j.critquery.Collectionscroll.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancementquerylazyOperation.nonNListEmbressionTest.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.internal.QueryIgnToalqlN.ablescroll.ArrayList"
      ]
    ]
  },
  {
    "originalCode": "for (Iterator i = query.iterate(); i.hasNext();)",
    "FQNCode": "for (<MASK>.Iterator i = query.iterate(); i.hasNext();)",
    "fqnToken": [
      [
        "java.util.Iterator",
        "java.util.Iterator.Iterator",
        "java.util..Iterator",
        "java.util.Collections.Iterator",
        "org.sun.tools.j.internal.util.Iterator",
        "org.sun.tools.internalorm.testutil.Comp.Parser.Iterator",
        "org.utilt.CORBA.Iterator",
        "jakarta.persotation.colation.Iterator",
        "org.hibernate.aming.Iterator"
      ]
    ]
  },
  {
    "originalCode": "public ActionForward edit(ActionMapping mapping, ActionForm form,",
    "FQNCode": "public <MASK>.ActionForward edit(<MASK>.ActionMapping mapping, <MASK>.ActionForm form,",
    "fqnToken": [
      [
        "java.net.ActionForward",
        "javax.swing.ActionForward",
        "org.apache.servlet.action.ActionForward",
        "orgavax.swing.ws.ActionForward",
        "org.applet.ActionForward",
        "org.hibernate.engine.request.app.ocol.Forward.tml.CodeEditorice.ActionForward",
        "org.hibernate.engine.shell.app.ocol.engine.MultiB.let.ActionForward"
      ],
      [
        "javax.swing.ActionMapping",
        "java.action.ActionMapping",
        "org.apache.struts.action.ActionMapping",
        "org.ax.swing.ws.ActionMapping",
        "java.applet.ActionMapping",
        "org.hibernate.enginews.i.ij.ActionMapping",
        "org.h.nate.engine.spapper.ActionMapping",
        "org.apache.nws.maction.ActionMapping",
        "org.hibernate.enws.f.Webapping.Kit.ActionMapping"
      ],
      [
        "java.net.ActionForm",
        "org.apache.servlet.action.ActionForm",
        "javax.action.ActionForm",
        "org.apache.swing.ws.ActionForm",
        "org.jlet.ActionForm"
      ]
    ]
  },
  {
    "originalCode": "HttpServletRequest request, HttpServletResponse response)",
    "FQNCode": "<MASK>.HttpServletRequest request, <MASK>.HttpServletResponse response)",
    "fqnToken": [
      [
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.HttpServletRequest",
        "javax.serv.http.HttpServletRequest",
        "java.net.HttpServletRequest",
        "javax.http.HttpServletRequest",
        "javax.servletty.http.HttpServletRequest",
        "org.applet.HttpServletRequest",
        "com.google.webwt.ery.requestfactory.http.messlet.HttpServletRequest"
      ],
      [
        "javax.servlet.http.HttpServletResponse",
        "javax.Http.http.HttpServletResponse",
        "javax.servlet.HttpServletResponse",
        "java.net.HttpServletResponse",
        "j.ax.http.HttpServletResponse",
        "javax.servlet.http.http.HttpServletResponse",
        "java.servlet.HttpServletResponse"
      ]
    ]
  },
  {
    "originalCode": "SessionFactory sessionFactory=null;",
    "FQNCode": "<MASK>.SessionFactory sessionFactory=null;",
    "fqnToken": [
      [
        "org.hibernate.context.SessionFactory",
        "org.hibernate.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "org.hiber.ate..SessionFactory",
        "org.giber.SessionFactory",
        "org.hibern.SessionFactory",
        "java.sql.SessionFactory",
        "org.hibernate.orm.shellaction.gradocol.m.CImpl.AbstractApp.letRegionter.SessionFactory"
      ]
    ]
  },
  {
    "originalCode": "Session session =null;",
    "FQNCode": "<MASK>.Session session =null;",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hibernate.context.Session",
        "org.hibernate.engine.spi.Session",
        "org.hibernate.spcontext.Session",
        "java.app.Session",
        "org.hiber.Session",
        "org.hibernate.engine.shell.nSession.Session",
        "org.hiber.letcontext.Session",
        "org.hiberate.Session",
        "org.googleibergwt.dev.requestfactory.Abstract.HttpHost.Session",
        "org.googleiberwebwt.ery.requestfactory.server.R.SessionServContext.Session",
        "org.googleiberwebwt.ery.requestfactory.server.R.ServContext.Session",
        "org.googleiberwebwt.ery.requestfactory.ocol.R.Serv.RequestContext.Session",
        "org.googleiberwebwt.ery.requestfactory.ocol.R.letDirServiceContextContext.Session",
        "org.hiberwebate.ery.requestfactory.xs.Request.HorServableLoadContext.Session",
        "com.googleibergwt.dev.requestiactory.server.AbstractServHost.Session"
      ]
    ]
  },
  {
    "originalCode": "if (log.isDebugEnabled())",
    "FQNCode": "if (<MASK>.log.isDebugEnabled())",
    "fqnToken": [
      [
        "this.service.log",
        "org.hibernate.byte.requestfler.test.Sche.FormGenerHandler.log.log",
        "org.hibernate.ery.requestfactory.test.FormOperationFormlet.log.log",
        "org.hibernate.jp.request.ler.J.ServiceFormcher.log.log",
        "org.hibernate.dev.internal.EntityCompFormFactory.LOG.log",
        "org.hibernate.orm.j.lerAbstract.FormImpl.LOG.log",
        "org.h.nate.engine.CGeneractory.LOG.log",
        "org.hibernate.j.CJarGenerImpl.ger.log",
        "ToolHandler.this.log",
        "Comp.Service.Tree.log",
        "org.ax.transruntime.Action.log",
        "org.Repframework.Logilities.log"
      ]
    ]
  },
  {
    "originalCode": "log.debug(\"Entering Master Edit method\");",
    "FQNCode": "<MASK>.log.debug(\"Entering Master Edit method\");",
    "fqnToken": [
      [
        "this.this.log",
        "org.hibernate.testing.D.lerAbstract.Formility.LOG.log",
        "java.Service.System.log",
        "org.hibernate.COR.CactoryGenerImplFormFactory.log",
        "MessageHandler.this.log",
        "javax.transruntime.wing.log",
        "Defence.Request<?ActivityUtilities.log"
      ]
    ]
  },
  {
    "originalCode": "sessionFactory = (SessionFactory) servlet",
    "FQNCode": "sessionFactory = (<MASK>.SessionFactory) <MASK>.servlet",
    "fqnToken": [
      [
        "org.hibernate.context.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "java.sql.SessionFactory",
        "org.giber.SessionFactory",
        "org.axibern.SessionFactory",
        "org.googleibernate.engine.spi.Sessionspi.SessionFactory",
        "org.hibernate.engine.spipresent.Session.c.SessionFactory",
        "com.googleiberweb.bindery.requestfactory.server.Request.UtServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.ServImplServiceServContext.SessionFactory"
      ],
      [
        "com.google.web.bindery.requestfactory.server.Request.LServServlet.servlet",
        "org.ax.servwt.http.serverServServl.servlet",
        "org.ax.servlet.Serv.Context.servlet",
        "org.ax.servate.httpcodeServServContext.servlet",
        "java.ax.Context.servlet",
        "org.ax.servate.serverServletContext.servlet",
        "j.ax.servserver.ServB.servlet",
        "java.context.servlet",
        "java.g.obContext.servlet",
        "j.misclet.Engine.Handler.servlet",
        "Request.appthis.servlet",
        "java.reflectletServ.Context.servlet"
      ]
    ]
  },
  {
    "originalCode": "Transaction transaction=session.beginTransaction();",
    "FQNCode": "<MASK>.Transaction transaction=session.beginTransaction();",
    "fqnToken": [
      [
        "org.hibernate.Transaction",
        "org.hibernate.action.Transaction",
        "org.hibern.Transaction",
        "org.hiber.Transaction",
        "org.sql.Transaction",
        "org.hibernate.engine.spi.Session.Transaction",
        "org.hibernate.engine.spi.Transaction",
        "org.hibern.BA.Transaction",
        "org.hibernate.engine.spiactory.server.Transaction",
        "org.hibernate.engine.sp.ta.Transaction",
        "org.hibernate.engine.spi.model.UI.Transaction",
        "org.h.nwt.sql.Session.Transaction",
        "org.h.nate.InterTransaction.Transaction",
        "com.hibernate.dev.spiactory.server.ServiceServContext.Transaction",
        "com.hibernate.dev.sp.actory.server.Service.ServContext.Transaction",
        "com.hibernate.ery.request.actory.xs.c.Log.Session.Transaction"
      ]
    ]
  },
  {
    "originalCode": "Query query = session.createQuery(qstring);",
    "FQNCode": "<MASK>.Query query = session.createQuery(qstring);",
    "fqnToken": [
      [
        "org.hibernate.orm.test.hql.Query",
        "org.hibernate.orm.test.sql.Query.Query",
        "org.hibernate.orm.test.query.Query",
        "org.hibernate.orm.test.jpa.critor.Query",
        "jakarta.persistence.Query",
        "org.hibernate.query.Query",
        "org.hibernate.query.Query.Query",
        "org.hibernate.orm.test.jpa.compliance.ributionpar.Query",
        "org.hibernate.orm.test.bytecode.enh.ment.lh.proxy.Query",
        "org.hibernate.orm.test.bytecode.enh.collection.dumpletQuery.Query",
        "java.query.Query",
        "org.hibernate.criteria.Query",
        "j.arta.rest.Query",
        "j.sqistence.Query"
      ]
    ]
  },
  {
    "originalCode": "ArrayList all = new ArrayList();",
    "FQNCode": "<MASK>.ArrayList all = new <MASK>.ArrayList();",
    "fqnToken": [
      [
        "java.util.ArrayList",
        "org.hibernate.orm.test.queryql.ArrayList",
        "org.hibernate.orm.test.query.ArrayList",
        "org.hibernate.orm.test.collection.animal.ArrayList",
        "org.hibernate.orm.test.jpa.ript.odutil.ArrayList",
        "org.hibernate.orm.test.jcode.critancement.escroll.ArrayList",
        "org.hibernate.userguide.model.ArrayList",
        "org.hibernate.internal.ArrayList",
        "org.hibernate.orm.test.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.Purchase.LhoreL.ivedWithfloadBySelectscroll.ArrayList",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.Purchase.ManyazyList.Tscroll.ArrayList",
        "org.hibernate.critapping.ArrayList",
        "java.arta.persistence.ArrayList",
        "java.awt.ArrayList",
        "java.util.reflect.ArrayList",
        "org.omg.CORBA.ArrayList"
      ],
      [
        "java.util.ArrayList",
        "org.hibernate.orm.test.hql.ArrayList",
        "org.hibernate.orm.test.filter.ArrayList",
        "org.hibernate.orm.test.component.animal.ArrayList",
        "org.hibernate.testguide.model.ArrayList",
        "org.hibernate.query.ArrayList",
        "org.hibernate.orm.util.ArrayList",
        "org.hibernate.critapping.ArrayList",
        "java.util.Array.ArrayList",
        "java.awt.ArrayList",
        "java.util.persistence.ArrayList",
        "org.omg.CORlist.ArrayList"
      ]
    ]
  },
  {
    "originalCode": "Set purchaseArray = new HashSet();",
    "FQNCode": "<MASK>.Set purchaseArray = new <MASK>.HashSet();",
    "fqnToken": [
      [
        "java.util.Set",
        "java.util.util.Set",
        "org.hibernate.orm.test.jpa.critutable.Set",
        "java.util..Set",
        "org.hibernate.orm.test.jpa.critform.paths.Set",
        "org.hibernate.orm.test.jpa.Adapter.Set",
        "org.hibernate.orm.test.jpa.querycolumnLine.Set",
        "org.hibernate.orm.test.jpa.criterianame.Ascroll.Set",
        "java.util.perslections.Set",
        "org.hibernate.orm.test.jpa.Set",
        "org.hibernate.orm.test.jpa.criteria.autFormem.Toeriawith.returnf.Set",
        "org.hibernate.orm.test.jpa.criteria.queryFormMany.ToWitheriaWith.classesscroll.Set",
        "org.hibernate.orm.test.model.form.Set",
        "org.hibernate.orm.test.jpa.criteria.queryFormPlManyToWithWithFj.Tscroll.Set",
        "org.hibernate.orm.test.jpa.criteria.compForm.ManyTo.oneitej.eriaTests.Set",
        "org.hibernate.orm.test.jpa.criteria.fFormscroll.PurchaseComone.jDer.Witheria.fetchTest.Set",
        "org.hibernate.orm.test.model.Set",
        "org.hibernate.orm.test.jpa.criteria.fFormscroll.Purchase.onehKeynateivedWitheriaWithfclassesTest.Set",
        "com.android.nate.orm.client.Set",
        "org.h.nate.query.Set"
      ],
      [
        "java.util.HashSet",
        "java.util.util.HashSet",
        "java.util.concurrent.HashSet",
        "org.hibernate.orm.test.jations.critform.HashSet",
        "java.utilutil.HashSet",
        "org.hibernate.orm.test.jpa.criteria.fFormscroll.PurchaseOrg.hibernate.WithComWith.j.j.etchs.HashSet",
        "com.google.gwt.Mer.util.HashSet",
        "org.hibernate.orm.test.jpa.criteria.fFormscroll.PurchaseComonehKeynateivedWitheriatestfetchscroll.HashSet",
        "org.hibernate.orm.test.jpa.criteria.fFormazy.PurchaseComonehValueDer.criteria.fetchscroll.HashSet",
        "org.hibernate.orm.test.jpa.criteria.queryFormPl.ToComWithFard.classs.HashSet",
        "org.hibernate.orm.test.jpa.criteria.queryFormPl.TononPersWith.ClassEx.HashSet",
        "org.hibernate.orm.test.jpa.critcolumnpull.HashSet",
        "org.h.nate.orm.test.jpa.critform.Objectutil.HashSet",
        "org.hibernate.orm.test.jpa.criteria.amed.emOnly.HashSet",
        "org.hibernate.orm.test.jpa.criteriacell.emscroll.HashSet",
        "org.hibernate.orm.test.jpa.criteria.ObjectWith.Itemform.HashSet",
        "j.util.swing.util.HashSet"
      ]
    ]
  },
  {
    "originalCode": "public ActionForward delete(ActionMapping mapping, ActionForm form,",
    "FQNCode": "public <MASK>.ActionForward delete(<MASK>.ActionMapping mapping, <MASK>.ActionForm form,",
    "fqnToken": [
      [
        "javax.swing.ActionForward",
        "org.apache.servlet.action.ActionForward",
        "java.action.ActionForward",
        "org.ax.swing.action.ActionForward",
        "org.applet.ActionForward",
        "org.apache.servjet.dialaction.ActionForward"
      ],
      [
        "javax.swing.ActionMapping",
        "java.action.ActionMapping",
        "org.apache.struts.action.ActionMapping",
        "org.ax.swing.ws.ActionMapping",
        "org.ax.servlet.ActionMapping",
        "org.apache.xmlws.dialaction.ActionMapping",
        "j.applet.ActionMapping"
      ],
      [
        "org.apache.servlet.action.ActionForm",
        "java.editor.ActionForm",
        "j.ax.action.ActionForm",
        "j.ax.servlet.ActionForm",
        "org.ax.swing.text.ActionForm",
        "org.applet.ActionForm",
        "org.apache.serv.ws.action.ActionForm"
      ]
    ]
  },
  {
    "originalCode": "HttpServletRequest request, HttpServletResponse response)",
    "FQNCode": "<MASK>.HttpServletRequest request, <MASK>.HttpServletResponse response)",
    "fqnToken": [
      [
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.HttpServletRequest",
        "javax.serv.http.HttpServletRequest",
        "java.net.HttpServletRequest",
        "javax.http.HttpServletRequest",
        "javax.servletty.http.HttpServletRequest",
        "org.applet.HttpServletRequest",
        "com.google.webwt.ery.requestfactory.http.messlet.HttpServletRequest"
      ],
      [
        "javax.servlet.http.HttpServletResponse",
        "javax.Http.http.HttpServletResponse",
        "javax.servlet.HttpServletResponse",
        "java.net.HttpServletResponse",
        "j.ax.http.HttpServletResponse",
        "javax.servlet.http.http.HttpServletResponse",
        "java.servlet.HttpServletResponse"
      ]
    ]
  },
  {
    "originalCode": "SessionFactory sessionFactory = (SessionFactory) servlet",
    "FQNCode": "<MASK>.SessionFactory sessionFactory = (<MASK>.SessionFactory) <MASK>.servlet",
    "fqnToken": [
      [
        "org.hibernate.SessionFactory",
        "org.hibernate.context.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "org.niber.SessionFactory",
        "org.hibern.SessionFactory",
        "org.hiber.letate.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.ServletServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.letImplletRequestContext.SessionFactory",
        "com.google.web.bindery.requestfactory.c.Request.AbstractServContext.SessionFactory",
        "java.h.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.Servil.SessionFactory",
        "com.google.web.bindery.spiactory.server.HttpServi.SessionFactory",
        "org.google.gwt.en.spver.Session.Session.SessionFactory"
      ],
      [
        "org.hibernate.SessionFactory",
        "org.hibernate.context.SessionFactory",
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.spi.SessionFactory",
        "java.app.SessionFactory",
        "org.ax.n.SessionFactory",
        "org.giber.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.ServServServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.letImplletServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.Request.AttributeServContext.SessionFactory",
        "com.google.web.bindery.requestfactory.server.RequestHServor.SessionFactory",
        "com.google.gwt.engine.shellServ.Session.SessionFactory"
      ],
      [
        "com.google.web.bindery.requestfactory.server.RequestFactoryServlet.servlet",
        "com.google.web.bindery.requestfactory.server.Request.ServServlet.servlet",
        "com.google.web.bindery.requestfactory.server.Request.ServServServlet.servlet",
        "com.google.webwt.ery.requestfactory.server.HttpHost.servlet",
        "com.google.web.bindery.requestfactory.server.Request.Servlet.letACTOR.servlet",
        "com.google.web.bindery.requestfactory.server.Request.ServServlet.Client.servlet",
        "com.google.web.bindery.requestfactory.server.Simple.ServServlet.letENlet.servlet",
        "org.apache.servlet.http.HttpServletHandler.servlet",
        "org.e.servlet.Serv.Context.servlet",
        "org.google.servlet.http.letJletServHandler.servlet",
        "org.ax.servlet.http.HttpContext.servlet",
        "org.ax.servlet.Parser.servlet",
        "point.service.servlet",
        "request.servlet.servlet",
        "java.serv.servConnection.servlet",
        "reqRequestlet.Response.servlet"
      ]
    ]
  },
  {
    "originalCode": "Session session = sessionFactory.openSession();",
    "FQNCode": "<MASK>.Session session = sessionFactory.openSession();",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hibernate.internal.Session",
        "org.hiber.Session",
        "org.hibernate.engine.Httpi.Session",
        "java.sql.Session",
        "org.hibern.ssl.Session",
        "org.hibern.Session",
        "org.hibernate.engine.htmli.Session.Session",
        "org.hibernate.engine.spi.HttpSession.Session",
        "org.hibernate.orm.spi.Session.UI.Session",
        "com.googleiberweb.bindery.requestfactory.ler.Simple.SessionorsemblLEDizTest.Session"
      ]
    ]
  },
  {
    "originalCode": "Transaction tx = session.beginTransaction();",
    "FQNCode": "<MASK>.Transaction tx = session.beginTransaction();",
    "fqnToken": [
      [
        "org.hibernate.Transaction",
        "org.hibernate.boot.Transaction",
        "org.hiber.Transaction",
        "org.hibern.Transaction",
        "org.hibernate.boot.spi.Transaction",
        "org.hibernate.engine.spi.Session.Transaction",
        "java.sql.Transaction",
        "org.hibernate.engine.sp.c.Transaction",
        "org.hibern.action.Transaction",
        "org.h.nate.InterTransaction.Transaction",
        "com.googleibernwt.dev.sp.actory.server.c.Servc.Transaction",
        "com.googleibernate.dev.spiactory.server.cosServContext.Transaction",
        "com.googleibernate.orm.server.actory.SSL.cizationLognContext.Transaction"
      ]
    ]
  }
]