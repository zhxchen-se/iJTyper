[
  {
    "originalCode": "private SessionFactory sessionFactory;",
    "FQNCode": "private <MASK>.SessionFactory sessionFactory;",
    "fqnToken": [
      [
        "org.hibernate.engine.spi.SessionFactory",
        "org.hibernate.SessionFactory",
        "org.hibernate.testing.orm.junit.SessionFactory",
        "org.hibernate.internal.SessionFactory",
        "org.hibernate.testing.spi.spi.SessionFactory",
        "org.hibernate.enginei.SessionFactory",
        "org.niber.SessionFactory",
        "java.h.SessionFactory",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.Query.one.nTest.SessionFactory",
        "org.hibern.SessionFactory",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.oneiGenerop.jop.SessionFactory",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.J.M.SessionWith.propiber.Test.SessionFactory",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.in.Joinc.dbTo.ations.plementunit.SessionFactory",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.internal.Query.SessionExpliveableWithGener.Test.SessionFactory",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.one.Interchecking.Methodableter.entTest.SessionFactory",
        "org.hibernate..SessionFactory"
      ]
    ]
  },
  {
    "originalCode": "Session session = getSession();",
    "FQNCode": "<MASK>.Session session = getSession();",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hiber.Session",
        "org.hibernate.engine.spi.Session",
        "org.hibernate.context.Session",
        "org.hibernate.orm.sp.nSession.Session",
        "org.hibernate.testing.jdbc.Session",
        "org.hibernate.beans.Session.Session",
        "org.hibern.Session",
        "org.hibernateate.Session",
        "org.hibernate.orm.test.j.collectionced.ni.Session",
        "java.h.Session",
        "org.hibernate.orm.test.bytecode.enhance.geCourse.DirtyAllOWNTest.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.Entity.dbchecking.hableOnGetterTest.Session"
      ]
    ]
  },
  {
    "originalCode": "Query query = session.createQuery(\"from A\");",
    "FQNCode": "<MASK>.Query query = session.createQuery(\"from A\");",
    "fqnToken": [
      [
        "org.hibernate.orm.test.hql.Query",
        "org.hibernate.orm.test.p.hand.Query",
        "org.hibernate.orm.test.query.Query",
        "org.hibernate.query.Query",
        "org.hibernate.orm.test.hpa.predor.Query",
        "java.util.Query",
        "org.hibernate.query.Query.Query",
        "org.hibernate.orm.test.hql.comment.ociationquery.Query",
        "org.hibernate.orm.test.hql.fetch.subselect.Query",
        "jakarta.persistence.Query",
        "org.hibernate.criteria.Query",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.Queryhirtychecking.ManyToOnePropertyAccessByFieldTest.Query",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.Query.OneWith.NotOptional.Test.Query",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.Query.Onetest.WithNotSubAttributesTest.Query",
        "j.arta.reflect.Query",
        "java.jistence.Query",
        "org.hiber.ateination.Query"
      ]
    ]
  },
  {
    "originalCode": "List results = query.list();",
    "FQNCode": "<MASK>.List results = query.list();",
    "fqnToken": [
      [
        "java.util.List",
        "org.hibernate.query.List",
        "org.hibernate.orm.test.hql.List",
        "org.hibernate.orm.test.query.handquery.List",
        "org.hibernate.orm.test.query.hand.List",
        "org.hibernate.orm.test.query.List",
        "org.hibernate.query.internal.List",
        "org.hibernate.orm.test.h.handclass.Query.List",
        "org.hibernate.criteria.List",
        "org.hibernate.orm.test.hql.man.rimprint.List",
        "java.util.reflect.List",
        "org.hibernate.community.spmodel.List",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.QueryProxyQuery.QueryTest.List",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.QueryHqlaz.QueryTest.List",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxyachedAuditedM.QueryTest.List",
        "java.utiljava.List",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.PolylinedirtyL.OfToOnclassesByFieldTest.List",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.PolyScTotest.WithWithToclassesTest.List",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.Poly.oreL.ivedWithOnBySelectTest.List",
        "org.hiberconate.List"
      ]
    ]
  },
  {
    "originalCode": "public void createEntities(Session session)",
    "FQNCode": "public void createEntities(<MASK>.Session session)",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hibernate.engine.spi.Session",
        "org.hibernate.testing.Session",
        "org.hibernate.orm.test.hSession.Session",
        "org.hibernate.engineate.Session",
        "org.hibernate.testing.test.c.Session",
        "org.hibernate.orm.Session.Session",
        "org.hibernate.orm.test.collection.Session.Session",
        "org.hiber.Session",
        "org.hibernate.orm.test.annotations.Entity.ization.Session",
        "org.hibernate.orm.test.annotations.entity.izationi.Session",
        "java.sql.Session",
        "org.hibernate..Session",
        "org.hibern.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.inDe.QueryTest.Session",
        "org.hibernate.orm.test.bytecode.enhance.geGraphProxyoneFromCollectionowedTest.Session",
        "org.hibernate.orm.test.bytecode.enhance.multlazy.proxy.LoadtaAndNotorted.Test.Session",
        "org.hibernate.orm.test.bytecode.enhance.multlazy.proxy.WithtaSessionkeyNotedd.Test.Session"
      ]
    ]
  },
  {
    "originalCode": "public Session getSession()",
    "FQNCode": "public <MASK>.Session getSession()",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hibernate.engine.spi.Session",
        "org.hibernate.context.Session",
        "org.hibernate.enginei.Session",
        "org.hibernate.testing.jdbi.Session",
        "org.hibernate.testing.orm.jSession.Session",
        "org.hibernate.session.i.Session",
        "java.sql.Session",
        "org.hibern.ate.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lge.proxy.one.ionTest.Session",
        "org.niber.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.inConTestingReferenceTest.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.inlinedirtychecking.ManyOnePropertyOnByFieldTest.Session",
        "org.h.n.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.onelinedirtyL.notationWithOnutableAttributesTest.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.B.ConAssTestTest.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxyJWithtaagedicalNotutableFieldTest.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.WithtaSessionWithInBeforeutableFieldTest.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.inConaredToAbstractWithWithutableAttributesTest.Session",
        "org.hibernate.orm.test.bytecode.enhancement.lazy.proxy.WithtastrConAssinitialTest.Session"
      ]
    ]
  },
  {
    "originalCode": "AnnotationConfiguration config = new AnnotationConfiguration();",
    "FQNCode": "<MASK>.AnnotationConfiguration config = new <MASK>.AnnotationConfiguration();",
    "fqnToken": [
      [
        "org.hibernate.cfg.AnnotationConfiguration",
        "org.hibernate.AnnotationConfiguration",
        "org.hibernate.annotations.AnnotationConfiguration",
        "org.hibernate.cfg.annotations.AnnotationConfiguration",
        "org.hibernate.cfg.cfg.anni.AnnotationConfiguration",
        "java.cfg.AnnotationConfiguration",
        "org.hibernatecfg.AnnotationConfiguration",
        "org.hibernate.boot.internal.AnnotationConfiguration",
        "org.hibernate.orm.test.boot.mapping.spotation.AnnotationConfiguration",
        "org.hibernate.annot.jnoti.AnnotationConfiguration",
        "org.hibernate.orm.test.boot.m.eries.configi.AnnotationConfiguration",
        "org.hibernate.orm.testcommon.reflection.eries.AnnotationConfiguration",
        "org.hibernate.orm.test.bootstrapurebindingeries.ations.EnhInriteTest.AnnotationConfiguration",
        "org.hibernate.orm.test.boot.annbindingeries.Config.Accessinternal.AnnotationConfiguration",
        "org.hibernate.orm.test.bootstrap.bindingance.ations.azy.proxyJAnatedoralAnAnProxyTest.AnnotationConfiguration",
        "org.hibernate.orm.test.bootstrap.enhance.querylazy.proxyJMversearedWithriddenherAnProxyTest.AnnotationConfiguration",
        "org.jotation.AnnotationConfiguration"
      ],
      [
        "org.hibernate.cfg.AnnotationConfiguration",
        "org.hibernate.cfg.spations.AnnotationConfiguration",
        "org.hibernate.annotations.AnnotationConfiguration",
        "org.hibernate.cfg.internal.AnnotationConfiguration",
        "org.hibernate.cfg.cfg.spinternal.AnnotationConfiguration",
        "org.hibernate.cfg.j.i.AnnotationConfiguration",
        "org.hibernate.orm.test.cfg.reflection.AnnotationConfiguration",
        "org.hibernate.orm.cfgcommon.reflection.AnnotationConfiguration",
        "java.beans.AnnotationConfiguration",
        "org.hibernate.AnnotationConfiguration",
        "org.hibernatecfg.AnnotationConfiguration",
        "org.hibernate.orm.test.bootstrap.agedistence.notationTest.AnnotationConfiguration",
        "org.hibernate.orm.test.bootstrap.binding.annotannot.MultiDeleteAttributeLocalTest.AnnotationConfiguration",
        "jdk.jfr.AnnotationConfiguration",
        "org.jotation.AnnotationConfiguration"
      ]
    ]
  },
  {
    "originalCode": "new SchemaExport(config).create(true,true);",
    "FQNCode": "new <MASK>.SchemaExport(config).create(true,true);",
    "fqnToken": [
      [
        "org.hibernate.tool.test.xml.SchemaExport",
        "org.hibernate.tool.schema.internal.SchemaExport",
        "org.hibernate.tool.schema.SchemaExport",
        "org.hibernate.tool.schema.spi.SchemaExport",
        "org.hibernate.tool.SchemaExport",
        "org.hibernate.tool.test.jhemaf.app.SchemaExport",
        "org.hibernate.boot.internal.SchemaExport",
        "java.sql.SchemaExport",
        "org.hibernate.orm.test.sc.au.Sche.MultiExportorHandler.SchemaExport",
        "org.hibernate.orm.test.tool.schepdate.Schetable.ifierqlWithWithInKeyScheSchelTest.SchemaExport",
        "org.hibernate.orm.test.tool.schepdate.ctable.ifierqldbWith.altSchemaTest.SchemaExport",
        "org.arta.validate.SchemaExport",
        "org.h.toolsvalidging.SchemaExport",
        "j.ma.ssl.SchemaExport",
        "org.schema.SchemaExport"
      ]
    ]
  },
  {
    "originalCode": "Session session = sessionFactory.getCurrentSession();",
    "FQNCode": "<MASK>.Session session = sessionFactory.getCurrentSession();",
    "fqnToken": [
      [
        "org.hibernate.Session",
        "org.hibernate.engine.spi.Session",
        "org.hibernate.testing.test.nSession.Session",
        "org.hibernate.testing.jdbc.Session",
        "org.hibernate.internal.Session",
        "org.hiber.Session",
        "org.hibernate.cache.session.Session",
        "org.hibernate.enginei.Session",
        "org.hibernate.orm.test.c.hced.mi.Session",
        "org.hibernate.orm.test.scdbc.Transaction.dbi.Session",
        "org.hibernate.orm.test.schemaupdate.hqlAccessCBTest.Session",
        "java.h.Session",
        "org.hibernate.orm.test.schemaupdate.qlTable.NTest.Session",
        "org.hibernate.orm.test.schemaupdate.Schema.uralTableDropTest.Session",
        "org.hibern.Session",
        "org.hibernate..Session",
        "org.hibernate.orm.test.schemaupdate.Sche.J.TableHttpMultiAssertTest.Session"
      ]
    ]
  },
  {
    "originalCode": "@Id",
    "FQNCode": "@<MASK>.Id",
    "fqnToken": [
      [
        "jakarta.persistence.Id",
        "org.hibernate.annotations.Id",
        "org.hibernate.orm.test.annoteto.cascade.Id",
        "org.hibernate.orm.test.domain.gamarrow.Id",
        "org.hibernate.orm.test.pfbasic.Id",
        "org.hibernate.orm.test.leggraph.Id",
        "jakarta.istence.Id",
        "jakpersistence.Id",
        "org.hibernate.orm.test.annotations.jcularity.Id",
        "org.hibernate.jpa.enure.Id",
        "org.hibernate.orm.test.annotql.metetchAndTest.Id",
        "java.lang.Id",
        "org.hibernate.met.odel.Id",
        "org.hibernate.orm.test.annoteto.integrationingWith.RefEntityTest.Id",
        "org.hibernate.orm.test.batcheto.Optionals.With.TwoPhaseLoadTest.Id",
        "orgakhibernate.SA.Id",
        "org.hibernate.orm.test.onetetoh.hel.With.MultiSingleBasicLoadTest.Id",
        "org.hibernate.j.ations.Id",
        "org.hibernate.orm.test.onetoone.ascade.inator.JoinSimpleinternalNotOneByOneLJoinEntityTest.Id",
        "org.hibernate.orm.test.onetoone.ascade.With.JoinSimpleToNonCitedetchJoinEntityTest.Id"
      ]
    ]
  },
  {
    "originalCode": "@GeneratedValue",
    "FQNCode": "@<MASK>.GeneratedValue",
    "fqnToken": [
      [
        "org.hibernate.annotations.GeneratedValue",
        "jakarta.persistence.GeneratedValue",
        "org.hibernate.cfg.GeneratedValue",
        "j.persistence.GeneratedValue",
        "org.hibernate.orm.test.jations.graphascade.GeneratedValue",
        "org.hibernate.conannotations.GeneratedValue",
        "org.hibernate.annot.spations.GeneratedValue",
        "org.hibernate.annotations.validation.GeneratedValue",
        "org.hibernate.orm.test.j.gambit.GeneratedValue",
        "org.hibernate.orm.test.annotations.onettoations.GeneratedValue",
        "org.hibernate.orm.test.jations.GeneratedValue",
        "org.hibernate.orm.test.jql.binding.mixed.GeneratedValue",
        "org.hibernate.orm.test.jql.critascade.compColumn.GeneratedValue",
        "org.hibernate.orm.test.jpa.critascade.fetchscroll.GeneratedValue",
        "org.hibernate.orm.test.annotpa.cascade.With.irectional.GeneratedValue",
        "org.hibernate.orm.test.envers.integs.With.TwoPhaseTableTest.GeneratedValue",
        "org.hibernate.orm.test.envers.cs.m.MultiSingleInEntityTest.GeneratedValue",
        "org.hibernate.orm.test.bytecode.enhascade.WithBatchFirectionectIdTTest.GeneratedValue",
        "org.hibernate.orm.test.bytecode.city.WithLatchNotqueryWithOn.GraphTest.GeneratedValue",
        "org.hibernate.orm.test.bytecode.enhascade.WithLhociationMultiHJoinOn.identTest.GeneratedValue"
      ]
    ]
  },
  {
    "originalCode": "@OneToOne (cascade=CascadeType.ALL)",
    "FQNCode": "@<MASK>.OneToOne (cascade=CascadeType.ALL)",
    "fqnToken": [
      [
        "org.hibernate.annotations.OneToOne",
        "jakarta.persistence.OneToOne",
        "org.hibernate.ations.OneToOne",
        "org.hibernate.metam.el.OneToOne",
        "org.hibernate.orm.test.domain.gambit.OneToOne",
        "org.hibernate.orm.test.jpa.graphs.OneToOne",
        "org.hibernate.orm.test.jscroll.OneToOne",
        "jakartapersistence.OneToOne",
        "org.hibernate.orm.test.en.gamintegration.onetomMultiSingleInLoadTest.OneToOne",
        "j.persistence.OneToOne",
        "org.hibernate.orm.test.jpa.integascade.With.omal.OneToOne",
        "org.hibernate.orm.test.f.results.to.onet.ableserenationAllWhereTest.OneToOne",
        "org.hibernate.orm.test.en.hintegration.one.anyIdenticJOneManyOneNotJoinableTest.OneToOne",
        "org.hibernate.orm.test.fetoresults.ded.FBatchF.UniqueOptionClTest.OneToOne",
        "java.arta.OneToOne",
        "org.hibernate.orm.test.envershintegration.one.any.icJEntityByLEmbicRemableTest.OneToOne",
        "org.hibernate.orm.test.en.h.ration.one.AssociationOneWithJoinComOneJoinatchTest.OneToOne"
      ]
    ]
  },
  {
    "originalCode": "@Fetch(FetchMode.JOIN)",
    "FQNCode": "@<MASK>.Fetch(FetchMode.JOIN)",
    "fqnToken": [
      [
        "org.hibernate.annotations.Fetch",
        "org.hibernate.engine.Fetch",
        "jakarta.persistence.Fetch",
        "org.hibernate.orm.orm.etchetch.Fetch",
        "org.hibernate.sql.ations.Fetch",
        "org.hibernate.engine.etchflow.Fetch",
        "org.hibernate.orm.test.Fetchetch.Fetch",
        "org.hibernate.orm.test.scan.annotategy.Fetch",
        "org.hibernate.orm.test.jetch.grapheria.etchTest.Fetch",
        "org.hibernate.orm.test.jetch.fetch.Fetchscroll.Fetch",
        "org.persistence.Fetch",
        "jakartapersistence.Fetch",
        "java.ations.Fetch",
        "orgakarta.npers..Fetch"
      ]
    ]
  },
  {
    "originalCode": "@Entity",
    "FQNCode": "@<MASK>.Entity",
    "fqnToken": [
      [
        "jakarta.persistence.Entity",
        "org.hibernate.annotations.Entity",
        "org.hibernate.orm.test.jpa.cs.Entity",
        "org.hibernate.type.Entity",
        "org.hibernate.orm.test.annotations.manytoany.Entity",
        "jakpersistence.Entity",
        "org.hibernate.orm.test.domain.gambit.Entity",
        "jakartapersistence.Entity",
        "org.hibernate.orm.test.jpa.fetch.JoinetchTest.Entity",
        "java.lang.Entity",
        "org.hibernate.orm.test.annotations.joins.onetMultipleOrderInvTableTest.Entity",
        "org.hibernate.jpa.enure.Entity",
        "jakarta.perspersistence.Entity",
        "org.hibernate.orm.test.fvers.fhel.auto.ComerenationBasicWhereTest.Entity",
        "org.arta.nate.metamodel.Entity",
        "org.hibernate.orm.test.envers.integration.query.JoinIdentToOneOneByjToProxyDefinitionTest.Entity",
        "org.hibernate.orm.test.annotations.cascade.Join.hDOnenonJoinDeExtidentTest.Entity",
        "org.hibernate.orm.test.envers.integration.Many.idGenericicToWithByEmbectImplTableTest.Entity",
        "org.hibernate.dom.aints.Entity"
      ]
    ]
  },
  {
    "originalCode": "@Id",
    "FQNCode": "@<MASK>.Id",
    "fqnToken": [
      [
        "jakarta.persistence.Id",
        "org.hibernate.annotations.Id",
        "org.hibernate.orm.test.annoteto.cascade.Id",
        "org.hibernate.orm.test.domain.gamarrow.Id",
        "org.hibernate.orm.test.pfbasic.Id",
        "org.hibernate.orm.test.leggraph.Id",
        "jakarta.istence.Id",
        "jakpersistence.Id",
        "org.hibernate.orm.test.annotations.jcularity.Id",
        "org.hibernate.jpa.enure.Id",
        "org.hibernate.orm.test.annotql.metetchAndTest.Id",
        "java.lang.Id",
        "org.hibernate.met.odel.Id",
        "org.hibernate.orm.test.annoteto.integrationingWith.RefEntityTest.Id",
        "org.hibernate.orm.test.batcheto.Optionals.With.TwoPhaseLoadTest.Id",
        "orgakhibernate.SA.Id",
        "org.hibernate.orm.test.onetetoh.hel.With.MultiSingleBasicLoadTest.Id",
        "org.hibernate.j.ations.Id",
        "org.hibernate.orm.test.onetoone.ascade.inator.JoinSimpleinternalNotOneByOneLJoinEntityTest.Id",
        "org.hibernate.orm.test.onetoone.ascade.With.JoinSimpleToNonCitedetchJoinEntityTest.Id"
      ]
    ]
  },
  {
    "originalCode": "@GeneratedValue",
    "FQNCode": "@<MASK>.GeneratedValue",
    "fqnToken": [
      [
        "org.hibernate.annotations.GeneratedValue",
        "jakarta.persistence.GeneratedValue",
        "org.hibernate.cfg.GeneratedValue",
        "j.persistence.GeneratedValue",
        "org.hibernate.orm.test.jations.graphascade.GeneratedValue",
        "org.hibernate.conannotations.GeneratedValue",
        "org.hibernate.annot.spations.GeneratedValue",
        "org.hibernate.annotations.validation.GeneratedValue",
        "org.hibernate.orm.test.j.gambit.GeneratedValue",
        "org.hibernate.orm.test.annotations.onettoations.GeneratedValue",
        "org.hibernate.orm.test.jations.GeneratedValue",
        "org.hibernate.orm.test.jql.binding.mixed.GeneratedValue",
        "org.hibernate.orm.test.jql.critascade.compColumn.GeneratedValue",
        "org.hibernate.orm.test.jpa.critascade.fetchscroll.GeneratedValue",
        "org.hibernate.orm.test.annotpa.cascade.With.irectional.GeneratedValue",
        "org.hibernate.orm.test.envers.integs.With.TwoPhaseTableTest.GeneratedValue",
        "org.hibernate.orm.test.envers.cs.m.MultiSingleInEntityTest.GeneratedValue",
        "org.hibernate.orm.test.bytecode.enhascade.WithBatchFirectionectIdTTest.GeneratedValue",
        "org.hibernate.orm.test.bytecode.city.WithLatchNotqueryWithOn.GraphTest.GeneratedValue",
        "org.hibernate.orm.test.bytecode.enhascade.WithLhociationMultiHJoinOn.identTest.GeneratedValue"
      ]
    ]
  }
]