echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/hibernate_class_36.java
Expect check=53
Cannot find matching typeVariable for: public class hibernate_class_36 {
  public static void main(  String[] args){
    Session session=null;
    SessionFactory sessionFactory=new Configuration().configure().buildSessionFactory();
    Transaction tx=null;
    try {
      session=sessionFactory.openSession();
      tx=session.beginTransaction();
      tx.commit();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
 finally {
      session.close();
    }
  }
}

Cannot find matching typeVariable for: hibernate_class_36
Cannot find matching typeVariable for: public class hibernate_class_36 {
  public static void main(  String[] args){
    Session session=null;
    SessionFactory sessionFactory=new Configuration().configure().buildSessionFactory();
    Transaction tx=null;
    try {
      session=sessionFactory.openSession();
      tx=session.beginTransaction();
      tx.commit();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
 finally {
      session.close();
    }
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
public class hibernate_class_36 {
  public static void main(  String[] args){
    Session session=null;
    SessionFactory sessionFactory=new Configuration().configure().buildSessionFactory();
    Transaction tx=null;
    try {
      session=sessionFactory.openSession();
      tx=session.beginTransaction();
      tx.commit();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
 finally {
      session.close();
    }
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
  Session session=null;
  SessionFactory sessionFactory=new Configuration().configure().buildSessionFactory();
  Transaction tx=null;
  try {
    session=sessionFactory.openSession();
    tx=session.beginTransaction();
    tx.commit();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    session.close();
  }
}

Cannot find matching typeVariable for: public class hibernate_class_36 {
  public static void main(  String[] args){
    Session session=null;
    SessionFactory sessionFactory=new Configuration().configure().buildSessionFactory();
    Transaction tx=null;
    try {
      session=sessionFactory.openSession();
      tx=session.beginTransaction();
      tx.commit();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
 finally {
      session.close();
    }
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
public class hibernate_class_36 {
  public static void main(  String[] args){
    Session session=null;
    SessionFactory sessionFactory=new Configuration().configure().buildSessionFactory();
    Transaction tx=null;
    try {
      session=sessionFactory.openSession();
      tx=session.beginTransaction();
      tx.commit();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
 finally {
      session.close();
    }
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
Did not find solution for node: Session with type Type5
Did not find solution for node: Session with type Type5
Cannot find matching typeVariable for: session=null
Did not find solution for node: session=null with type Type5
Did not find solution for node: session with type Type5
Did not find solution for node: null with type Type6
Did not find solution for node: SessionFactory with type Type7
Did not find solution for node: SessionFactory with type Type7
Cannot find matching typeVariable for: sessionFactory=new Configuration().configure().buildSessionFactory()
Did not find solution for node: sessionFactory=new Configuration().configure().buildSessionFactory() with type Type7
Did not find solution for node: sessionFactory with type Type7
Did not find solution for node: new Configuration().configure().buildSessionFactory() with type Type12
For node: new Configuration().configure() expected fqn: org.hibernate.cfg.Configuration with type: Type10 got: org.hibernate.cfg.Configuration
For node: new Configuration() expected fqn: org.hibernate.cfg.Configuration with type: Type8 got: org.hibernate.cfg.Configuration
For node: Configuration expected fqn: org.hibernate.cfg.Configuration with type: Type8 got: org.hibernate.cfg.Configuration
For node: Configuration expected fqn: org.hibernate.cfg.Configuration with type: Type8 got: org.hibernate.cfg.Configuration
Cannot find matching typeVariable for: configure
For node: configure expected fqn: org.hibernate.cfg.Configuration with type: Type10 got: org.hibernate.cfg.Configuration
Cannot find matching typeVariable for: buildSessionFactory
Did not find solution for node: buildSessionFactory with type Type12
For node: Transaction expected fqn: org.hibernate.Transaction with type: Type14 got: org.hibernate.Transaction
For node: Transaction expected fqn: org.hibernate.Transaction with type: Type14 got: org.hibernate.Transaction
Cannot find matching typeVariable for: tx=null
For node: tx=null expected fqn: org.hibernate.Transaction with type: Type14 got: org.hibernate.Transaction
For node: tx expected fqn: org.hibernate.Transaction with type: Type14 got: org.hibernate.Transaction
For node: null expected fqn: null with type: Type15 got: org.hibernate.Transaction
Did not find solution for node: session=sessionFactory.openSession() with type Type5
Did not find solution for node: session with type Type5
Did not find solution for node: sessionFactory.openSession() with type Type16
Did not find solution for node: sessionFactory with type Type7
Cannot find matching typeVariable for: openSession
Did not find solution for node: openSession with type Type16
For node: tx=session.beginTransaction() expected fqn: org.hibernate.Transaction with type: Type14 got: org.hibernate.Transaction
For node: tx expected fqn: org.hibernate.Transaction with type: Type14 got: org.hibernate.Transaction
Did not find solution for node: session.beginTransaction() with type Type18
Did not find solution for node: session with type Type5
Cannot find matching typeVariable for: beginTransaction
Did not find solution for node: beginTransaction with type Type18
For node: tx.commit() expected fqn: void with type: Type20 got: void
For node: tx expected fqn: org.hibernate.Transaction with type: Type14 got: org.hibernate.Transaction
Cannot find matching typeVariable for: commit
For node: commit expected fqn: void with type: Type20 got: void
Cannot find matching typeVariable for: Exception e
For node: Exception e expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: e expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: e.printStackTrace() expected fqn: void with type: Type23 got: void
For node: e expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
Cannot find matching typeVariable for: printStackTrace
For node: printStackTrace expected fqn: void with type: Type23 got: void
Did not find solution for node: session.close() with type Type25
Did not find solution for node: session with type Type5
Cannot find matching typeVariable for: close
Did not find solution for node: close with type Type25
{Checked=50, Analyzed=28, Unsolved=22, Incorrect=1, Correct=27}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
null=NullLiteral: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=1, Correct=0}
org.hibernate.=Assignment: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
org.hibernate.=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=MethodInvocation: {Checked=4, Analyzed=1, Unsolved=3, Incorrect=0, Correct=1}
org.hibernate.=SimpleName: {Checked=17, Analyzed=6, Unsolved=11, Incorrect=0, Correct=6}
org.hibernate.=SimpleType: {Checked=4, Analyzed=2, Unsolved=2, Incorrect=0, Correct=2}
org.hibernate.=VariableDeclarationFragment: {Checked=3, Analyzed=1, Unsolved=2, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
Total stats
{Checked=50, Analyzed=28, Unsolved=22, Incorrect=1, Correct=27}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
null=NullLiteral: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=1, Correct=0}
org.hibernate.=Assignment: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
org.hibernate.=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=MethodInvocation: {Checked=4, Analyzed=1, Unsolved=3, Incorrect=0, Correct=1}
org.hibernate.=SimpleName: {Checked=17, Analyzed=6, Unsolved=11, Incorrect=0, Correct=6}
org.hibernate.=SimpleType: {Checked=4, Analyzed=2, Unsolved=2, Incorrect=0, Correct=2}
org.hibernate.=VariableDeclarationFragment: {Checked=3, Analyzed=1, Unsolved=2, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
java,ArrayType,1,1,1,0,0
java,SimpleName,5,5,5,0,0
java,SimpleType,2,2,2,0,0
java,SingleVariableDeclaration,2,2,2,0,0
null,NullLiteral,1,2,0,1,1
org.hibernate.,Assignment,1,2,1,0,1
org.hibernate.,ClassInstanceCreation,1,1,1,0,0
org.hibernate.,MethodInvocation,1,4,1,0,3
org.hibernate.,SimpleName,6,17,6,0,11
org.hibernate.,SimpleType,2,4,2,0,2
org.hibernate.,VariableDeclarationFragment,1,3,1,0,2
void,MethodInvocation,2,3,2,0,1
void,PrimitiveType,1,1,1,0,0
void,SimpleName,2,3,2,0,1
