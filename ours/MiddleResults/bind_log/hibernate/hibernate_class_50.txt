echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/hibernate_class_50.java
Expect check=81
Cannot find matching typeVariable for: public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Did not find solution for node: hibernate_class_50 with type Type1
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: sessionFactory
Cannot find matching typeVariable for: private SessionFactory sessionFactory;

Cannot find matching typeVariable for: public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Cannot find matching typeVariable for: import java.util.List;
import java.util.jar.Attributes.Name;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

For node: void expected fqn: void with type: Type5 got: void
Cannot find matching typeVariable for: setSessionFactory
Cannot find matching typeVariable for: public void setSessionFactory(SessionFactory sessionFactory){
  this.sessionFactory=sessionFactory;
}

Cannot find matching typeVariable for: public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Cannot find matching typeVariable for: import java.util.List;
import java.util.jar.Attributes.Name;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Cannot find matching typeVariable for: SessionFactory sessionFactory
For node: SessionFactory sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: this.sessionFactory=sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: this.sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Did not find solution for node: this with type Type1
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: getSessionFactory
Cannot find matching typeVariable for: public SessionFactory getSessionFactory(){
  return sessionFactory;
}

Cannot find matching typeVariable for: public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Cannot find matching typeVariable for: import java.util.List;
import java.util.jar.Attributes.Name;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
For node: @SuppressWarnings("unchecked") expected fqn: java.lang.SuppressWarnings with type: Type8 got: java.lang.SuppressWarnings
For node: SuppressWarnings expected fqn: java.lang.SuppressWarnings with type: Type8 got: java.lang.SuppressWarnings
Did not find solution for node: "unchecked" with type Type7
Did not find solution for node: List<Name> with type Type4=Type2<Type3>
For node: List expected fqn: java.util.List<java.util.jar.Attributes.Name> with type: Type2 got: java.util.List
For node: List expected fqn: java.util.List<java.util.jar.Attributes.Name> with type: Type2 got: java.util.List
Did not find solution for node: Name with type Type3
Did not find solution for node: Name with type Type3
Cannot find matching typeVariable for: getAll
Cannot find matching typeVariable for: @SuppressWarnings("unchecked") public List<Name> getAll(){
  Session session=this.sessionFactory.getCurrentSession();
  List<Name> names=(List<Name>)session.createQuery("from Name").list();
  return names;
}

Cannot find matching typeVariable for: public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Cannot find matching typeVariable for: import java.util.List;
import java.util.jar.Attributes.Name;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Did not find solution for node: Session with type Type9
Did not find solution for node: Session with type Type9
Cannot find matching typeVariable for: session=this.sessionFactory.getCurrentSession()
Did not find solution for node: session=this.sessionFactory.getCurrentSession() with type Type9
Did not find solution for node: session with type Type9
Did not find solution for node: this.sessionFactory.getCurrentSession() with type Type10
For node: this.sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Did not find solution for node: this with type Type1
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: getCurrentSession
Did not find solution for node: getCurrentSession with type Type10
Did not find solution for node: List<Name> with type Type4=Type2<Type3>
For node: List expected fqn: java.util.List<java.util.jar.Attributes.Name> with type: Type2 got: java.util.List
For node: List expected fqn: java.util.List<java.util.jar.Attributes.Name> with type: Type2 got: java.util.List
Did not find solution for node: Name with type Type3
Did not find solution for node: Name with type Type3
Cannot find matching typeVariable for: names=(List<Name>)session.createQuery("from Name").list()
Did not find solution for node: names=(List<Name>)session.createQuery("from Name").list() with type Type4=Type2<Type3>
Did not find solution for node: names with type Type4=Type2<Type3>
Did not find solution for node: (List<Name>)session.createQuery("from Name").list() with type Type4=Type2<Type3>
Did not find solution for node: List<Name> with type Type4=Type2<Type3>
For node: List expected fqn: java.util.List<java.util.jar.Attributes.Name> with type: Type2 got: java.util.List
For node: List expected fqn: java.util.List<java.util.jar.Attributes.Name> with type: Type2 got: java.util.List
Did not find solution for node: Name with type Type3
Did not find solution for node: Name with type Type3
For node: session.createQuery("from Name").list() expected fqn: java.util.List with type: Type15 got: java.util.List
Did not find solution for node: session.createQuery("from Name") with type Type12
Did not find solution for node: session with type Type9
Cannot find matching typeVariable for: createQuery
Did not find solution for node: createQuery with type Type12
Did not find solution for node: "from Name" with type Type7
Cannot find matching typeVariable for: list
For node: list expected fqn: java.util.List with type: Type15 got: java.util.List
Did not find solution for node: names with type Type4=Type2<Type3>
For node: void expected fqn: void with type: Type5 got: void
Cannot find matching typeVariable for: save
Cannot find matching typeVariable for: public void save(Name name){
  Session session=this.sessionFactory.getCurrentSession();
  session.saveOrUpdate(name);
  session.flush();
}

Cannot find matching typeVariable for: public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Cannot find matching typeVariable for: import java.util.List;
import java.util.jar.Attributes.Name;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
public class hibernate_class_50 {
  private SessionFactory sessionFactory;
  public void setSessionFactory(  SessionFactory sessionFactory){
    this.sessionFactory=sessionFactory;
  }
  public SessionFactory getSessionFactory(){
    return sessionFactory;
  }
  @SuppressWarnings("unchecked") public List<Name> getAll(){
    Session session=this.sessionFactory.getCurrentSession();
    List<Name> names=(List<Name>)session.createQuery("from Name").list();
    return names;
  }
  public void save(  Name name){
    Session session=this.sessionFactory.getCurrentSession();
    session.saveOrUpdate(name);
    session.flush();
  }
}

Cannot find matching typeVariable for: Name name
Did not find solution for node: Name name with type Type3
Did not find solution for node: Name with type Type3
Did not find solution for node: Name with type Type3
Did not find solution for node: name with type Type3
Did not find solution for node: Session with type Type9
Did not find solution for node: Session with type Type9
Cannot find matching typeVariable for: session=this.sessionFactory.getCurrentSession()
Did not find solution for node: session=this.sessionFactory.getCurrentSession() with type Type9
Did not find solution for node: session with type Type9
Did not find solution for node: this.sessionFactory.getCurrentSession() with type Type11
For node: this.sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Did not find solution for node: this with type Type1
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type6 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: getCurrentSession
Did not find solution for node: getCurrentSession with type Type11
Did not find solution for node: session.saveOrUpdate(name) with type Type17
Did not find solution for node: session with type Type9
Cannot find matching typeVariable for: saveOrUpdate
Did not find solution for node: saveOrUpdate with type Type17
Did not find solution for node: name with type Type3
Did not find solution for node: session.flush() with type Type20
Did not find solution for node: session with type Type9
Cannot find matching typeVariable for: flush
Did not find solution for node: flush with type Type20
{Checked=75, Analyzed=30, Unsolved=45, Incorrect=6, Correct=24}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=ThisExpression: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ParameterizedType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=SimpleName: {Checked=13, Analyzed=5, Unsolved=8, Incorrect=3, Correct=2}
java=SimpleType: {Checked=7, Analyzed=3, Unsolved=4, Incorrect=3, Correct=0}
java=SingleMemberAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.hibernate.=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=FieldAccess: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.hibernate.=MethodInvocation: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
org.hibernate.=SimpleName: {Checked=19, Analyzed=9, Unsolved=10, Incorrect=0, Correct=9}
org.hibernate.=SimpleType: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=0, Correct=3}
org.hibernate.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=VariableDeclarationFragment: {Checked=3, Analyzed=1, Unsolved=2, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
Total stats
{Checked=75, Analyzed=30, Unsolved=45, Incorrect=6, Correct=24}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=ThisExpression: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ParameterizedType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=SimpleName: {Checked=13, Analyzed=5, Unsolved=8, Incorrect=3, Correct=2}
java=SimpleType: {Checked=7, Analyzed=3, Unsolved=4, Incorrect=3, Correct=0}
java=SingleMemberAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.hibernate.=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=FieldAccess: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.hibernate.=MethodInvocation: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
org.hibernate.=SimpleName: {Checked=19, Analyzed=9, Unsolved=10, Incorrect=0, Correct=9}
org.hibernate.=SimpleType: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=0, Correct=3}
org.hibernate.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=VariableDeclarationFragment: {Checked=3, Analyzed=1, Unsolved=2, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
,SimpleName,0,1,0,0,1
,ThisExpression,0,3,0,0,3
java,CastExpression,0,1,0,0,1
java,MethodInvocation,1,1,1,0,0
java,ParameterizedType,0,3,0,0,3
java,SimpleName,5,13,2,3,8
java,SimpleType,3,7,0,3,4
java,SingleMemberAnnotation,1,1,1,0,0
java,SingleVariableDeclaration,0,1,0,0,1
java,StringLiteral,0,2,0,0,2
java,VariableDeclarationFragment,0,1,0,0,1
org.hibernate.,Assignment,1,1,1,0,0
org.hibernate.,FieldAccess,3,3,3,0,0
org.hibernate.,MethodInvocation,0,3,0,0,3
org.hibernate.,SimpleName,9,19,9,0,10
org.hibernate.,SimpleType,3,5,3,0,2
org.hibernate.,SingleVariableDeclaration,1,1,1,0,0
org.hibernate.,VariableDeclarationFragment,1,3,1,0,2
void,MethodInvocation,0,2,0,0,2
void,PrimitiveType,2,2,2,0,0
void,SimpleName,0,2,0,0,2
