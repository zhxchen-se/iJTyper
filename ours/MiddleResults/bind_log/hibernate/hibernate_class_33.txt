echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/hibernate_class_33.java
Expect check=79
Cannot find matching typeVariable for: public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: hibernate_class_33 with type Type1
Cannot find matching typeVariable for: instance=null
Did not find solution for node: instance=null with type Type1
Did not find solution for node: instance with type Type1
Did not find solution for node: null with type Type4
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: sessionFactory
Cannot find matching typeVariable for: private SessionFactory sessionFactory;

Cannot find matching typeVariable for: public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: hibernate_class_33 with type Type1
Cannot find matching typeVariable for: getInstance
Cannot find matching typeVariable for: public static hibernate_class_33 getInstance(){
  if (hibernate_class_33.instance == null) {
    hibernate_class_33.instance=new hibernate_class_33().init();
  }
  return hibernate_class_33.instance;
}

Cannot find matching typeVariable for: public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

For node: hibernate_class_33.instance == null expected fqn: boolean with type: Type6 got: boolean
Cannot find matching typeVariable for: hibernate_class_33.instance
For node: hibernate_class_33.instance expected fqn: hibernate_class_33 with type: Type6 got: boolean
Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: instance with type Type1
Did not find solution for node: null with type Type5
Did not find solution for node: hibernate_class_33.instance=new hibernate_class_33().init() with type Type1
Cannot find matching typeVariable for: hibernate_class_33.instance
Did not find solution for node: hibernate_class_33.instance with type Type1
Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: instance with type Type1
Did not find solution for node: new hibernate_class_33().init() with type Type9
Did not find solution for node: new hibernate_class_33() with type Type1
Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: hibernate_class_33 with type Type1
Cannot find matching typeVariable for: init
Did not find solution for node: init with type Type9
Cannot find matching typeVariable for: hibernate_class_33.instance
Cannot find matching typeVariable for: return hibernate_class_33.instance;

Cannot find matching typeVariable for: {
  if (hibernate_class_33.instance == null) {
    hibernate_class_33.instance=new hibernate_class_33().init();
  }
  return hibernate_class_33.instance;
}

Cannot find matching typeVariable for: public static hibernate_class_33 getInstance(){
  if (hibernate_class_33.instance == null) {
    hibernate_class_33.instance=new hibernate_class_33().init();
  }
  return hibernate_class_33.instance;
}

Cannot find matching typeVariable for: public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: instance with type Type1
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: getSessionFactory
Cannot find matching typeVariable for: public SessionFactory getSessionFactory(){
  return this.sessionFactory;
}

Cannot find matching typeVariable for: public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

For node: this.sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Did not find solution for node: this with type Type1
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: Session expected fqn: org.hibernate.Session with type: Type2 got: org.hibernate.Session
For node: Session expected fqn: org.hibernate.Session with type: Type2 got: org.hibernate.Session
Cannot find matching typeVariable for: getSession
Cannot find matching typeVariable for: public Session getSession(){
  return this.sessionFactory.openSession();
}

Cannot find matching typeVariable for: public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

For node: this.sessionFactory.openSession() expected fqn: org.hibernate.Session with type: Type11 got: org.hibernate.Session
For node: this.sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Did not find solution for node: this with type Type1
Cannot find matching typeVariable for: sessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: openSession
For node: openSession expected fqn: org.hibernate.Session with type: Type11 got: org.hibernate.Session
Did not find solution for node: hibernate_class_33 with type Type1
Did not find solution for node: hibernate_class_33 with type Type1
Cannot find matching typeVariable for: init
Cannot find matching typeVariable for: private hibernate_class_33 init(){
  Configuration cfg=new Configuration();
  cfg.setProperties(System.getProperties());
  cfg.configure();
  SessionFactory sessions=cfg.buildSessionFactory();
  sessionFactory=cfg.configure().buildSessionFactory();
  return this;
}

Cannot find matching typeVariable for: public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Cannot find matching typeVariable for: import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
public class hibernate_class_33 {
  private static hibernate_class_33 instance=null;
  private SessionFactory sessionFactory;
  public static hibernate_class_33 getInstance(){
    if (hibernate_class_33.instance == null) {
      hibernate_class_33.instance=new hibernate_class_33().init();
    }
    return hibernate_class_33.instance;
  }
  public SessionFactory getSessionFactory(){
    return this.sessionFactory;
  }
  public Session getSession(){
    return this.sessionFactory.openSession();
  }
  private hibernate_class_33 init(){
    Configuration cfg=new Configuration();
    cfg.setProperties(System.getProperties());
    cfg.configure();
    SessionFactory sessions=cfg.buildSessionFactory();
    sessionFactory=cfg.configure().buildSessionFactory();
    return this;
  }
}

Did not find solution for node: Configuration with type Type13
Did not find solution for node: Configuration with type Type13
Cannot find matching typeVariable for: cfg=new Configuration()
Did not find solution for node: cfg=new Configuration() with type Type13
Did not find solution for node: cfg with type Type13
Did not find solution for node: new Configuration() with type Type13
Did not find solution for node: Configuration with type Type13
Did not find solution for node: Configuration with type Type13
Did not find solution for node: cfg.setProperties(System.getProperties()) with type Type18
Did not find solution for node: cfg with type Type13
Cannot find matching typeVariable for: setProperties
Did not find solution for node: setProperties with type Type18
Did not find solution for node: System.getProperties() with type Type16
Did not find solution for node: System with type Type15
Cannot find matching typeVariable for: getProperties
Did not find solution for node: getProperties with type Type16
For node: cfg.configure() expected fqn: org.hibernate.cfg.Configuration with type: Type21 got: org.hibernate.cfg.Configuration
Did not find solution for node: cfg with type Type13
Cannot find matching typeVariable for: configure
For node: configure expected fqn: org.hibernate.cfg.Configuration with type: Type21 got: org.hibernate.cfg.Configuration
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: sessions=cfg.buildSessionFactory()
For node: sessions=cfg.buildSessionFactory() expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: sessions expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Did not find solution for node: cfg.buildSessionFactory() with type Type23
Did not find solution for node: cfg with type Type13
Cannot find matching typeVariable for: buildSessionFactory
Did not find solution for node: buildSessionFactory with type Type23
For node: sessionFactory=cfg.configure().buildSessionFactory() expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: cfg.configure().buildSessionFactory() expected fqn: org.hibernate.SessionFactory with type: Type25 got: org.hibernate.SessionFactory
Did not find solution for node: cfg.configure() with type Type22
Did not find solution for node: cfg with type Type13
Cannot find matching typeVariable for: configure
Did not find solution for node: configure with type Type22
Cannot find matching typeVariable for: buildSessionFactory
For node: buildSessionFactory expected fqn: org.hibernate.SessionFactory with type: Type25 got: org.hibernate.SessionFactory
Did not find solution for node: this with type Type1
{Checked=72, Analyzed=25, Unsolved=47, Incorrect=1, Correct=24}
=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=QualifiedName: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=1, Correct=0}
=SimpleName: {Checked=13, Analyzed=0, Unsolved=13, Incorrect=0, Correct=0}
=SimpleType: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
=ThisExpression: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
org.hibernate.=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.hibernate.=FieldAccess: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.hibernate.=MethodInvocation: {Checked=6, Analyzed=3, Unsolved=3, Incorrect=0, Correct=3}
org.hibernate.=SimpleName: {Checked=21, Analyzed=11, Unsolved=10, Incorrect=0, Correct=11}
org.hibernate.=SimpleType: {Checked=6, Analyzed=4, Unsolved=2, Incorrect=0, Correct=4}
org.hibernate.=VariableDeclarationFragment: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
Total stats
{Checked=72, Analyzed=25, Unsolved=47, Incorrect=1, Correct=24}
=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=QualifiedName: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=1, Correct=0}
=SimpleName: {Checked=13, Analyzed=0, Unsolved=13, Incorrect=0, Correct=0}
=SimpleType: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
=ThisExpression: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
org.hibernate.=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.hibernate.=FieldAccess: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.hibernate.=MethodInvocation: {Checked=6, Analyzed=3, Unsolved=3, Incorrect=0, Correct=3}
org.hibernate.=SimpleName: {Checked=21, Analyzed=11, Unsolved=10, Incorrect=0, Correct=11}
org.hibernate.=SimpleType: {Checked=6, Analyzed=4, Unsolved=2, Incorrect=0, Correct=4}
org.hibernate.=VariableDeclarationFragment: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
,Assignment,0,1,0,0,1
,ClassInstanceCreation,0,1,0,0,1
,MethodInvocation,0,1,0,0,1
,QualifiedName,1,2,0,1,1
,SimpleName,0,13,0,0,13
,SimpleType,0,4,0,0,4
,ThisExpression,0,3,0,0,3
,VariableDeclarationFragment,0,1,0,0,1
boolean,InfixExpression,1,1,1,0,0
java,MethodInvocation,0,1,0,0,1
java,SimpleName,0,2,0,0,2
null,NullLiteral,0,2,0,0,2
org.hibernate.,Assignment,1,1,1,0,0
org.hibernate.,ClassInstanceCreation,0,1,0,0,1
org.hibernate.,FieldAccess,2,2,2,0,0
org.hibernate.,MethodInvocation,3,6,3,0,3
org.hibernate.,SimpleName,11,21,11,0,10
org.hibernate.,SimpleType,4,6,4,0,2
org.hibernate.,VariableDeclarationFragment,2,3,2,0,1
