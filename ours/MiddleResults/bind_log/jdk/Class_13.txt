echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/Class_13.java
Expect check=93
Cannot find matching typeVariable for: class WhereToPutTheGui {
  public static void initGui(){
    for (int ii=1; ii < 4; ii++) {
      JFrame f=new JFrame("Frame " + ii);
      f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
      f.add(new JTextArea(s,3,28));
      f.pack();
      f.setLocationByPlatform(true);
      f.setVisible(true);
    }
  }
  public static void main(  String[] args){
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        try {
          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
 catch (        Exception useDefault) {
        }
        initGui();
      }
    }
);
  }
}

Cannot find matching typeVariable for: WhereToPutTheGui
Cannot find matching typeVariable for: class WhereToPutTheGui {
  public static void initGui(){
    for (int ii=1; ii < 4; ii++) {
      JFrame f=new JFrame("Frame " + ii);
      f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
      f.add(new JTextArea(s,3,28));
      f.pack();
      f.setLocationByPlatform(true);
      f.setVisible(true);
    }
  }
  public static void main(  String[] args){
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        try {
          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
 catch (        Exception useDefault) {
        }
        initGui();
      }
    }
);
  }
}

Cannot find matching typeVariable for: package Class_;
import javax.swing.UIManager;
import javax.swing.SwingUtilities;
import javax.swing.JTextArea;
import javax.swing.JFrame;
class WhereToPutTheGui {
  public static void initGui(){
    for (int ii=1; ii < 4; ii++) {
      JFrame f=new JFrame("Frame " + ii);
      f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
      f.add(new JTextArea(s,3,28));
      f.pack();
      f.setLocationByPlatform(true);
      f.setVisible(true);
    }
  }
  public static void main(  String[] args){
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        try {
          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
 catch (        Exception useDefault) {
        }
        initGui();
      }
    }
);
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: initGui
Cannot find matching typeVariable for: public static void initGui(){
  for (int ii=1; ii < 4; ii++) {
    JFrame f=new JFrame("Frame " + ii);
    f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
    f.add(new JTextArea(s,3,28));
    f.pack();
    f.setLocationByPlatform(true);
    f.setVisible(true);
  }
}

Cannot find matching typeVariable for: class WhereToPutTheGui {
  public static void initGui(){
    for (int ii=1; ii < 4; ii++) {
      JFrame f=new JFrame("Frame " + ii);
      f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
      f.add(new JTextArea(s,3,28));
      f.pack();
      f.setLocationByPlatform(true);
      f.setVisible(true);
    }
  }
  public static void main(  String[] args){
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        try {
          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
 catch (        Exception useDefault) {
        }
        initGui();
      }
    }
);
  }
}

Cannot find matching typeVariable for: package Class_;
import javax.swing.UIManager;
import javax.swing.SwingUtilities;
import javax.swing.JTextArea;
import javax.swing.JFrame;
class WhereToPutTheGui {
  public static void initGui(){
    for (int ii=1; ii < 4; ii++) {
      JFrame f=new JFrame("Frame " + ii);
      f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
      f.add(new JTextArea(s,3,28));
      f.pack();
      f.setLocationByPlatform(true);
      f.setVisible(true);
    }
  }
  public static void main(  String[] args){
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        try {
          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
 catch (        Exception useDefault) {
        }
        initGui();
      }
    }
);
  }
}

Cannot find matching typeVariable for: int ii=1
Did not find solution for node: int ii=1 with type Type3
Did not find solution for node: int with type Type3
Cannot find matching typeVariable for: ii=1
Did not find solution for node: ii=1 with type Type3
Did not find solution for node: ii with type Type3
For node: 1 expected fqn: int with type: Type4 got: byte
Did not find solution for node: ii < 4 with type Type5
Did not find solution for node: ii with type Type3
For node: 4 expected fqn: int with type: Type4 got: byte
Did not find solution for node: ii++ with type Type3
Did not find solution for node: ii with type Type3
Did not find solution for node: JFrame with type Type7
Did not find solution for node: JFrame with type Type7
Cannot find matching typeVariable for: f=new JFrame("Frame " + ii)
Did not find solution for node: f=new JFrame("Frame " + ii) with type Type7
Did not find solution for node: f with type Type7
Did not find solution for node: new JFrame("Frame " + ii) with type Type7
Did not find solution for node: JFrame with type Type7
Did not find solution for node: JFrame with type Type7
Did not find solution for node: "Frame " + ii with type Type8
Did not find solution for node: "Frame " with type Type8
Did not find solution for node: ii with type Type3
Did not find solution for node: f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE) with type Type12
Did not find solution for node: f with type Type7
Cannot find matching typeVariable for: setDefaultCloseOperation
Did not find solution for node: setDefaultCloseOperation with type Type12
Cannot find matching typeVariable for: JFrame.DISPOSE_ON_CLOSE
Did not find solution for node: JFrame.DISPOSE_ON_CLOSE with type Type12
Did not find solution for node: JFrame with type Type7
Did not find solution for node: DISPOSE_ON_CLOSE with type Type11
Did not find solution for node: String with type Type8
Did not find solution for node: String with type Type8
Cannot find matching typeVariable for: s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version")
Did not find solution for node: s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version") with type Type8
Did not find solution for node: s with type Type8
Did not find solution for node: "os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version") with type Type8
Did not find solution for node: "os.name: " with type Type8
Did not find solution for node: System.getProperty("os.name") with type Type16
For node: System expected fqn: java.lang.System with type: Type15 got: java.lang.System
Cannot find matching typeVariable for: getProperty
Did not find solution for node: getProperty with type Type16
Did not find solution for node: "os.name" with type Type8
Did not find solution for node: "\nos.version: " with type Type8
Did not find solution for node: System.getProperty("os.version") with type Type18
For node: System expected fqn: java.lang.System with type: Type15 got: java.lang.System
Cannot find matching typeVariable for: getProperty
Did not find solution for node: getProperty with type Type18
Did not find solution for node: "os.version" with type Type8
Did not find solution for node: f.add(new JTextArea(s,3,28)) with type Type24
Did not find solution for node: f with type Type7
Cannot find matching typeVariable for: add
Did not find solution for node: add with type Type24
Did not find solution for node: new JTextArea(s,3,28) with type Type19
Did not find solution for node: JTextArea with type Type19
Did not find solution for node: JTextArea with type Type19
Did not find solution for node: s with type Type8
For node: 3 expected fqn: int with type: Type4 got: byte
For node: 28 expected fqn: int with type: Type4 got: byte
Did not find solution for node: f.pack() with type Type27
Did not find solution for node: f with type Type7
Cannot find matching typeVariable for: pack
Did not find solution for node: pack with type Type27
Did not find solution for node: f.setLocationByPlatform(true) with type Type29
Did not find solution for node: f with type Type7
Cannot find matching typeVariable for: setLocationByPlatform
Did not find solution for node: setLocationByPlatform with type Type29
Did not find solution for node: true with type Type5
Did not find solution for node: f.setVisible(true) with type Type32
Did not find solution for node: f with type Type7
Cannot find matching typeVariable for: setVisible
Did not find solution for node: setVisible with type Type32
Did not find solution for node: true with type Type5
For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      try {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      }
 catch (      Exception useDefault) {
      }
      initGui();
    }
  }
);
}

Cannot find matching typeVariable for: class WhereToPutTheGui {
  public static void initGui(){
    for (int ii=1; ii < 4; ii++) {
      JFrame f=new JFrame("Frame " + ii);
      f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
      f.add(new JTextArea(s,3,28));
      f.pack();
      f.setLocationByPlatform(true);
      f.setVisible(true);
    }
  }
  public static void main(  String[] args){
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        try {
          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
 catch (        Exception useDefault) {
        }
        initGui();
      }
    }
);
  }
}

Cannot find matching typeVariable for: package Class_;
import javax.swing.UIManager;
import javax.swing.SwingUtilities;
import javax.swing.JTextArea;
import javax.swing.JFrame;
class WhereToPutTheGui {
  public static void initGui(){
    for (int ii=1; ii < 4; ii++) {
      JFrame f=new JFrame("Frame " + ii);
      f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      String s="os.name: " + System.getProperty("os.name") + "\nos.version: "+ System.getProperty("os.version");
      f.add(new JTextArea(s,3,28));
      f.pack();
      f.setLocationByPlatform(true);
      f.setVisible(true);
    }
  }
  public static void main(  String[] args){
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        try {
          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
 catch (        Exception useDefault) {
        }
        initGui();
      }
    }
);
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type35 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type35 got: java.lang.String[]
Did not find solution for node: String with type Type8
Did not find solution for node: String with type Type8
For node: args expected fqn: java.lang.String[] with type: Type35 got: java.lang.String[]
For node: SwingUtilities.invokeLater(new Runnable(){
  public void run(){
    try {
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    }
 catch (    Exception useDefault) {
    }
    initGui();
  }
}
) expected fqn: void with type: Type46 got: void
For node: SwingUtilities expected fqn: javax.swing.SwingUtilities with type: Type45 got: javax.swing.SwingUtilities
Cannot find matching typeVariable for: invokeLater
For node: invokeLater expected fqn: void with type: Type46 got: void
For node: new Runnable(){
  public void run(){
    try {
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    }
 catch (    Exception useDefault) {
    }
    initGui();
  }
}
 expected fqn:  with type: Type36 got: java.lang.Runnable
For node: Runnable expected fqn: java.lang.Runnable with type: Type36 got: java.lang.Runnable
For node: Runnable expected fqn: java.lang.Runnable with type: Type36 got: java.lang.Runnable
Cannot find matching typeVariable for: {
  public void run(){
    try {
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    }
 catch (    Exception useDefault) {
    }
    initGui();
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: run
Cannot find matching typeVariable for: public void run(){
  try {
    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
  }
 catch (  Exception useDefault) {
  }
  initGui();
}

Cannot find matching typeVariable for: {
  public void run(){
    try {
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
    }
 catch (    Exception useDefault) {
    }
    initGui();
  }
}

For node: run expected fqn: void with type: Type36 got: java.lang.Runnable
For node: UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()) expected fqn: void with type: Type40 got: void
For node: UIManager expected fqn: javax.swing.UIManager with type: Type37 got: javax.swing.UIManager
Cannot find matching typeVariable for: setLookAndFeel
For node: setLookAndFeel expected fqn: void with type: Type40 got: void
For node: UIManager.getSystemLookAndFeelClassName() expected fqn: java.lang.String with type: Type38 got: java.lang.String
For node: UIManager expected fqn: javax.swing.UIManager with type: Type37 got: javax.swing.UIManager
Cannot find matching typeVariable for: getSystemLookAndFeelClassName
For node: getSystemLookAndFeelClassName expected fqn: java.lang.String with type: Type38 got: java.lang.String
Cannot find matching typeVariable for: Exception useDefault
For node: Exception useDefault expected fqn: java.lang.Exception with type: Type43 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type43 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type43 got: java.lang.Exception
For node: useDefault expected fqn: java.lang.Exception with type: Type43 got: java.lang.Exception
For node: initGui() expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: initGui
For node: initGui expected fqn: void with type: Type2 got: void
{Checked=88, Analyzed=31, Unsolved=57, Incorrect=6, Correct=25}
=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
boolean=BooleanLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=NumberLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=4, Correct=0}
int=PostfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=QualifiedName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=SimpleName: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
int=VariableDeclarationExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=InfixExpression: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=4, Analyzed=1, Unsolved=3, Incorrect=0, Correct=1}
java=SimpleName: {Checked=27, Analyzed=10, Unsolved=17, Incorrect=0, Correct=10}
java=SimpleType: {Checked=7, Analyzed=2, Unsolved=5, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=7, Analyzed=3, Unsolved=4, Incorrect=0, Correct=3}
void=PrimitiveType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=SimpleName: {Checked=8, Analyzed=4, Unsolved=4, Incorrect=1, Correct=3}
Total stats
{Checked=88, Analyzed=31, Unsolved=57, Incorrect=6, Correct=25}
=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
boolean=BooleanLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=NumberLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=4, Correct=0}
int=PostfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=QualifiedName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=SimpleName: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
int=VariableDeclarationExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=InfixExpression: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=4, Analyzed=1, Unsolved=3, Incorrect=0, Correct=1}
java=SimpleName: {Checked=27, Analyzed=10, Unsolved=17, Incorrect=0, Correct=10}
java=SimpleType: {Checked=7, Analyzed=2, Unsolved=5, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=7, Analyzed=3, Unsolved=4, Incorrect=0, Correct=3}
void=PrimitiveType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=SimpleName: {Checked=8, Analyzed=4, Unsolved=4, Incorrect=1, Correct=3}
,ClassInstanceCreation,1,1,0,1,0
boolean,BooleanLiteral,0,2,0,0,2
boolean,InfixExpression,0,1,0,0,1
int,NumberLiteral,4,4,0,4,0
int,PostfixExpression,0,1,0,0,1
int,PrimitiveType,0,1,0,0,1
int,QualifiedName,0,1,0,0,1
int,SimpleName,0,5,0,0,5
int,VariableDeclarationExpression,0,1,0,0,1
int,VariableDeclarationFragment,0,1,0,0,1
java,ArrayType,1,1,1,0,0
java,ClassInstanceCreation,0,2,0,0,2
java,InfixExpression,0,2,0,0,2
java,MethodInvocation,1,4,1,0,3
java,SimpleName,10,27,10,0,17
java,SimpleType,2,7,2,0,5
java,SingleVariableDeclaration,2,2,2,0,0
java,StringLiteral,0,5,0,0,5
java,VariableDeclarationFragment,0,2,0,0,2
void,MethodInvocation,3,7,3,0,4
void,PrimitiveType,3,3,3,0,0
void,SimpleName,4,8,3,1,4
