echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime10.java
Expect check=67
Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: JodaTime10
Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

For node: Object expected fqn: java.lang.Object with type: Type4 got: java.lang.Object
For node: Object expected fqn: java.lang.Object with type: Type4 got: java.lang.Object
Cannot find matching typeVariable for: writeReplace
Cannot find matching typeVariable for: private Object writeReplace(){
  return new Stub(null);
}

Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Did not find solution for node: new Stub(null) with type Type2
Did not find solution for node: Stub with type Type2
Did not find solution for node: Stub with type Type2
Did not find solution for node: null with type Type19
Cannot find matching typeVariable for: private static final class Stub implements Serializable {
  private static final long serialVersionUID=-6212696554273812441L;
  private transient DateTimeZone iZone;
  Stub(  DateTimeZone zone){
    iZone=zone;
  }
  private Object readResolve(){
    return ISOChronology.getInstance(iZone);
  }
  private void writeObject(  ObjectOutputStream out) throws IOException {
    out.writeObject(iZone);
  }
  private void readObject(  ObjectInputStream in) throws IOException, ClassNotFoundException {
    iZone=(DateTimeZone)in.readObject();
  }
}

Did not find solution for node: Stub with type Type2
For node: Serializable expected fqn: java.io.Serializable with type: Type3 got: java.io.Serializable
For node: Serializable expected fqn: java.io.Serializable with type: Type3 got: java.io.Serializable
Did not find solution for node: long with type Type22
Cannot find matching typeVariable for: serialVersionUID=-6212696554273812441L
Did not find solution for node: serialVersionUID=-6212696554273812441L with type Type22
Did not find solution for node: serialVersionUID with type Type22
Did not find solution for node: -6212696554273812441L with type Type22
Did not find solution for node: 6212696554273812441L with type Type22
For node: DateTimeZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: DateTimeZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
Cannot find matching typeVariable for: iZone
For node: iZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
Cannot find matching typeVariable for: iZone
Cannot find matching typeVariable for: private transient DateTimeZone iZone;

Cannot find matching typeVariable for: private static final class Stub implements Serializable {
  private static final long serialVersionUID=-6212696554273812441L;
  private transient DateTimeZone iZone;
  Stub(  DateTimeZone zone){
    iZone=zone;
  }
  private Object readResolve(){
    return ISOChronology.getInstance(iZone);
  }
  private void writeObject(  ObjectOutputStream out) throws IOException {
    out.writeObject(iZone);
  }
  private void readObject(  ObjectInputStream in) throws IOException, ClassNotFoundException {
    iZone=(DateTimeZone)in.readObject();
  }
}

Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: Stub
Cannot find matching typeVariable for: Stub(DateTimeZone zone){
  iZone=zone;
}

Cannot find matching typeVariable for: private static final class Stub implements Serializable {
  private static final long serialVersionUID=-6212696554273812441L;
  private transient DateTimeZone iZone;
  Stub(  DateTimeZone zone){
    iZone=zone;
  }
  private Object readResolve(){
    return ISOChronology.getInstance(iZone);
  }
  private void writeObject(  ObjectOutputStream out) throws IOException {
    out.writeObject(iZone);
  }
  private void readObject(  ObjectInputStream in) throws IOException, ClassNotFoundException {
    iZone=(DateTimeZone)in.readObject();
  }
}

Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: DateTimeZone zone
For node: DateTimeZone zone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: DateTimeZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: DateTimeZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: zone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: iZone=zone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: iZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: zone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: Object expected fqn: java.lang.Object with type: Type4 got: java.lang.Object
For node: Object expected fqn: java.lang.Object with type: Type4 got: java.lang.Object
Cannot find matching typeVariable for: readResolve
Cannot find matching typeVariable for: private Object readResolve(){
  return ISOChronology.getInstance(iZone);
}

Cannot find matching typeVariable for: private static final class Stub implements Serializable {
  private static final long serialVersionUID=-6212696554273812441L;
  private transient DateTimeZone iZone;
  Stub(  DateTimeZone zone){
    iZone=zone;
  }
  private Object readResolve(){
    return ISOChronology.getInstance(iZone);
  }
  private void writeObject(  ObjectOutputStream out) throws IOException {
    out.writeObject(iZone);
  }
  private void readObject(  ObjectInputStream in) throws IOException, ClassNotFoundException {
    iZone=(DateTimeZone)in.readObject();
  }
}

Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Did not find solution for node: ISOChronology.getInstance(iZone) with type Type26
For node: ISOChronology expected fqn: org.joda.time.chrono.ISOChronology with type: Type25 got: org.joda.time.chrono.ISOChronology
Cannot find matching typeVariable for: getInstance
Did not find solution for node: getInstance with type Type26
For node: iZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: void expected fqn: void with type: Type5 got: void
Cannot find matching typeVariable for: writeObject
Cannot find matching typeVariable for: private void writeObject(ObjectOutputStream out) throws IOException {
  out.writeObject(iZone);
}

Cannot find matching typeVariable for: private static final class Stub implements Serializable {
  private static final long serialVersionUID=-6212696554273812441L;
  private transient DateTimeZone iZone;
  Stub(  DateTimeZone zone){
    iZone=zone;
  }
  private Object readResolve(){
    return ISOChronology.getInstance(iZone);
  }
  private void writeObject(  ObjectOutputStream out) throws IOException {
    out.writeObject(iZone);
  }
  private void readObject(  ObjectInputStream in) throws IOException, ClassNotFoundException {
    iZone=(DateTimeZone)in.readObject();
  }
}

Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: ObjectOutputStream out
For node: ObjectOutputStream out expected fqn: java.io.ObjectOutputStream with type: Type29 got: java.io.ObjectOutputStream
For node: ObjectOutputStream expected fqn: java.io.ObjectOutputStream with type: Type29 got: java.io.ObjectOutputStream
For node: ObjectOutputStream expected fqn: java.io.ObjectOutputStream with type: Type29 got: java.io.ObjectOutputStream
For node: out expected fqn: java.io.ObjectOutputStream with type: Type29 got: java.io.ObjectOutputStream
For node: IOException expected fqn: java.io.IOException with type: Type30 got: java.io.IOException
For node: IOException expected fqn: java.io.IOException with type: Type30 got: java.io.IOException
For node: out.writeObject(iZone) expected fqn: void with type: Type31 got: void
For node: out expected fqn: java.io.ObjectOutputStream with type: Type29 got: java.io.ObjectOutputStream
Cannot find matching typeVariable for: writeObject
For node: writeObject expected fqn: void with type: Type31 got: void
For node: iZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: void expected fqn: void with type: Type5 got: void
Cannot find matching typeVariable for: readObject
Cannot find matching typeVariable for: private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
  iZone=(DateTimeZone)in.readObject();
}

Cannot find matching typeVariable for: private static final class Stub implements Serializable {
  private static final long serialVersionUID=-6212696554273812441L;
  private transient DateTimeZone iZone;
  Stub(  DateTimeZone zone){
    iZone=zone;
  }
  private Object readResolve(){
    return ISOChronology.getInstance(iZone);
  }
  private void writeObject(  ObjectOutputStream out) throws IOException {
    out.writeObject(iZone);
  }
  private void readObject(  ObjectInputStream in) throws IOException, ClassNotFoundException {
    iZone=(DateTimeZone)in.readObject();
  }
}

Cannot find matching typeVariable for: public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
public class JodaTime10 {
  private Object writeReplace(){
    return new Stub(null);
  }
private static final class Stub implements Serializable {
    private static final long serialVersionUID=-6212696554273812441L;
    private transient DateTimeZone iZone;
    Stub(    DateTimeZone zone){
      iZone=zone;
    }
    private Object readResolve(){
      return ISOChronology.getInstance(iZone);
    }
    private void writeObject(    ObjectOutputStream out) throws IOException {
      out.writeObject(iZone);
    }
    private void readObject(    ObjectInputStream in) throws IOException, ClassNotFoundException {
      iZone=(DateTimeZone)in.readObject();
    }
  }
}

Cannot find matching typeVariable for: ObjectInputStream in
For node: ObjectInputStream in expected fqn: java.io.ObjectInputStream with type: Type34 got: java.io.ObjectInputStream
For node: ObjectInputStream expected fqn: java.io.ObjectInputStream with type: Type34 got: java.io.ObjectInputStream
For node: ObjectInputStream expected fqn: java.io.ObjectInputStream with type: Type34 got: java.io.ObjectInputStream
For node: in expected fqn: java.io.ObjectInputStream with type: Type34 got: java.io.ObjectInputStream
For node: IOException expected fqn: java.io.IOException with type: Type30 got: java.io.IOException
For node: IOException expected fqn: java.io.IOException with type: Type30 got: java.io.IOException
For node: ClassNotFoundException expected fqn: java.lang.ClassNotFoundException with type: Type35 got: java.lang.ClassNotFoundException
For node: ClassNotFoundException expected fqn: java.lang.ClassNotFoundException with type: Type35 got: java.lang.ClassNotFoundException
For node: iZone=(DateTimeZone)in.readObject() expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: iZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: (DateTimeZone)in.readObject() expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: DateTimeZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
For node: DateTimeZone expected fqn: org.joda.time.DateTimeZone with type: Type23 got: org.joda.time.DateTimeZone
Did not find solution for node: in.readObject() with type Type36
For node: in expected fqn: java.io.ObjectInputStream with type: Type34 got: java.io.ObjectInputStream
Cannot find matching typeVariable for: readObject
Did not find solution for node: readObject with type Type36
{Checked=58, Analyzed=44, Unsolved=14, Incorrect=0, Correct=44}
=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=13, Analyzed=12, Unsolved=1, Incorrect=0, Correct=12}
java=SimpleType: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=NumberLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=PrefixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=Assignment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=SimpleName: {Checked=11, Analyzed=10, Unsolved=1, Incorrect=0, Correct=10}
org.joda.time.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.joda.time.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=58, Analyzed=44, Unsolved=14, Incorrect=0, Correct=44}
=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=13, Analyzed=12, Unsolved=1, Incorrect=0, Correct=12}
java=SimpleType: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=NumberLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=PrefixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=Assignment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=SimpleName: {Checked=11, Analyzed=10, Unsolved=1, Incorrect=0, Correct=10}
org.joda.time.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.joda.time.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
,ClassInstanceCreation,0,1,0,0,1
,SimpleName,0,2,0,0,2
,SimpleType,0,1,0,0,1
java,MethodInvocation,0,1,0,0,1
java,SimpleName,12,13,12,0,1
java,SimpleType,8,8,8,0,0
java,SingleVariableDeclaration,2,2,2,0,0
long,NumberLiteral,0,1,0,0,1
long,PrefixExpression,0,1,0,0,1
long,PrimitiveType,0,1,0,0,1
long,SimpleName,0,1,0,0,1
long,VariableDeclarationFragment,0,1,0,0,1
null,NullLiteral,0,1,0,0,1
org.joda.time.,Assignment,2,2,2,0,0
org.joda.time.,CastExpression,1,1,1,0,0
org.joda.time.,MethodInvocation,0,1,0,0,1
org.joda.time.,SimpleName,10,11,10,0,1
org.joda.time.,SimpleType,3,3,3,0,0
org.joda.time.,SingleVariableDeclaration,1,1,1,0,0
org.joda.time.,VariableDeclarationFragment,1,1,1,0,0
void,MethodInvocation,1,1,1,0,0
void,PrimitiveType,2,2,2,0,0
void,SimpleName,1,1,1,0,0
