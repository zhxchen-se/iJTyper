echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime35.java
Expect check=139
Cannot find matching typeVariable for: public class JodaTime35 {
  private final static PeriodFormatter DURATION_FORMATTER=new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter();
  public static String format(  Date start){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,(ReadablePeriod)new Period(new DateTime(start),new DateTime()));
    return result.toString();
  }
  public static String format(  Date start,  Date end){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end)));
    return result.toString();
  }
}

Did not find solution for node: JodaTime35 with type Type1
For node: PeriodFormatter expected fqn: org.joda.time.format.PeriodFormatter with type: Type3 got: org.joda.time.format.PeriodFormatter
For node: PeriodFormatter expected fqn: org.joda.time.format.PeriodFormatter with type: Type3 got: org.joda.time.format.PeriodFormatter
Cannot find matching typeVariable for: DURATION_FORMATTER=new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter()
For node: DURATION_FORMATTER=new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter() expected fqn: org.joda.time.format.PeriodFormatter with type: Type3 got: org.joda.time.format.PeriodFormatter
For node: DURATION_FORMATTER expected fqn: org.joda.time.format.PeriodFormatter with type: Type3 got: org.joda.time.format.PeriodFormatter
For node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter() expected fqn: org.joda.time.format.PeriodFormatter with type: Type59 got: org.joda.time.format.PeriodFormatter
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds") with type Type55
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds() with type Type53
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ") with type Type50
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes") with type Type46
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes() with type Type44
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ") with type Type41
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours") with type Type37
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours() with type Type35
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ") with type Type32
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days") with type Type28
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays() with type Type26
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ") with type Type23
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months") with type Type19
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths() with type Type17
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ") with type Type14
Did not find solution for node: new PeriodFormatterBuilder().appendYears().appendSuffix("year","years") with type Type10
For node: new PeriodFormatterBuilder().appendYears() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type7 got: org.joda.time.format.PeriodFormatterBuilder
For node: new PeriodFormatterBuilder() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type4 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type4 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type4 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: appendYears
For node: appendYears expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type7 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type10
For node: "year" expected fqn: java.lang.String with type: Type9 got: java.lang.String
For node: "years" expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendSeparator
Did not find solution for node: appendSeparator with type Type14
For node: " " expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendMonths
Did not find solution for node: appendMonths with type Type17
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type19
For node: "month" expected fqn: java.lang.String with type: Type9 got: java.lang.String
For node: "months" expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendSeparator
Did not find solution for node: appendSeparator with type Type23
For node: " " expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendDays
Did not find solution for node: appendDays with type Type26
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type28
For node: "day" expected fqn: java.lang.String with type: Type9 got: java.lang.String
For node: "days" expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendSeparator
Did not find solution for node: appendSeparator with type Type32
For node: " " expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendHours
Did not find solution for node: appendHours with type Type35
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type37
For node: "hour" expected fqn: java.lang.String with type: Type9 got: java.lang.String
For node: "hours" expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendSeparator
Did not find solution for node: appendSeparator with type Type41
For node: " " expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendMinutes
Did not find solution for node: appendMinutes with type Type44
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type46
For node: "minute" expected fqn: java.lang.String with type: Type9 got: java.lang.String
For node: "minutes" expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendSeparator
Did not find solution for node: appendSeparator with type Type50
For node: " " expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: appendSeconds
Did not find solution for node: appendSeconds with type Type53
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type55
For node: "second" expected fqn: java.lang.String with type: Type9 got: java.lang.String
For node: "seconds" expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: toFormatter
For node: toFormatter expected fqn: org.joda.time.format.PeriodFormatter with type: Type59 got: org.joda.time.format.PeriodFormatter
For node: String expected fqn: java.lang.String with type: Type9 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type9 got: java.lang.String
Cannot find matching typeVariable for: format
Cannot find matching typeVariable for: public static String format(Date start){
  StringBuffer result=new StringBuffer();
  DURATION_FORMATTER.printTo(result,(ReadablePeriod)new Period(new DateTime(start),new DateTime()));
  return result.toString();
}

Cannot find matching typeVariable for: public class JodaTime35 {
  private final static PeriodFormatter DURATION_FORMATTER=new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter();
  public static String format(  Date start){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,(ReadablePeriod)new Period(new DateTime(start),new DateTime()));
    return result.toString();
  }
  public static String format(  Date start,  Date end){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end)));
    return result.toString();
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.util.Date;
import org.joda.time.DateTime;
import org.joda.time.Period;
import org.joda.time.ReadablePeriod;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime35 {
  private final static PeriodFormatter DURATION_FORMATTER=new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter();
  public static String format(  Date start){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,(ReadablePeriod)new Period(new DateTime(start),new DateTime()));
    return result.toString();
  }
  public static String format(  Date start,  Date end){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end)));
    return result.toString();
  }
}

Cannot find matching typeVariable for: Date start
Did not find solution for node: Date start with type Type61
Did not find solution for node: Date with type Type61
Did not find solution for node: Date with type Type61
Did not find solution for node: start with type Type61
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
Cannot find matching typeVariable for: result=new StringBuffer()
For node: result=new StringBuffer() expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: result expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: new StringBuffer() expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: DURATION_FORMATTER.printTo(result,(ReadablePeriod)new Period(new DateTime(start),new DateTime())) expected fqn: void with type: Type73 got: void
For node: DURATION_FORMATTER expected fqn: org.joda.time.format.PeriodFormatter with type: Type3 got: org.joda.time.format.PeriodFormatter
Cannot find matching typeVariable for: printTo
For node: printTo expected fqn: void with type: Type73 got: void
For node: result expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
Did not find solution for node: (ReadablePeriod)new Period(new DateTime(start),new DateTime()) with type Type64
Did not find solution for node: ReadablePeriod with type Type64
Did not find solution for node: ReadablePeriod with type Type64
Did not find solution for node: new Period(new DateTime(start),new DateTime()) with type Type65
Did not find solution for node: Period with type Type65
Did not find solution for node: Period with type Type65
Did not find solution for node: new DateTime(start) with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: start with type Type61
Did not find solution for node: new DateTime() with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: DateTime with type Type66
For node: result.toString() expected fqn: java.lang.String with type: Type77 got: java.lang.String
For node: result expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
Cannot find matching typeVariable for: toString
For node: toString expected fqn: java.lang.String with type: Type77 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
Cannot find matching typeVariable for: format
Cannot find matching typeVariable for: public static String format(Date start,Date end){
  StringBuffer result=new StringBuffer();
  DURATION_FORMATTER.printTo(result,new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end)));
  return result.toString();
}

Cannot find matching typeVariable for: public class JodaTime35 {
  private final static PeriodFormatter DURATION_FORMATTER=new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter();
  public static String format(  Date start){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,(ReadablePeriod)new Period(new DateTime(start),new DateTime()));
    return result.toString();
  }
  public static String format(  Date start,  Date end){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end)));
    return result.toString();
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.util.Date;
import org.joda.time.DateTime;
import org.joda.time.Period;
import org.joda.time.ReadablePeriod;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime35 {
  private final static PeriodFormatter DURATION_FORMATTER=new PeriodFormatterBuilder().appendYears().appendSuffix("year","years").appendSeparator(" ").appendMonths().appendSuffix("month","months").appendSeparator(" ").appendDays().appendSuffix("day","days").appendSeparator(" ").appendHours().appendSuffix("hour","hours").appendSeparator(" ").appendMinutes().appendSuffix("minute","minutes").appendSeparator(" ").appendSeconds().appendSuffix("second","seconds").toFormatter();
  public static String format(  Date start){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,(ReadablePeriod)new Period(new DateTime(start),new DateTime()));
    return result.toString();
  }
  public static String format(  Date start,  Date end){
    StringBuffer result=new StringBuffer();
    DURATION_FORMATTER.printTo(result,new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end)));
    return result.toString();
  }
}

Cannot find matching typeVariable for: Date start
Did not find solution for node: Date start with type Type61
Did not find solution for node: Date with type Type61
Did not find solution for node: Date with type Type61
Did not find solution for node: start with type Type61
Cannot find matching typeVariable for: Date end
Did not find solution for node: Date end with type Type61
Did not find solution for node: Date with type Type61
Did not find solution for node: Date with type Type61
Did not find solution for node: end with type Type61
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
Cannot find matching typeVariable for: result=new StringBuffer()
For node: result=new StringBuffer() expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: result expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: new StringBuffer() expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: StringBuffer expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
For node: DURATION_FORMATTER.printTo(result,new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end))) expected fqn: void with type: Type84 got: void
For node: DURATION_FORMATTER expected fqn: org.joda.time.format.PeriodFormatter with type: Type3 got: org.joda.time.format.PeriodFormatter
Cannot find matching typeVariable for: printTo
For node: printTo expected fqn: void with type: Type84 got: void
For node: result expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
Did not find solution for node: new Period(new DateTime(start),end == null ? new DateTime() : new DateTime(end)) with type Type65
Did not find solution for node: Period with type Type65
Did not find solution for node: Period with type Type65
Did not find solution for node: new DateTime(start) with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: start with type Type61
Did not find solution for node: end == null ? new DateTime() : new DateTime(end) with type Type80
For node: end == null expected fqn: boolean with type: Type79 got: boolean
Did not find solution for node: end with type Type61
Did not find solution for node: null with type Type78
Did not find solution for node: new DateTime() with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: new DateTime(end) with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: DateTime with type Type66
Did not find solution for node: end with type Type61
For node: result.toString() expected fqn: java.lang.String with type: Type88 got: java.lang.String
For node: result expected fqn: java.lang.StringBuffer with type: Type62 got: java.lang.StringBuffer
Cannot find matching typeVariable for: toString
For node: toString expected fqn: java.lang.String with type: Type88 got: java.lang.String
{Checked=136, Analyzed=61, Unsolved=75, Incorrect=0, Correct=61}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleName: {Checked=24, Analyzed=14, Unsolved=10, Incorrect=0, Correct=14}
java=SimpleType: {Checked=9, Analyzed=6, Unsolved=3, Incorrect=0, Correct=6}
java=SingleVariableDeclaration: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=17, Analyzed=17, Unsolved=0, Incorrect=0, Correct=17}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=ClassInstanceCreation: {Checked=8, Analyzed=1, Unsolved=7, Incorrect=0, Correct=1}
org.joda.time.=ConditionalExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=MethodInvocation: {Checked=18, Analyzed=2, Unsolved=16, Incorrect=0, Correct=2}
org.joda.time.=SimpleName: {Checked=31, Analyzed=7, Unsolved=24, Incorrect=0, Correct=7}
org.joda.time.=SimpleType: {Checked=10, Analyzed=2, Unsolved=8, Incorrect=0, Correct=2}
org.joda.time.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
Total stats
{Checked=136, Analyzed=61, Unsolved=75, Incorrect=0, Correct=61}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleName: {Checked=24, Analyzed=14, Unsolved=10, Incorrect=0, Correct=14}
java=SimpleType: {Checked=9, Analyzed=6, Unsolved=3, Incorrect=0, Correct=6}
java=SingleVariableDeclaration: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=17, Analyzed=17, Unsolved=0, Incorrect=0, Correct=17}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=ClassInstanceCreation: {Checked=8, Analyzed=1, Unsolved=7, Incorrect=0, Correct=1}
org.joda.time.=ConditionalExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=MethodInvocation: {Checked=18, Analyzed=2, Unsolved=16, Incorrect=0, Correct=2}
org.joda.time.=SimpleName: {Checked=31, Analyzed=7, Unsolved=24, Incorrect=0, Correct=7}
org.joda.time.=SimpleType: {Checked=10, Analyzed=2, Unsolved=8, Incorrect=0, Correct=2}
org.joda.time.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
,SimpleName,0,1,0,0,1
boolean,InfixExpression,1,1,1,0,0
java,ClassInstanceCreation,2,2,2,0,0
java,MethodInvocation,2,2,2,0,0
java,SimpleName,14,24,14,0,10
java,SimpleType,6,9,6,0,3
java,SingleVariableDeclaration,0,3,0,0,3
java,StringLiteral,17,17,17,0,0
java,VariableDeclarationFragment,2,2,2,0,0
null,NullLiteral,0,1,0,0,1
org.joda.time.,CastExpression,0,1,0,0,1
org.joda.time.,ClassInstanceCreation,1,8,1,0,7
org.joda.time.,ConditionalExpression,0,1,0,0,1
org.joda.time.,MethodInvocation,2,18,2,0,16
org.joda.time.,SimpleName,7,31,7,0,24
org.joda.time.,SimpleType,2,10,2,0,8
org.joda.time.,VariableDeclarationFragment,1,1,1,0,0
void,MethodInvocation,2,2,2,0,0
void,SimpleName,2,2,2,0,0
