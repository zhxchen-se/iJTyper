echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime36.java
Expect check=31
Cannot find matching typeVariable for: public class JodaTime36 {
  public static void main(  String[] args){
    PeriodFormatter pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter();
    Period period=pf.parsePeriod("PT01H00M");
  }
}

Cannot find matching typeVariable for: JodaTime36
Cannot find matching typeVariable for: public class JodaTime36 {
  public static void main(  String[] args){
    PeriodFormatter pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter();
    Period period=pf.parsePeriod("PT01H00M");
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Period;
import org.joda.time.format.ISOPeriodFormat;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime36 {
  public static void main(  String[] args){
    PeriodFormatter pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter();
    Period period=pf.parsePeriod("PT01H00M");
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
  PeriodFormatter pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter();
  Period period=pf.parsePeriod("PT01H00M");
}

Cannot find matching typeVariable for: public class JodaTime36 {
  public static void main(  String[] args){
    PeriodFormatter pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter();
    Period period=pf.parsePeriod("PT01H00M");
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Period;
import org.joda.time.format.ISOPeriodFormat;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime36 {
  public static void main(  String[] args){
    PeriodFormatter pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter();
    Period period=pf.parsePeriod("PT01H00M");
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: PeriodFormatter expected fqn: org.joda.time.format.PeriodFormatter with type: Type5 got: org.joda.time.format.PeriodFormatter
For node: PeriodFormatter expected fqn: org.joda.time.format.PeriodFormatter with type: Type5 got: org.joda.time.format.PeriodFormatter
Cannot find matching typeVariable for: pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter()
For node: pf=new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter() expected fqn: org.joda.time.format.PeriodFormatter with type: Type5 got: org.joda.time.format.PeriodFormatter
For node: pf expected fqn: org.joda.time.format.PeriodFormatter with type: Type5 got: org.joda.time.format.PeriodFormatter
For node: new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()).toFormatter() expected fqn: org.joda.time.format.PeriodFormatter with type: Type14 got: org.joda.time.format.PeriodFormatter
For node: new PeriodFormatterBuilder().append(ISOPeriodFormat.standard()) expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type11 got: org.joda.time.format.PeriodFormatterBuilder
For node: new PeriodFormatterBuilder() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type6 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type6 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type6 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: append
For node: append expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type11 got: org.joda.time.format.PeriodFormatterBuilder
For node: ISOPeriodFormat.standard() expected fqn: org.joda.time.format.PeriodFormatter with type: Type9 got: org.joda.time.format.PeriodFormatter
For node: ISOPeriodFormat expected fqn: org.joda.time.format.ISOPeriodFormat with type: Type8 got: org.joda.time.format.ISOPeriodFormat
Cannot find matching typeVariable for: standard
For node: standard expected fqn: org.joda.time.format.PeriodFormatter with type: Type9 got: org.joda.time.format.PeriodFormatter
Cannot find matching typeVariable for: toFormatter
For node: toFormatter expected fqn: org.joda.time.format.PeriodFormatter with type: Type14 got: org.joda.time.format.PeriodFormatter
For node: Period expected fqn: org.joda.time.Period with type: Type16 got: org.joda.time.Period
For node: Period expected fqn: org.joda.time.Period with type: Type16 got: org.joda.time.Period
Cannot find matching typeVariable for: period=pf.parsePeriod("PT01H00M")
For node: period=pf.parsePeriod("PT01H00M") expected fqn: org.joda.time.Period with type: Type16 got: org.joda.time.Period
For node: period expected fqn: org.joda.time.Period with type: Type16 got: org.joda.time.Period
For node: pf.parsePeriod("PT01H00M") expected fqn: org.joda.time.Period with type: Type18 got: org.joda.time.Period
For node: pf expected fqn: org.joda.time.format.PeriodFormatter with type: Type5 got: org.joda.time.format.PeriodFormatter
Cannot find matching typeVariable for: parsePeriod
For node: parsePeriod expected fqn: org.joda.time.Period with type: Type18 got: org.joda.time.Period
For node: "PT01H00M" expected fqn: java.lang.String with type: Type17 got: java.lang.String
{Checked=28, Analyzed=28, Unsolved=0, Incorrect=0, Correct=28}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=MethodInvocation: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
org.joda.time.=SimpleName: {Checked=11, Analyzed=11, Unsolved=0, Incorrect=0, Correct=11}
org.joda.time.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.joda.time.=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=28, Analyzed=28, Unsolved=0, Incorrect=0, Correct=28}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=MethodInvocation: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
org.joda.time.=SimpleName: {Checked=11, Analyzed=11, Unsolved=0, Incorrect=0, Correct=11}
org.joda.time.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.joda.time.=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java,ArrayType,1,1,1,0,0
java,SimpleName,2,2,2,0,0
java,SimpleType,1,1,1,0,0
java,SingleVariableDeclaration,1,1,1,0,0
java,StringLiteral,1,1,1,0,0
org.joda.time.,ClassInstanceCreation,1,1,1,0,0
org.joda.time.,MethodInvocation,4,4,4,0,0
org.joda.time.,SimpleName,11,11,11,0,0
org.joda.time.,SimpleType,3,3,3,0,0
org.joda.time.,VariableDeclarationFragment,2,2,2,0,0
void,PrimitiveType,1,1,1,0,0
