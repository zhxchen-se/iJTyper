echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /api-resolution/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime06.java
Expect check=67
Cannot find matching typeVariable for: public class JodaTime06 {
  public static void main(  String[] args){
    printDuration(new Duration(5000));
    printDuration(new Duration(4900));
    printDuration(new Duration(1000));
    printDuration(new Duration(900));
    printDuration(new Duration(0));
  }
  static void printDuration(  Duration d){
    System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
  }
}

Cannot find matching typeVariable for: JodaTime06
Cannot find matching typeVariable for: public class JodaTime06 {
  public static void main(  String[] args){
    printDuration(new Duration(5000));
    printDuration(new Duration(4900));
    printDuration(new Duration(1000));
    printDuration(new Duration(900));
    printDuration(new Duration(0));
  }
  static void printDuration(  Duration d){
    System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Duration;
import org.joda.time.PeriodType;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime06 {
  public static void main(  String[] args){
    printDuration(new Duration(5000));
    printDuration(new Duration(4900));
    printDuration(new Duration(1000));
    printDuration(new Duration(900));
    printDuration(new Duration(0));
  }
  static void printDuration(  Duration d){
    System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
  printDuration(new Duration(5000));
  printDuration(new Duration(4900));
  printDuration(new Duration(1000));
  printDuration(new Duration(900));
  printDuration(new Duration(0));
}

Cannot find matching typeVariable for: public class JodaTime06 {
  public static void main(  String[] args){
    printDuration(new Duration(5000));
    printDuration(new Duration(4900));
    printDuration(new Duration(1000));
    printDuration(new Duration(900));
    printDuration(new Duration(0));
  }
  static void printDuration(  Duration d){
    System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Duration;
import org.joda.time.PeriodType;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime06 {
  public static void main(  String[] args){
    printDuration(new Duration(5000));
    printDuration(new Duration(4900));
    printDuration(new Duration(1000));
    printDuration(new Duration(900));
    printDuration(new Duration(0));
  }
  static void printDuration(  Duration d){
    System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: printDuration(new Duration(5000)) expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: printDuration
For node: printDuration expected fqn: void with type: Type2 got: void
For node: new Duration(5000) expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: 5000 expected fqn: int with type: Type6 got: short
For node: printDuration(new Duration(4900)) expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: printDuration
For node: printDuration expected fqn: void with type: Type2 got: void
For node: new Duration(4900) expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: 4900 expected fqn: int with type: Type6 got: short
For node: printDuration(new Duration(1000)) expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: printDuration
For node: printDuration expected fqn: void with type: Type2 got: void
For node: new Duration(1000) expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: 1000 expected fqn: int with type: Type6 got: short
For node: printDuration(new Duration(900)) expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: printDuration
For node: printDuration expected fqn: void with type: Type2 got: void
For node: new Duration(900) expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: 900 expected fqn: int with type: Type6 got: short
For node: printDuration(new Duration(0)) expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: printDuration
For node: printDuration expected fqn: void with type: Type2 got: void
For node: new Duration(0) expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: 0 expected fqn: int with type: Type9 got: byte
For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: printDuration
Cannot find matching typeVariable for: static void printDuration(Duration d){
  System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
}

Cannot find matching typeVariable for: public class JodaTime06 {
  public static void main(  String[] args){
    printDuration(new Duration(5000));
    printDuration(new Duration(4900));
    printDuration(new Duration(1000));
    printDuration(new Duration(900));
    printDuration(new Duration(0));
  }
  static void printDuration(  Duration d){
    System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Duration;
import org.joda.time.PeriodType;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime06 {
  public static void main(  String[] args){
    printDuration(new Duration(5000));
    printDuration(new Duration(4900));
    printDuration(new Duration(1000));
    printDuration(new Duration(900));
    printDuration(new Duration(0));
  }
  static void printDuration(  Duration d){
    System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()));
  }
}

Cannot find matching typeVariable for: Duration d
For node: Duration d expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: Duration expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: d expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
For node: System.out.println(d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter())) expected fqn: void with type: Type31 got: void
Cannot find matching typeVariable for: System.out
For node: System.out expected fqn: java.io.PrintStream with type: Type31 got: void
Did not find solution for node: System with type Type29
For node: out expected fqn: java.io.PrintStream with type: Type30 got: java.io.PrintWriter
Cannot find matching typeVariable for: println
For node: println expected fqn: void with type: Type31 got: void
Did not find solution for node: d.toPeriod(PeriodType.time()).toString(new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter()) with type Type26
Did not find solution for node: d.toPeriod(PeriodType.time()) with type Type15
For node: d expected fqn: org.joda.time.Duration with type: Type5 got: org.joda.time.Duration
Cannot find matching typeVariable for: toPeriod
Did not find solution for node: toPeriod with type Type15
Did not find solution for node: PeriodType.time() with type Type13
Did not find solution for node: PeriodType with type Type12
Cannot find matching typeVariable for: time
Did not find solution for node: time with type Type13
Cannot find matching typeVariable for: toString
Did not find solution for node: toString with type Type26
For node: new PeriodFormatterBuilder().printZeroAlways().appendSeconds().toFormatter() expected fqn: org.joda.time.format.PeriodFormatter with type: Type24 got: org.joda.time.format.PeriodFormatter
For node: new PeriodFormatterBuilder().printZeroAlways().appendSeconds() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type22 got: org.joda.time.format.PeriodFormatterBuilder
For node: new PeriodFormatterBuilder().printZeroAlways() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type20 got: org.joda.time.format.PeriodFormatterBuilder
For node: new PeriodFormatterBuilder() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type18 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type18 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type18 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: printZeroAlways
For node: printZeroAlways expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type20 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: appendSeconds
For node: appendSeconds expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type22 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: toFormatter
For node: toFormatter expected fqn: org.joda.time.format.PeriodFormatter with type: Type24 got: org.joda.time.format.PeriodFormatter
{Checked=63, Analyzed=55, Unsolved=8, Incorrect=7, Correct=48}
int=NumberLiteral: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=5, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=1, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=ClassInstanceCreation: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
org.joda.time.=MethodInvocation: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=0, Correct=3}
org.joda.time.=SimpleName: {Checked=15, Analyzed=12, Unsolved=3, Incorrect=0, Correct=12}
org.joda.time.=SimpleType: {Checked=7, Analyzed=7, Unsolved=0, Incorrect=0, Correct=7}
org.joda.time.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
Total stats
{Checked=63, Analyzed=55, Unsolved=8, Incorrect=7, Correct=48}
int=NumberLiteral: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=5, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=1, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=ClassInstanceCreation: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
org.joda.time.=MethodInvocation: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=0, Correct=3}
org.joda.time.=SimpleName: {Checked=15, Analyzed=12, Unsolved=3, Incorrect=0, Correct=12}
org.joda.time.=SimpleType: {Checked=7, Analyzed=7, Unsolved=0, Incorrect=0, Correct=7}
org.joda.time.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
int,NumberLiteral,5,5,0,5,0
java,ArrayType,1,1,1,0,0
java,MethodInvocation,0,1,0,0,1
java,QualifiedName,1,1,0,1,0
java,SimpleName,3,5,2,1,2
java,SimpleType,1,1,1,0,0
java,SingleVariableDeclaration,1,1,1,0,0
org.joda.time.,ClassInstanceCreation,6,6,6,0,0
org.joda.time.,MethodInvocation,3,5,3,0,2
org.joda.time.,SimpleName,12,15,12,0,3
org.joda.time.,SimpleType,7,7,7,0,0
org.joda.time.,SingleVariableDeclaration,1,1,1,0,0
void,MethodInvocation,6,6,6,0,0
void,PrimitiveType,2,2,2,0,0
void,SimpleName,6,6,6,0,0
