echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime42.java
Expect check=60
Cannot find matching typeVariable for: public class JodaTime42 {
  public static final int JANUARY=1;
  public static final int DECEMBER=12;
  public static final int FIRST_OF_THE_MONTH=1;
  public final int getLastDayOfMonth(  final int month,  final int year){
    int lastDay=0;
    if ((month >= JANUARY) && (month <= DECEMBER)) {
      LocalDate aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH);
      lastDay=aDate.dayOfMonth().getMaximumValue();
    }
    return lastDay;
  }
  public static void main(  String[] args){
  }
}

Did not find solution for node: JodaTime42 with type Type1
Did not find solution for node: int with type Type3
Cannot find matching typeVariable for: JANUARY=1
Did not find solution for node: JANUARY=1 with type Type3
Did not find solution for node: JANUARY with type Type3
For node: 1 expected fqn: int with type: Type4 got: byte
Did not find solution for node: int with type Type3
Cannot find matching typeVariable for: DECEMBER=12
Did not find solution for node: DECEMBER=12 with type Type3
Did not find solution for node: DECEMBER with type Type3
For node: 12 expected fqn: int with type: Type4 got: byte
Did not find solution for node: int with type Type3
Cannot find matching typeVariable for: FIRST_OF_THE_MONTH=1
Did not find solution for node: FIRST_OF_THE_MONTH=1 with type Type3
Did not find solution for node: FIRST_OF_THE_MONTH with type Type3
For node: 1 expected fqn: int with type: Type4 got: byte
Did not find solution for node: int with type Type3
Cannot find matching typeVariable for: getLastDayOfMonth
Cannot find matching typeVariable for: public final int getLastDayOfMonth(final int month,final int year){
  int lastDay=0;
  if ((month >= JANUARY) && (month <= DECEMBER)) {
    LocalDate aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH);
    lastDay=aDate.dayOfMonth().getMaximumValue();
  }
  return lastDay;
}

Cannot find matching typeVariable for: public class JodaTime42 {
  public static final int JANUARY=1;
  public static final int DECEMBER=12;
  public static final int FIRST_OF_THE_MONTH=1;
  public final int getLastDayOfMonth(  final int month,  final int year){
    int lastDay=0;
    if ((month >= JANUARY) && (month <= DECEMBER)) {
      LocalDate aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH);
      lastDay=aDate.dayOfMonth().getMaximumValue();
    }
    return lastDay;
  }
  public static void main(  String[] args){
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.LocalDate;
public class JodaTime42 {
  public static final int JANUARY=1;
  public static final int DECEMBER=12;
  public static final int FIRST_OF_THE_MONTH=1;
  public final int getLastDayOfMonth(  final int month,  final int year){
    int lastDay=0;
    if ((month >= JANUARY) && (month <= DECEMBER)) {
      LocalDate aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH);
      lastDay=aDate.dayOfMonth().getMaximumValue();
    }
    return lastDay;
  }
  public static void main(  String[] args){
  }
}

Cannot find matching typeVariable for: final int month
Did not find solution for node: final int month with type Type3
Did not find solution for node: int with type Type3
Did not find solution for node: month with type Type3
Cannot find matching typeVariable for: final int year
Did not find solution for node: final int year with type Type3
Did not find solution for node: int with type Type3
Did not find solution for node: year with type Type3
Did not find solution for node: int with type Type3
Cannot find matching typeVariable for: lastDay=0
Did not find solution for node: lastDay=0 with type Type3
Did not find solution for node: lastDay with type Type3
For node: 0 expected fqn: int with type: Type4 got: byte
For node: (month >= JANUARY) && (month <= DECEMBER) expected fqn: boolean with type: Type5 got: boolean
For node: (month >= JANUARY) expected fqn: boolean with type: Type5 got: boolean
For node: month >= JANUARY expected fqn: boolean with type: Type5 got: boolean
Did not find solution for node: month with type Type3
Did not find solution for node: JANUARY with type Type3
For node: (month <= DECEMBER) expected fqn: boolean with type: Type5 got: boolean
For node: month <= DECEMBER expected fqn: boolean with type: Type5 got: boolean
Did not find solution for node: month with type Type3
Did not find solution for node: DECEMBER with type Type3
Did not find solution for node: LocalDate with type Type6
Did not find solution for node: LocalDate with type Type6
Cannot find matching typeVariable for: aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH)
Did not find solution for node: aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH) with type Type6
Did not find solution for node: aDate with type Type6
Did not find solution for node: new LocalDate(year,month,FIRST_OF_THE_MONTH) with type Type6
Did not find solution for node: LocalDate with type Type6
Did not find solution for node: LocalDate with type Type6
Did not find solution for node: year with type Type3
Did not find solution for node: month with type Type3
Did not find solution for node: FIRST_OF_THE_MONTH with type Type3
Did not find solution for node: lastDay=aDate.dayOfMonth().getMaximumValue() with type Type3
Did not find solution for node: lastDay with type Type3
For node: aDate.dayOfMonth().getMaximumValue() expected fqn: int with type: Type13 got: int
Did not find solution for node: aDate.dayOfMonth() with type Type11
Did not find solution for node: aDate with type Type6
Cannot find matching typeVariable for: dayOfMonth
Did not find solution for node: dayOfMonth with type Type11
Cannot find matching typeVariable for: getMaximumValue
For node: getMaximumValue expected fqn: int with type: Type13 got: int
Did not find solution for node: lastDay with type Type3
Did not find solution for node: void with type Type2
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
}

Cannot find matching typeVariable for: public class JodaTime42 {
  public static final int JANUARY=1;
  public static final int DECEMBER=12;
  public static final int FIRST_OF_THE_MONTH=1;
  public final int getLastDayOfMonth(  final int month,  final int year){
    int lastDay=0;
    if ((month >= JANUARY) && (month <= DECEMBER)) {
      LocalDate aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH);
      lastDay=aDate.dayOfMonth().getMaximumValue();
    }
    return lastDay;
  }
  public static void main(  String[] args){
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.LocalDate;
public class JodaTime42 {
  public static final int JANUARY=1;
  public static final int DECEMBER=12;
  public static final int FIRST_OF_THE_MONTH=1;
  public final int getLastDayOfMonth(  final int month,  final int year){
    int lastDay=0;
    if ((month >= JANUARY) && (month <= DECEMBER)) {
      LocalDate aDate=new LocalDate(year,month,FIRST_OF_THE_MONTH);
      lastDay=aDate.dayOfMonth().getMaximumValue();
    }
    return lastDay;
  }
  public static void main(  String[] args){
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type16 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type16 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type15 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type15 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type16 got: java.lang.String[]
{Checked=57, Analyzed=16, Unsolved=41, Incorrect=4, Correct=12}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
boolean=ParenthesizedExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=4, Correct=0}
int=PrimitiveType: {Checked=7, Analyzed=0, Unsolved=7, Incorrect=0, Correct=0}
int=SimpleName: {Checked=16, Analyzed=1, Unsolved=15, Incorrect=0, Correct=1}
int=SingleVariableDeclaration: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
int=VariableDeclarationFragment: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=SimpleName: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
org.joda.time.=SimpleType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
org.joda.time.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
Total stats
{Checked=57, Analyzed=16, Unsolved=41, Incorrect=4, Correct=12}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
boolean=ParenthesizedExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=4, Correct=0}
int=PrimitiveType: {Checked=7, Analyzed=0, Unsolved=7, Incorrect=0, Correct=0}
int=SimpleName: {Checked=16, Analyzed=1, Unsolved=15, Incorrect=0, Correct=1}
int=SingleVariableDeclaration: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
int=VariableDeclarationFragment: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.joda.time.=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
org.joda.time.=SimpleName: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
org.joda.time.=SimpleType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
org.joda.time.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
,SimpleName,0,1,0,0,1
boolean,InfixExpression,3,3,3,0,0
boolean,ParenthesizedExpression,2,2,2,0,0
int,Assignment,0,1,0,0,1
int,MethodInvocation,1,1,1,0,0
int,NumberLiteral,4,4,0,4,0
int,PrimitiveType,0,7,0,0,7
int,SimpleName,1,16,1,0,15
int,SingleVariableDeclaration,0,2,0,0,2
int,VariableDeclarationFragment,0,4,0,0,4
java,ArrayType,1,1,1,0,0
java,SimpleName,2,2,2,0,0
java,SimpleType,1,1,1,0,0
java,SingleVariableDeclaration,1,1,1,0,0
org.joda.time.,ClassInstanceCreation,0,1,0,0,1
org.joda.time.,MethodInvocation,0,1,0,0,1
org.joda.time.,SimpleName,0,5,0,0,5
org.joda.time.,SimpleType,0,2,0,0,2
org.joda.time.,VariableDeclarationFragment,0,1,0,0,1
void,PrimitiveType,0,1,0,0,1
