echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime03.java
Expect check=87
Cannot find matching typeVariable for: public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Cannot find matching typeVariable for: JodaTime03
Cannot find matching typeVariable for: public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Interval;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

For node: void expected fqn: void with type: Type3 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
}

Cannot find matching typeVariable for: public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Interval;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type5 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type5 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type5 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
Cannot find matching typeVariable for: formatDuration
Cannot find matching typeVariable for: public static String formatDuration(long start,long end){
  Interval interval=new Interval(start,end);
  return getPeriodFormatter().print(interval.toPeriod()).trim();
}

Cannot find matching typeVariable for: public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Interval;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Cannot find matching typeVariable for: long start
Did not find solution for node: long start with type Type6
Did not find solution for node: long with type Type6
Did not find solution for node: start with type Type6
Cannot find matching typeVariable for: long end
Did not find solution for node: long end with type Type6
Did not find solution for node: long with type Type6
Did not find solution for node: end with type Type6
Did not find solution for node: Interval with type Type7
Did not find solution for node: Interval with type Type7
Cannot find matching typeVariable for: interval=new Interval(start,end)
Did not find solution for node: interval=new Interval(start,end) with type Type7
Did not find solution for node: interval with type Type7
Did not find solution for node: new Interval(start,end) with type Type7
Did not find solution for node: Interval with type Type7
Did not find solution for node: Interval with type Type7
Did not find solution for node: start with type Type6
Did not find solution for node: end with type Type6
For node: getPeriodFormatter().print(interval.toPeriod()).trim() expected fqn: java.lang.String with type: Type16 got: java.lang.String
Did not find solution for node: getPeriodFormatter().print(interval.toPeriod()) with type Type13
Did not find solution for node: getPeriodFormatter() with type Type4
Cannot find matching typeVariable for: getPeriodFormatter
Did not find solution for node: getPeriodFormatter with type Type4
Cannot find matching typeVariable for: print
Did not find solution for node: print with type Type13
Did not find solution for node: interval.toPeriod() with type Type11
Did not find solution for node: interval with type Type7
Cannot find matching typeVariable for: toPeriod
Did not find solution for node: toPeriod with type Type11
Cannot find matching typeVariable for: trim
For node: trim expected fqn: java.lang.String with type: Type16 got: java.lang.String
Did not find solution for node: PeriodFormatter with type Type4
Did not find solution for node: PeriodFormatter with type Type4
Cannot find matching typeVariable for: getPeriodFormatter
Cannot find matching typeVariable for: private static PeriodFormatter getPeriodFormatter(){
  PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
  return pf;
}

Cannot find matching typeVariable for: public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Interval;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime03 {
  public static void main(  String[] args){
  }
  public static String formatDuration(  long start,  long end){
    Interval interval=new Interval(start,end);
    return getPeriodFormatter().print(interval.toPeriod()).trim();
  }
  private static PeriodFormatter getPeriodFormatter(){
    PeriodFormatter pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter();
    return pf;
  }
}

Did not find solution for node: PeriodFormatter with type Type4
Did not find solution for node: PeriodFormatter with type Type4
Cannot find matching typeVariable for: pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter()
Did not find solution for node: pf=new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter() with type Type4
Did not find solution for node: pf with type Type4
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ").toFormatter() with type Type59
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds().appendSuffix("s ","s ") with type Type55
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ").appendSeconds() with type Type53
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes().appendSuffix("m ","m ") with type Type49
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ").appendMinutes() with type Type47
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours().appendSuffix("h ","h ") with type Type43
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ").appendHours() with type Type41
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays().appendSuffix("d ","d ") with type Type37
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ").appendDays() with type Type35
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths().appendSuffix("m","m ") with type Type31
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ").appendMonths() with type Type29
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears().appendSuffix("y ","y ") with type Type25
Did not find solution for node: new PeriodFormatterBuilder().printZeroRarelyFirst().appendYears() with type Type22
For node: new PeriodFormatterBuilder().printZeroRarelyFirst() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type20 got: org.joda.time.format.PeriodFormatterBuilder
For node: new PeriodFormatterBuilder() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type18 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type18 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type18 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: printZeroRarelyFirst
For node: printZeroRarelyFirst expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type20 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: appendYears
Did not find solution for node: appendYears with type Type22
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type25
Did not find solution for node: "y " with type Type24
Did not find solution for node: "y " with type Type24
Cannot find matching typeVariable for: appendMonths
Did not find solution for node: appendMonths with type Type29
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type31
Did not find solution for node: "m" with type Type24
Did not find solution for node: "m " with type Type24
Cannot find matching typeVariable for: appendDays
Did not find solution for node: appendDays with type Type35
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type37
Did not find solution for node: "d " with type Type24
Did not find solution for node: "d " with type Type24
Cannot find matching typeVariable for: appendHours
Did not find solution for node: appendHours with type Type41
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type43
Did not find solution for node: "h " with type Type24
Did not find solution for node: "h " with type Type24
Cannot find matching typeVariable for: appendMinutes
Did not find solution for node: appendMinutes with type Type47
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type49
Did not find solution for node: "m " with type Type24
Did not find solution for node: "m " with type Type24
Cannot find matching typeVariable for: appendSeconds
Did not find solution for node: appendSeconds with type Type53
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type55
Did not find solution for node: "s " with type Type24
Did not find solution for node: "s " with type Type24
Cannot find matching typeVariable for: toFormatter
Did not find solution for node: toFormatter with type Type59
Did not find solution for node: pf with type Type4
{Checked=82, Analyzed=15, Unsolved=67, Incorrect=0, Correct=15}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
java=SimpleName: {Checked=5, Analyzed=4, Unsolved=1, Incorrect=0, Correct=4}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=StringLiteral: {Checked=12, Analyzed=0, Unsolved=12, Incorrect=0, Correct=0}
long=PrimitiveType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
long=SimpleName: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
long=SingleVariableDeclaration: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
org.joda.time.=ClassInstanceCreation: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
org.joda.time.=MethodInvocation: {Checked=16, Analyzed=1, Unsolved=15, Incorrect=0, Correct=1}
org.joda.time.=SimpleName: {Checked=25, Analyzed=2, Unsolved=23, Incorrect=0, Correct=2}
org.joda.time.=SimpleType: {Checked=5, Analyzed=1, Unsolved=4, Incorrect=0, Correct=1}
org.joda.time.=VariableDeclarationFragment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=82, Analyzed=15, Unsolved=67, Incorrect=0, Correct=15}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
java=SimpleName: {Checked=5, Analyzed=4, Unsolved=1, Incorrect=0, Correct=4}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=StringLiteral: {Checked=12, Analyzed=0, Unsolved=12, Incorrect=0, Correct=0}
long=PrimitiveType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
long=SimpleName: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
long=SingleVariableDeclaration: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
org.joda.time.=ClassInstanceCreation: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
org.joda.time.=MethodInvocation: {Checked=16, Analyzed=1, Unsolved=15, Incorrect=0, Correct=1}
org.joda.time.=SimpleName: {Checked=25, Analyzed=2, Unsolved=23, Incorrect=0, Correct=2}
org.joda.time.=SimpleType: {Checked=5, Analyzed=1, Unsolved=4, Incorrect=0, Correct=1}
org.joda.time.=VariableDeclarationFragment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java,ArrayType,1,1,1,0,0
java,MethodInvocation,1,2,1,0,1
java,SimpleName,4,5,4,0,1
java,SimpleType,2,2,2,0,0
java,SingleVariableDeclaration,1,1,1,0,0
java,StringLiteral,0,12,0,0,12
long,PrimitiveType,0,2,0,0,2
long,SimpleName,0,4,0,0,4
long,SingleVariableDeclaration,0,2,0,0,2
org.joda.time.,ClassInstanceCreation,1,2,1,0,1
org.joda.time.,MethodInvocation,1,16,1,0,15
org.joda.time.,SimpleName,2,25,2,0,23
org.joda.time.,SimpleType,1,5,1,0,4
org.joda.time.,VariableDeclarationFragment,0,2,0,0,2
void,PrimitiveType,1,1,1,0,0
