echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/gwt_class_36.java
Expect check=111
Cannot find matching typeVariable for: public class gwt_class_36 {
  public static void main(  String arg[]){
    int width=200;
    int height=200;
    int overHeight=40;
    AbsolutePanel absPanel=new AbsolutePanel();
    absPanel.setSize(width + "px",height + "px");
    SimplePanel underPanel=new SimplePanel();
    underPanel.setWidth(width + "px");
    underPanel.setHeight(height + "px");
    underPanel.getElement().getStyle().setBackgroundColor("red");
    SimplePanel overPanel=new SimplePanel();
    overPanel.setWidth(width + "px");
    overPanel.setHeight(overHeight + "px");
    overPanel.getElement().getStyle().setBackgroundColor("black");
    overPanel.getElement().getStyle().setProperty("filter","alpha(opacity=20)");
    absPanel.add(underPanel,0,0);
    absPanel.add(overPanel,0,0);
    RootPanel.get("test").add(absPanel);
    absPanel.getElement().getStyle().setProperty("filter","alpha(opacity=100)");
  }
}

Cannot find matching typeVariable for: gwt_class_36
Cannot find matching typeVariable for: public class gwt_class_36 {
  public static void main(  String arg[]){
    int width=200;
    int height=200;
    int overHeight=40;
    AbsolutePanel absPanel=new AbsolutePanel();
    absPanel.setSize(width + "px",height + "px");
    SimplePanel underPanel=new SimplePanel();
    underPanel.setWidth(width + "px");
    underPanel.setHeight(height + "px");
    underPanel.getElement().getStyle().setBackgroundColor("red");
    SimplePanel overPanel=new SimplePanel();
    overPanel.setWidth(width + "px");
    overPanel.setHeight(overHeight + "px");
    overPanel.getElement().getStyle().setBackgroundColor("black");
    overPanel.getElement().getStyle().setProperty("filter","alpha(opacity=20)");
    absPanel.add(underPanel,0,0);
    absPanel.add(overPanel,0,0);
    RootPanel.get("test").add(absPanel);
    absPanel.getElement().getStyle().setProperty("filter","alpha(opacity=100)");
  }
}

Cannot find matching typeVariable for: import com.google.gwt.user.client.ui.AbsolutePanel;
import com.google.gwt.user.client.ui.RootPanel;
import com.google.gwt.user.client.ui.SimplePanel;
public class gwt_class_36 {
  public static void main(  String arg[]){
    int width=200;
    int height=200;
    int overHeight=40;
    AbsolutePanel absPanel=new AbsolutePanel();
    absPanel.setSize(width + "px",height + "px");
    SimplePanel underPanel=new SimplePanel();
    underPanel.setWidth(width + "px");
    underPanel.setHeight(height + "px");
    underPanel.getElement().getStyle().setBackgroundColor("red");
    SimplePanel overPanel=new SimplePanel();
    overPanel.setWidth(width + "px");
    overPanel.setHeight(overHeight + "px");
    overPanel.getElement().getStyle().setBackgroundColor("black");
    overPanel.getElement().getStyle().setProperty("filter","alpha(opacity=20)");
    absPanel.add(underPanel,0,0);
    absPanel.add(overPanel,0,0);
    RootPanel.get("test").add(absPanel);
    absPanel.getElement().getStyle().setProperty("filter","alpha(opacity=100)");
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String arg[]){
  int width=200;
  int height=200;
  int overHeight=40;
  AbsolutePanel absPanel=new AbsolutePanel();
  absPanel.setSize(width + "px",height + "px");
  SimplePanel underPanel=new SimplePanel();
  underPanel.setWidth(width + "px");
  underPanel.setHeight(height + "px");
  underPanel.getElement().getStyle().setBackgroundColor("red");
  SimplePanel overPanel=new SimplePanel();
  overPanel.setWidth(width + "px");
  overPanel.setHeight(overHeight + "px");
  overPanel.getElement().getStyle().setBackgroundColor("black");
  overPanel.getElement().getStyle().setProperty("filter","alpha(opacity=20)");
  absPanel.add(underPanel,0,0);
  absPanel.add(overPanel,0,0);
  RootPanel.get("test").add(absPanel);
  absPanel.getElement().getStyle().setProperty("filter","alpha(opacity=100)");
}

Cannot find matching typeVariable for: public class gwt_class_36 {
  public static void main(  String arg[]){
    int width=200;
    int height=200;
    int overHeight=40;
    AbsolutePanel absPanel=new AbsolutePanel();
    absPanel.setSize(width + "px",height + "px");
    SimplePanel underPanel=new SimplePanel();
    underPanel.setWidth(width + "px");
    underPanel.setHeight(height + "px");
    underPanel.getElement().getStyle().setBackgroundColor("red");
    SimplePanel overPanel=new SimplePanel();
    overPanel.setWidth(width + "px");
    overPanel.setHeight(overHeight + "px");
    overPanel.getElement().getStyle().setBackgroundColor("black");
    overPanel.getElement().getStyle().setProperty("filter","alpha(opacity=20)");
    absPanel.add(underPanel,0,0);
    absPanel.add(overPanel,0,0);
    RootPanel.get("test").add(absPanel);
    absPanel.getElement().getStyle().setProperty("filter","alpha(opacity=100)");
  }
}

Cannot find matching typeVariable for: import com.google.gwt.user.client.ui.AbsolutePanel;
import com.google.gwt.user.client.ui.RootPanel;
import com.google.gwt.user.client.ui.SimplePanel;
public class gwt_class_36 {
  public static void main(  String arg[]){
    int width=200;
    int height=200;
    int overHeight=40;
    AbsolutePanel absPanel=new AbsolutePanel();
    absPanel.setSize(width + "px",height + "px");
    SimplePanel underPanel=new SimplePanel();
    underPanel.setWidth(width + "px");
    underPanel.setHeight(height + "px");
    underPanel.getElement().getStyle().setBackgroundColor("red");
    SimplePanel overPanel=new SimplePanel();
    overPanel.setWidth(width + "px");
    overPanel.setHeight(overHeight + "px");
    overPanel.getElement().getStyle().setBackgroundColor("black");
    overPanel.getElement().getStyle().setProperty("filter","alpha(opacity=20)");
    absPanel.add(underPanel,0,0);
    absPanel.add(overPanel,0,0);
    RootPanel.get("test").add(absPanel);
    absPanel.getElement().getStyle().setProperty("filter","alpha(opacity=100)");
  }
}

Cannot find matching typeVariable for: String arg[]
For node: String arg[] expected fqn: java.lang.String[] with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: arg expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
Did not find solution for node: int with type Type5
Cannot find matching typeVariable for: width=200
Did not find solution for node: width=200 with type Type5
Did not find solution for node: width with type Type5
For node: 200 expected fqn: int with type: Type6 got: short
Did not find solution for node: int with type Type5
Cannot find matching typeVariable for: height=200
Did not find solution for node: height=200 with type Type5
Did not find solution for node: height with type Type5
For node: 200 expected fqn: int with type: Type6 got: short
Did not find solution for node: int with type Type5
Cannot find matching typeVariable for: overHeight=40
Did not find solution for node: overHeight=40 with type Type5
Did not find solution for node: overHeight with type Type5
Did not find solution for node: 40 with type Type7
Did not find solution for node: AbsolutePanel with type Type8
Did not find solution for node: AbsolutePanel with type Type8
Cannot find matching typeVariable for: absPanel=new AbsolutePanel()
Did not find solution for node: absPanel=new AbsolutePanel() with type Type8
Did not find solution for node: absPanel with type Type8
Did not find solution for node: new AbsolutePanel() with type Type8
Did not find solution for node: AbsolutePanel with type Type8
Did not find solution for node: AbsolutePanel with type Type8
Did not find solution for node: absPanel.setSize(width + "px",height + "px") with type Type11
Did not find solution for node: absPanel with type Type8
Cannot find matching typeVariable for: setSize
Did not find solution for node: setSize with type Type11
Did not find solution for node: width + "px" with type Type5
Did not find solution for node: width with type Type5
Did not find solution for node: "px" with type Type10
Did not find solution for node: height + "px" with type Type5
Did not find solution for node: height with type Type5
Did not find solution for node: "px" with type Type10
Did not find solution for node: SimplePanel with type Type15
Did not find solution for node: SimplePanel with type Type15
Cannot find matching typeVariable for: underPanel=new SimplePanel()
Did not find solution for node: underPanel=new SimplePanel() with type Type15
Did not find solution for node: underPanel with type Type15
Did not find solution for node: new SimplePanel() with type Type15
Did not find solution for node: SimplePanel with type Type15
Did not find solution for node: SimplePanel with type Type15
Did not find solution for node: underPanel.setWidth(width + "px") with type Type17
Did not find solution for node: underPanel with type Type15
Cannot find matching typeVariable for: setWidth
Did not find solution for node: setWidth with type Type17
Did not find solution for node: width + "px" with type Type5
Did not find solution for node: width with type Type5
Did not find solution for node: "px" with type Type10
Did not find solution for node: underPanel.setHeight(height + "px") with type Type20
Did not find solution for node: underPanel with type Type15
Cannot find matching typeVariable for: setHeight
Did not find solution for node: setHeight with type Type20
Did not find solution for node: height + "px" with type Type5
Did not find solution for node: height with type Type5
Did not find solution for node: "px" with type Type10
No match for actual type MethodInvocation: underPanel.getElement().getStyle().setBackgroundColor("red") and also not find solution for: Type27
No match for actual type MethodInvocation: underPanel.getElement().getStyle() and also not find solution for: Type25
Did not find solution for node: underPanel.getElement() with type Type23
Did not find solution for node: underPanel with type Type15
Cannot find matching typeVariable for: getElement
Did not find solution for node: getElement with type Type23
Did not find solution for node: "red" with type Type10
Did not find solution for node: SimplePanel with type Type15
Did not find solution for node: SimplePanel with type Type15
Cannot find matching typeVariable for: overPanel=new SimplePanel()
Did not find solution for node: overPanel=new SimplePanel() with type Type15
Did not find solution for node: overPanel with type Type15
Did not find solution for node: new SimplePanel() with type Type15
Did not find solution for node: SimplePanel with type Type15
Did not find solution for node: SimplePanel with type Type15
Did not find solution for node: overPanel.setWidth(width + "px") with type Type19
Did not find solution for node: overPanel with type Type15
Cannot find matching typeVariable for: setWidth
Did not find solution for node: setWidth with type Type19
Did not find solution for node: width + "px" with type Type5
Did not find solution for node: width with type Type5
Did not find solution for node: "px" with type Type10
Did not find solution for node: overPanel.setHeight(overHeight + "px") with type Type22
Did not find solution for node: overPanel with type Type15
Cannot find matching typeVariable for: setHeight
Did not find solution for node: setHeight with type Type22
Did not find solution for node: overHeight + "px" with type Type5
Did not find solution for node: overHeight with type Type5
Did not find solution for node: "px" with type Type10
No match for actual type MethodInvocation: overPanel.getElement().getStyle().setBackgroundColor("black") and also not find solution for: Type32
No match for actual type MethodInvocation: overPanel.getElement().getStyle() and also not find solution for: Type30
Did not find solution for node: overPanel.getElement() with type Type24
Did not find solution for node: overPanel with type Type15
Cannot find matching typeVariable for: getElement
Did not find solution for node: getElement with type Type24
Did not find solution for node: "black" with type Type10
No match for actual type MethodInvocation: overPanel.getElement().getStyle().setProperty("filter","alpha(opacity=20)") and also not find solution for: Type35
No match for actual type MethodInvocation: overPanel.getElement().getStyle() and also not find solution for: Type31
Did not find solution for node: overPanel.getElement() with type Type24
Did not find solution for node: overPanel with type Type15
Cannot find matching typeVariable for: getElement
Did not find solution for node: getElement with type Type24
Did not find solution for node: "filter" with type Type10
Did not find solution for node: "alpha(opacity=20)" with type Type10
Did not find solution for node: absPanel.add(underPanel,0,0) with type Type39
Did not find solution for node: absPanel with type Type8
Cannot find matching typeVariable for: add
Did not find solution for node: add with type Type39
Did not find solution for node: underPanel with type Type15
Did not find solution for node: 0 with type Type7
Did not find solution for node: 0 with type Type7
Did not find solution for node: absPanel.add(overPanel,0,0) with type Type43
Did not find solution for node: absPanel with type Type8
Cannot find matching typeVariable for: add
Did not find solution for node: add with type Type43
Did not find solution for node: overPanel with type Type15
Did not find solution for node: 0 with type Type7
Did not find solution for node: 0 with type Type7
Did not find solution for node: RootPanel.get("test").add(absPanel) with type Type48
Did not find solution for node: RootPanel.get("test") with type Type45
For node: RootPanel expected fqn: com.google.gwt.user.client.ui.RootPanel with type: Type44 got: com.google.gwt.user.client.ui.RootPanel
Cannot find matching typeVariable for: get
Did not find solution for node: get with type Type45
Did not find solution for node: "test" with type Type10
Cannot find matching typeVariable for: add
Did not find solution for node: add with type Type48
Did not find solution for node: absPanel with type Type8
No match for actual type MethodInvocation: absPanel.getElement().getStyle().setProperty("filter","alpha(opacity=100)") and also not find solution for: Type55
No match for actual type MethodInvocation: absPanel.getElement().getStyle() and also not find solution for: Type53
Did not find solution for node: absPanel.getElement() with type Type51
Did not find solution for node: absPanel with type Type8
Cannot find matching typeVariable for: getElement
Did not find solution for node: getElement with type Type51
Did not find solution for node: "filter" with type Type10
Did not find solution for node: "alpha(opacity=100)" with type Type10
{Checked=108, Analyzed=8, Unsolved=100, Incorrect=3, Correct=5}
gwt.=ClassInstanceCreation: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
gwt.=MethodInvocation: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
gwt.=SimpleName: {Checked=29, Analyzed=1, Unsolved=28, Incorrect=0, Correct=1}
gwt.=SimpleType: {Checked=6, Analyzed=0, Unsolved=6, Incorrect=0, Correct=0}
gwt.=VariableDeclarationFragment: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
int=NumberLiteral: {Checked=7, Analyzed=2, Unsolved=5, Incorrect=2, Correct=0}
int=PrimitiveType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
int=SimpleName: {Checked=9, Analyzed=0, Unsolved=9, Incorrect=0, Correct=0}
int=VariableDeclarationFragment: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=InfixExpression: {Checked=6, Analyzed=0, Unsolved=6, Incorrect=0, Correct=0}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=StringLiteral: {Checked=13, Analyzed=0, Unsolved=13, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=8, Analyzed=0, Unsolved=8, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=8, Analyzed=0, Unsolved=8, Incorrect=0, Correct=0}
Total stats
{Checked=108, Analyzed=8, Unsolved=100, Incorrect=3, Correct=5}
gwt.=ClassInstanceCreation: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
gwt.=MethodInvocation: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
gwt.=SimpleName: {Checked=29, Analyzed=1, Unsolved=28, Incorrect=0, Correct=1}
gwt.=SimpleType: {Checked=6, Analyzed=0, Unsolved=6, Incorrect=0, Correct=0}
gwt.=VariableDeclarationFragment: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
int=NumberLiteral: {Checked=7, Analyzed=2, Unsolved=5, Incorrect=2, Correct=0}
int=PrimitiveType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
int=SimpleName: {Checked=9, Analyzed=0, Unsolved=9, Incorrect=0, Correct=0}
int=VariableDeclarationFragment: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
java=InfixExpression: {Checked=6, Analyzed=0, Unsolved=6, Incorrect=0, Correct=0}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=StringLiteral: {Checked=13, Analyzed=0, Unsolved=13, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=8, Analyzed=0, Unsolved=8, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=8, Analyzed=0, Unsolved=8, Incorrect=0, Correct=0}
gwt.,ClassInstanceCreation,0,3,0,0,3
gwt.,MethodInvocation,0,5,0,0,5
gwt.,SimpleName,1,29,1,0,28
gwt.,SimpleType,0,6,0,0,6
gwt.,VariableDeclarationFragment,0,3,0,0,3
int,NumberLiteral,2,7,0,2,5
int,PrimitiveType,0,3,0,0,3
int,SimpleName,0,9,0,0,9
int,VariableDeclarationFragment,0,3,0,0,3
java,InfixExpression,0,6,0,0,6
java,SimpleName,2,2,2,0,0
java,SimpleType,1,1,1,0,0
java,SingleVariableDeclaration,1,1,0,1,0
java,StringLiteral,0,13,0,0,13
void,MethodInvocation,0,8,0,0,8
void,PrimitiveType,1,1,1,0,0
void,SimpleName,0,8,0,0,8
