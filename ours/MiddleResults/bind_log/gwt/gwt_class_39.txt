echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /api-resolution/Baseline/SnR/benchmark/../src/test/resources/snippets/so/gwt_class_39.java
Expect check=133
Cannot find matching typeVariable for: public class gwt_class_39 {
public class ReportsServiceImpl extends RemoteServiceServlet {
    public String myMethod(    String s){
      File f=new File("/excelTestFile.xls");
      String filename=f.getName();
      int length=0;
      try {
        HttpServletResponse resp=getThreadLocalResponse();
        ServletOutputStream op=resp.getOutputStream();
        ServletContext context=getServletConfig().getServletContext();
        resp.setContentType("application/octet-stream");
        resp.setContentLength((int)f.length());
        resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
        byte[] bbuf=new byte[1024];
        DataInputStream in=new DataInputStream(new FileInputStream(f));
        while ((in != null) && ((length=in.read(bbuf)) != -1)) {
          op.write(bbuf,0,length);
        }
        in.close();
        op.flush();
        op.close();
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
      return "Server says: " + filename;
    }
  }
}

Cannot find matching typeVariable for: gwt_class_39
Cannot find matching typeVariable for: public class gwt_class_39 {
public class ReportsServiceImpl extends RemoteServiceServlet {
    public String myMethod(    String s){
      File f=new File("/excelTestFile.xls");
      String filename=f.getName();
      int length=0;
      try {
        HttpServletResponse resp=getThreadLocalResponse();
        ServletOutputStream op=resp.getOutputStream();
        ServletContext context=getServletConfig().getServletContext();
        resp.setContentType("application/octet-stream");
        resp.setContentLength((int)f.length());
        resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
        byte[] bbuf=new byte[1024];
        DataInputStream in=new DataInputStream(new FileInputStream(f));
        while ((in != null) && ((length=in.read(bbuf)) != -1)) {
          op.write(bbuf,0,length);
        }
        in.close();
        op.flush();
        op.close();
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
      return "Server says: " + filename;
    }
  }
}

Cannot find matching typeVariable for: import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import javax.servlet.ServletContext;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import com.google.gwt.user.server.rpc.RemoteServiceServlet;
public class gwt_class_39 {
public class ReportsServiceImpl extends RemoteServiceServlet {
    public String myMethod(    String s){
      File f=new File("/excelTestFile.xls");
      String filename=f.getName();
      int length=0;
      try {
        HttpServletResponse resp=getThreadLocalResponse();
        ServletOutputStream op=resp.getOutputStream();
        ServletContext context=getServletConfig().getServletContext();
        resp.setContentType("application/octet-stream");
        resp.setContentLength((int)f.length());
        resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
        byte[] bbuf=new byte[1024];
        DataInputStream in=new DataInputStream(new FileInputStream(f));
        while ((in != null) && ((length=in.read(bbuf)) != -1)) {
          op.write(bbuf,0,length);
        }
        in.close();
        op.flush();
        op.close();
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
      return "Server says: " + filename;
    }
  }
}

Cannot find matching typeVariable for: public class ReportsServiceImpl extends RemoteServiceServlet {
  public String myMethod(  String s){
    File f=new File("/excelTestFile.xls");
    String filename=f.getName();
    int length=0;
    try {
      HttpServletResponse resp=getThreadLocalResponse();
      ServletOutputStream op=resp.getOutputStream();
      ServletContext context=getServletConfig().getServletContext();
      resp.setContentType("application/octet-stream");
      resp.setContentLength((int)f.length());
      resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
      byte[] bbuf=new byte[1024];
      DataInputStream in=new DataInputStream(new FileInputStream(f));
      while ((in != null) && ((length=in.read(bbuf)) != -1)) {
        op.write(bbuf,0,length);
      }
      in.close();
      op.flush();
      op.close();
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
    return "Server says: " + filename;
  }
}

Did not find solution for node: ReportsServiceImpl with type Type2
For node: RemoteServiceServlet expected fqn: com.google.gwt.user.server.rpc.RemoteServiceServlet with type: Type3 got: com.google.gwt.user.server.rpc.RemoteServiceServlet
For node: RemoteServiceServlet expected fqn: com.google.gwt.user.server.rpc.RemoteServiceServlet with type: Type3 got: com.google.gwt.user.server.rpc.RemoteServiceServlet
For node: String expected fqn: java.lang.String with type: Type4 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type4 got: java.lang.String
Cannot find matching typeVariable for: myMethod
Cannot find matching typeVariable for: public String myMethod(String s){
  File f=new File("/excelTestFile.xls");
  String filename=f.getName();
  int length=0;
  try {
    HttpServletResponse resp=getThreadLocalResponse();
    ServletOutputStream op=resp.getOutputStream();
    ServletContext context=getServletConfig().getServletContext();
    resp.setContentType("application/octet-stream");
    resp.setContentLength((int)f.length());
    resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
    byte[] bbuf=new byte[1024];
    DataInputStream in=new DataInputStream(new FileInputStream(f));
    while ((in != null) && ((length=in.read(bbuf)) != -1)) {
      op.write(bbuf,0,length);
    }
    in.close();
    op.flush();
    op.close();
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  return "Server says: " + filename;
}

Cannot find matching typeVariable for: public class ReportsServiceImpl extends RemoteServiceServlet {
  public String myMethod(  String s){
    File f=new File("/excelTestFile.xls");
    String filename=f.getName();
    int length=0;
    try {
      HttpServletResponse resp=getThreadLocalResponse();
      ServletOutputStream op=resp.getOutputStream();
      ServletContext context=getServletConfig().getServletContext();
      resp.setContentType("application/octet-stream");
      resp.setContentLength((int)f.length());
      resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
      byte[] bbuf=new byte[1024];
      DataInputStream in=new DataInputStream(new FileInputStream(f));
      while ((in != null) && ((length=in.read(bbuf)) != -1)) {
        op.write(bbuf,0,length);
      }
      in.close();
      op.flush();
      op.close();
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
    return "Server says: " + filename;
  }
}

Cannot find matching typeVariable for: public class gwt_class_39 {
public class ReportsServiceImpl extends RemoteServiceServlet {
    public String myMethod(    String s){
      File f=new File("/excelTestFile.xls");
      String filename=f.getName();
      int length=0;
      try {
        HttpServletResponse resp=getThreadLocalResponse();
        ServletOutputStream op=resp.getOutputStream();
        ServletContext context=getServletConfig().getServletContext();
        resp.setContentType("application/octet-stream");
        resp.setContentLength((int)f.length());
        resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
        byte[] bbuf=new byte[1024];
        DataInputStream in=new DataInputStream(new FileInputStream(f));
        while ((in != null) && ((length=in.read(bbuf)) != -1)) {
          op.write(bbuf,0,length);
        }
        in.close();
        op.flush();
        op.close();
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
      return "Server says: " + filename;
    }
  }
}

Cannot find matching typeVariable for: import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import javax.servlet.ServletContext;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import com.google.gwt.user.server.rpc.RemoteServiceServlet;
public class gwt_class_39 {
public class ReportsServiceImpl extends RemoteServiceServlet {
    public String myMethod(    String s){
      File f=new File("/excelTestFile.xls");
      String filename=f.getName();
      int length=0;
      try {
        HttpServletResponse resp=getThreadLocalResponse();
        ServletOutputStream op=resp.getOutputStream();
        ServletContext context=getServletConfig().getServletContext();
        resp.setContentType("application/octet-stream");
        resp.setContentLength((int)f.length());
        resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "");
        byte[] bbuf=new byte[1024];
        DataInputStream in=new DataInputStream(new FileInputStream(f));
        while ((in != null) && ((length=in.read(bbuf)) != -1)) {
          op.write(bbuf,0,length);
        }
        in.close();
        op.flush();
        op.close();
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
      return "Server says: " + filename;
    }
  }
}

Cannot find matching typeVariable for: String s
For node: String s expected fqn: java.lang.String with type: Type4 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type4 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type4 got: java.lang.String
For node: s expected fqn: java.lang.String with type: Type4 got: java.lang.String
For node: File expected fqn: java.io.File with type: Type5 got: java.io.File
For node: File expected fqn: java.io.File with type: Type5 got: java.io.File
Cannot find matching typeVariable for: f=new File("/excelTestFile.xls")
For node: f=new File("/excelTestFile.xls") expected fqn: java.io.File with type: Type5 got: java.io.File
For node: f expected fqn: java.io.File with type: Type5 got: java.io.File
For node: new File("/excelTestFile.xls") expected fqn: java.io.File with type: Type5 got: java.io.File
For node: File expected fqn: java.io.File with type: Type5 got: java.io.File
For node: File expected fqn: java.io.File with type: Type5 got: java.io.File
For node: "/excelTestFile.xls" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
Cannot find matching typeVariable for: filename=f.getName()
For node: filename=f.getName() expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: filename expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: f.getName() expected fqn: java.lang.String with type: Type10 got: java.lang.String
For node: f expected fqn: java.io.File with type: Type5 got: java.io.File
Cannot find matching typeVariable for: getName
For node: getName expected fqn: java.lang.String with type: Type10 got: java.lang.String
For node: int expected fqn: int with type: Type12 got: int
Cannot find matching typeVariable for: length=0
For node: length=0 expected fqn: int with type: Type12 got: int
For node: length expected fqn: int with type: Type12 got: int
Did not find solution for node: 0 with type Type13
For node: HttpServletResponse expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
For node: HttpServletResponse expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
Cannot find matching typeVariable for: resp=getThreadLocalResponse()
For node: resp=getThreadLocalResponse() expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
For node: resp expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
For node: getThreadLocalResponse() expected fqn: javax.servlet.http.HttpServletResponse with type: Type15 got: javax.servlet.http.HttpServletResponse
Cannot find matching typeVariable for: getThreadLocalResponse
For node: getThreadLocalResponse expected fqn: javax.servlet.http.HttpServletResponse with type: Type15 got: javax.servlet.http.HttpServletResponse
For node: ServletOutputStream expected fqn: javax.servlet.ServletOutputStream with type: Type17 got: javax.servlet.ServletOutputStream
For node: ServletOutputStream expected fqn: javax.servlet.ServletOutputStream with type: Type17 got: javax.servlet.ServletOutputStream
Cannot find matching typeVariable for: op=resp.getOutputStream()
For node: op=resp.getOutputStream() expected fqn: javax.servlet.ServletOutputStream with type: Type17 got: javax.servlet.ServletOutputStream
For node: op expected fqn: javax.servlet.ServletOutputStream with type: Type17 got: javax.servlet.ServletOutputStream
For node: resp.getOutputStream() expected fqn: javax.servlet.ServletOutputStream with type: Type18 got: javax.servlet.ServletOutputStream
For node: resp expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
Cannot find matching typeVariable for: getOutputStream
For node: getOutputStream expected fqn: javax.servlet.ServletOutputStream with type: Type18 got: javax.servlet.ServletOutputStream
For node: ServletContext expected fqn: javax.servlet.ServletContext with type: Type20 got: javax.servlet.ServletContext
For node: ServletContext expected fqn: javax.servlet.ServletContext with type: Type20 got: javax.servlet.ServletContext
Cannot find matching typeVariable for: context=getServletConfig().getServletContext()
For node: context=getServletConfig().getServletContext() expected fqn: javax.servlet.ServletContext with type: Type20 got: javax.servlet.ServletContext
For node: context expected fqn: javax.servlet.ServletContext with type: Type20 got: javax.servlet.ServletContext
For node: getServletConfig().getServletContext() expected fqn: javax.servlet.ServletContext with type: Type23 got: javax.servlet.ServletContext
For node: getServletConfig() expected fqn: javax.servlet.ServletConfig with type: Type21 got: javax.servlet.ServletConfig
Cannot find matching typeVariable for: getServletConfig
For node: getServletConfig expected fqn: javax.servlet.ServletConfig with type: Type21 got: javax.servlet.ServletConfig
Cannot find matching typeVariable for: getServletContext
For node: getServletContext expected fqn: javax.servlet.ServletContext with type: Type23 got: javax.servlet.ServletContext
For node: resp.setContentType("application/octet-stream") expected fqn: void with type: Type25 got: void
For node: resp expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
Cannot find matching typeVariable for: setContentType
For node: setContentType expected fqn: void with type: Type25 got: void
For node: "application/octet-stream" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: resp.setContentLength((int)f.length()) expected fqn: void with type: Type30 got: void
For node: resp expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
Cannot find matching typeVariable for: setContentLength
For node: setContentLength expected fqn: void with type: Type30 got: void
For node: (int)f.length() expected fqn: int with type: Type12 got: int
For node: int expected fqn: int with type: Type12 got: int
Did not find solution for node: f.length() with type Type28
For node: f expected fqn: java.io.File with type: Type5 got: java.io.File
Cannot find matching typeVariable for: length
Did not find solution for node: length with type Type28
For node: resp.setHeader("Content-Disposition","attachment; filename*=\"utf-8''" + filename + "") expected fqn: void with type: Type33 got: void
For node: resp expected fqn: javax.servlet.http.HttpServletResponse with type: Type14 got: javax.servlet.http.HttpServletResponse
Cannot find matching typeVariable for: setHeader
For node: setHeader expected fqn: void with type: Type33 got: void
For node: "Content-Disposition" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: "attachment; filename*=\"utf-8''" + filename + "" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: "attachment; filename*=\"utf-8''" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: filename expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: "" expected fqn: java.lang.String with type: Type6 got: java.lang.String
Did not find solution for node: byte[] with type Type37
Did not find solution for node: byte with type Type13
Cannot find matching typeVariable for: bbuf=new byte[1024]
Did not find solution for node: bbuf=new byte[1024] with type Type37
Did not find solution for node: bbuf with type Type37
Did not find solution for node: new byte[1024] with type Type37
Did not find solution for node: byte[] with type Type37
Did not find solution for node: byte with type Type13
For node: 1024 expected fqn: int with type: Type38 got: short
For node: DataInputStream expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
For node: DataInputStream expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
Cannot find matching typeVariable for: in=new DataInputStream(new FileInputStream(f))
For node: in=new DataInputStream(new FileInputStream(f)) expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
For node: in expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
For node: new DataInputStream(new FileInputStream(f)) expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
For node: DataInputStream expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
For node: DataInputStream expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
For node: new FileInputStream(f) expected fqn: java.io.FileInputStream with type: Type40 got: java.io.FileInputStream
For node: FileInputStream expected fqn: java.io.FileInputStream with type: Type40 got: java.io.FileInputStream
For node: FileInputStream expected fqn: java.io.FileInputStream with type: Type40 got: java.io.FileInputStream
For node: f expected fqn: java.io.File with type: Type5 got: java.io.File
For node: (in != null) && ((length=in.read(bbuf)) != -1) expected fqn: boolean with type: Type46 got: boolean
For node: (in != null) expected fqn: boolean with type: Type46 got: boolean
For node: in != null expected fqn: boolean with type: Type46 got: boolean
For node: in expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
Did not find solution for node: null with type Type45
For node: ((length=in.read(bbuf)) != -1) expected fqn: boolean with type: Type46 got: boolean
For node: (length=in.read(bbuf)) != -1 expected fqn: boolean with type: Type46 got: boolean
For node: (length=in.read(bbuf)) expected fqn: int with type: Type12 got: int
For node: length=in.read(bbuf) expected fqn: int with type: Type12 got: int
For node: length expected fqn: int with type: Type12 got: int
For node: in.read(bbuf) expected fqn: int with type: Type47 got: int
For node: in expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
Cannot find matching typeVariable for: read
For node: read expected fqn: int with type: Type47 got: int
Did not find solution for node: bbuf with type Type37
Did not find solution for node: -1 with type Type13
Did not find solution for node: 1 with type Type13
For node: op.write(bbuf,0,length) expected fqn: void with type: Type51 got: void
For node: op expected fqn: javax.servlet.ServletOutputStream with type: Type17 got: javax.servlet.ServletOutputStream
Cannot find matching typeVariable for: write
For node: write expected fqn: void with type: Type51 got: void
Did not find solution for node: bbuf with type Type37
Did not find solution for node: 0 with type Type13
For node: length expected fqn: int with type: Type12 got: int
For node: in.close() expected fqn: void with type: Type56 got: void
For node: in expected fqn: java.io.DataInputStream with type: Type39 got: java.io.DataInputStream
Cannot find matching typeVariable for: close
For node: close expected fqn: void with type: Type56 got: void
For node: op.flush() expected fqn: void with type: Type58 got: void
For node: op expected fqn: javax.servlet.ServletOutputStream with type: Type17 got: javax.servlet.ServletOutputStream
Cannot find matching typeVariable for: flush
For node: flush expected fqn: void with type: Type58 got: void
For node: op.close() expected fqn: void with type: Type60 got: void
For node: op expected fqn: javax.servlet.ServletOutputStream with type: Type17 got: javax.servlet.ServletOutputStream
Cannot find matching typeVariable for: close
For node: close expected fqn: void with type: Type60 got: void
Cannot find matching typeVariable for: Exception ex
For node: Exception ex expected fqn: java.lang.Exception with type: Type62 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type62 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type62 got: java.lang.Exception
For node: ex expected fqn: java.lang.Exception with type: Type62 got: java.lang.Exception
For node: ex.printStackTrace() expected fqn: void with type: Type63 got: void
For node: ex expected fqn: java.lang.Exception with type: Type62 got: java.lang.Exception
Cannot find matching typeVariable for: printStackTrace
For node: printStackTrace expected fqn: void with type: Type63 got: void
For node: "Server says: " + filename expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: "Server says: " expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: filename expected fqn: java.lang.String with type: Type6 got: java.lang.String
{Checked=129, Analyzed=112, Unsolved=17, Incorrect=1, Correct=111}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
boolean=ParenthesizedExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
byte=ArrayCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
byte=ArrayType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
byte=PrimitiveType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
byte=SimpleName: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
byte=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
gwt.=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
gwt.=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=4, Analyzed=1, Unsolved=3, Incorrect=1, Correct=0}
int=ParenthesizedExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=PrefixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=SimpleName: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=InfixExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=MethodInvocation: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SimpleName: {Checked=41, Analyzed=41, Unsolved=0, Incorrect=0, Correct=41}
java=SimpleType: {Checked=12, Analyzed=12, Unsolved=0, Incorrect=0, Correct=12}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=VariableDeclarationFragment: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
long=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
void=SimpleName: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
Total stats
{Checked=129, Analyzed=112, Unsolved=17, Incorrect=1, Correct=111}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
boolean=ParenthesizedExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
byte=ArrayCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
byte=ArrayType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
byte=PrimitiveType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
byte=SimpleName: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
byte=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
gwt.=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
gwt.=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=4, Analyzed=1, Unsolved=3, Incorrect=1, Correct=0}
int=ParenthesizedExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=PrefixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=SimpleName: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=InfixExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=MethodInvocation: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SimpleName: {Checked=41, Analyzed=41, Unsolved=0, Incorrect=0, Correct=41}
java=SimpleType: {Checked=12, Analyzed=12, Unsolved=0, Incorrect=0, Correct=12}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=VariableDeclarationFragment: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
long=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
long=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
void=SimpleName: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
,SimpleName,0,1,0,0,1
boolean,InfixExpression,3,3,3,0,0
boolean,ParenthesizedExpression,2,2,2,0,0
byte,ArrayCreation,0,1,0,0,1
byte,ArrayType,0,2,0,0,2
byte,PrimitiveType,0,2,0,0,2
byte,SimpleName,0,3,0,0,3
byte,VariableDeclarationFragment,0,1,0,0,1
gwt.,SimpleName,1,1,1,0,0
gwt.,SimpleType,1,1,1,0,0
int,Assignment,1,1,1,0,0
int,CastExpression,1,1,1,0,0
int,MethodInvocation,1,1,1,0,0
int,NumberLiteral,1,4,0,1,3
int,ParenthesizedExpression,1,1,1,0,0
int,PrefixExpression,0,1,0,0,1
int,PrimitiveType,2,2,2,0,0
int,SimpleName,4,4,4,0,0
int,VariableDeclarationFragment,1,1,1,0,0
java,ClassInstanceCreation,3,3,3,0,0
java,InfixExpression,2,2,2,0,0
java,MethodInvocation,5,5,5,0,0
java,SimpleName,41,41,41,0,0
java,SimpleType,12,12,12,0,0
java,SingleVariableDeclaration,2,2,2,0,0
java,StringLiteral,6,6,6,0,0
java,VariableDeclarationFragment,6,6,6,0,0
long,MethodInvocation,0,1,0,0,1
long,SimpleName,0,1,0,0,1
null,NullLiteral,0,1,0,0,1
void,MethodInvocation,8,8,8,0,0
void,SimpleName,8,8,8,0,0
