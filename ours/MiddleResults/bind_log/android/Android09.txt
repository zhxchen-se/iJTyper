echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/Android09.java
Expect check=58
Cannot find matching typeVariable for: public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Did not find solution for node: Android09 with type Type1
Did not find solution for node: float with type Type4
Cannot find matching typeVariable for: seconds
Did not find solution for node: seconds with type Type4
Cannot find matching typeVariable for: seconds
Cannot find matching typeVariable for: float seconds;

Cannot find matching typeVariable for: public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Cannot find matching typeVariable for: package androidExamples;
import java.util.Timer;
import java.util.TimerTask;
import android.os.Bundle;
import android.widget.TextView;
import gen.R;
public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

For node: Timer expected fqn: java.util.Timer with type: Type5 got: java.util.Timer
For node: Timer expected fqn: java.util.Timer with type: Type5 got: java.util.Timer
Cannot find matching typeVariable for: gametimer
For node: gametimer expected fqn: java.util.Timer with type: Type5 got: java.util.Timer
Cannot find matching typeVariable for: gametimer
Cannot find matching typeVariable for: public Timer gametimer;

Cannot find matching typeVariable for: public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Cannot find matching typeVariable for: package androidExamples;
import java.util.Timer;
import java.util.TimerTask;
import android.os.Bundle;
import android.widget.TextView;
import gen.R;
public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: updatecount
Cannot find matching typeVariable for: void updatecount(){
  TextView t=(TextView)findViewById(R.id.topscore);
  t.setText("Score: 10 - Time: " + seconds + " seconds");
  t.postInvalidate();
}

Cannot find matching typeVariable for: public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Cannot find matching typeVariable for: package androidExamples;
import java.util.Timer;
import java.util.TimerTask;
import android.os.Bundle;
import android.widget.TextView;
import gen.R;
public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Did not find solution for node: TextView with type Type3
Did not find solution for node: TextView with type Type3
Cannot find matching typeVariable for: t=(TextView)findViewById(R.id.topscore)
Did not find solution for node: t=(TextView)findViewById(R.id.topscore) with type Type3
Did not find solution for node: t with type Type3
Did not find solution for node: (TextView)findViewById(R.id.topscore) with type Type3
Did not find solution for node: TextView with type Type3
Did not find solution for node: TextView with type Type3
No match for actual type MethodInvocation: findViewById(R.id.topscore) and also not find solution for: Type3
Cannot find matching typeVariable for: findViewById
Did not find solution for node: findViewById with type Type3
Did not find solution for node: t.setText("Score: 10 - Time: " + seconds + " seconds") with type Type7
Did not find solution for node: t with type Type3
Cannot find matching typeVariable for: setText
Did not find solution for node: setText with type Type7
Did not find solution for node: "Score: 10 - Time: " + seconds + " seconds" with type Type6
Did not find solution for node: "Score: 10 - Time: " with type Type6
Did not find solution for node: seconds with type Type4
Did not find solution for node: " seconds" with type Type6
Did not find solution for node: t.postInvalidate() with type Type10
Did not find solution for node: t with type Type3
Cannot find matching typeVariable for: postInvalidate
Did not find solution for node: postInvalidate with type Type10
Did not find solution for node: TextView with type Type3
Did not find solution for node: TextView with type Type3
Cannot find matching typeVariable for: findViewById
Cannot find matching typeVariable for: private TextView findViewById(int topscore){
  return null;
}

Cannot find matching typeVariable for: public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Cannot find matching typeVariable for: package androidExamples;
import java.util.Timer;
import java.util.TimerTask;
import android.os.Bundle;
import android.widget.TextView;
import gen.R;
public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Cannot find matching typeVariable for: int topscore
For node: int topscore expected fqn: int with type: Type12 got: int
For node: int expected fqn: int with type: Type12 got: int
For node: topscore expected fqn: int with type: Type12 got: int
Did not find solution for node: null with type Type13
For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: onCreate
Cannot find matching typeVariable for: public void onCreate(Bundle sis){
  gametimer.schedule(new TimerTask(){
    public void run(){
      seconds+=0.1;
      updatecount();
    }
  }
,100,100);
}

Cannot find matching typeVariable for: public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Cannot find matching typeVariable for: package androidExamples;
import java.util.Timer;
import java.util.TimerTask;
import android.os.Bundle;
import android.widget.TextView;
import gen.R;
public class Android09 {
  float seconds;
  public Timer gametimer;
  void updatecount(){
    TextView t=(TextView)findViewById(R.id.topscore);
    t.setText("Score: 10 - Time: " + seconds + " seconds");
    t.postInvalidate();
  }
  private TextView findViewById(  int topscore){
    return null;
  }
  public void onCreate(  Bundle sis){
    gametimer.schedule(new TimerTask(){
      public void run(){
        seconds+=0.1;
        updatecount();
      }
    }
,100,100);
  }
}

Cannot find matching typeVariable for: Bundle sis
Did not find solution for node: Bundle sis with type Type14
Did not find solution for node: Bundle with type Type14
Did not find solution for node: Bundle with type Type14
Did not find solution for node: sis with type Type14
For node: gametimer.schedule(new TimerTask(){
  public void run(){
    seconds+=0.1;
    updatecount();
  }
}
,100,100) expected fqn: void with type: Type18 got: void
For node: gametimer expected fqn: java.util.Timer with type: Type5 got: java.util.Timer
Cannot find matching typeVariable for: schedule
For node: schedule expected fqn: void with type: Type18 got: void
For node: new TimerTask(){
  public void run(){
    seconds+=0.1;
    updatecount();
  }
}
 expected fqn:  with type: Type15 got: java.util.TimerTask
For node: TimerTask expected fqn: java.util.TimerTask with type: Type15 got: java.util.TimerTask
For node: TimerTask expected fqn: java.util.TimerTask with type: Type15 got: java.util.TimerTask
Cannot find matching typeVariable for: {
  public void run(){
    seconds+=0.1;
    updatecount();
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: run
Cannot find matching typeVariable for: public void run(){
  seconds+=0.1;
  updatecount();
}

Cannot find matching typeVariable for: {
  public void run(){
    seconds+=0.1;
    updatecount();
  }
}

For node: run expected fqn: void with type: Type15 got: java.util.TimerTask
Did not find solution for node: seconds+=0.1 with type Type4
Did not find solution for node: seconds with type Type4
Did not find solution for node: 0.1 with type Type4
For node: updatecount() expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: updatecount
For node: updatecount expected fqn: void with type: Type2 got: void
For node: 100 expected fqn: int with type: Type17 got: byte
For node: 100 expected fqn: int with type: Type17 got: byte
{Checked=51, Analyzed=20, Unsolved=31, Incorrect=4, Correct=16}
=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
android.=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
android.=SimpleName: {Checked=9, Analyzed=0, Unsolved=9, Incorrect=0, Correct=0}
android.=SimpleType: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
android.=SingleVariableDeclaration: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
android.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
double=NumberLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
float=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
float=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
float=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
float=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=NumberLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=InfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=4, Analyzed=2, Unsolved=2, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=SimpleName: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=1, Correct=2}
Total stats
{Checked=51, Analyzed=20, Unsolved=31, Incorrect=4, Correct=16}
=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
android.=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
android.=SimpleName: {Checked=9, Analyzed=0, Unsolved=9, Incorrect=0, Correct=0}
android.=SimpleType: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
android.=SingleVariableDeclaration: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
android.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
double=NumberLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
float=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
float=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
float=SimpleName: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
float=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=NumberLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=InfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=4, Analyzed=2, Unsolved=2, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=SimpleName: {Checked=5, Analyzed=3, Unsolved=2, Incorrect=1, Correct=2}
,ClassInstanceCreation,1,1,0,1,0
,SimpleName,0,1,0,0,1
android.,CastExpression,0,1,0,0,1
android.,SimpleName,0,9,0,0,9
android.,SimpleType,0,4,0,0,4
android.,SingleVariableDeclaration,0,1,0,0,1
android.,VariableDeclarationFragment,0,1,0,0,1
double,NumberLiteral,0,1,0,0,1
float,Assignment,0,1,0,0,1
float,PrimitiveType,0,1,0,0,1
float,SimpleName,0,2,0,0,2
float,VariableDeclarationFragment,0,1,0,0,1
int,NumberLiteral,2,2,0,2,0
int,PrimitiveType,1,1,1,0,0
int,SimpleName,1,1,1,0,0
int,SingleVariableDeclaration,1,1,1,0,0
java,InfixExpression,0,1,0,0,1
java,SimpleName,3,3,3,0,0
java,SimpleType,2,2,2,0,0
java,StringLiteral,0,2,0,0,2
java,VariableDeclarationFragment,1,1,1,0,0
null,NullLiteral,0,1,0,0,1
void,MethodInvocation,2,4,2,0,2
void,PrimitiveType,3,3,3,0,0
void,SimpleName,3,5,2,1,2
