echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_33.java
Expect check=105
Cannot find matching typeVariable for: public class xstream_class_33 {
  private static XStream xstream;
  public static XStream getXStream(){
    if (xstream == null) {
      xstream=new XStream(new DomDriver());
      xstream.alias("ActionMessage",ActionMessage.class);
      xstream.alias("MessageHeader",MessageHeader.class);
      xstream.alias("MessageBody",MessageBody.class);
      xstream.alias("RemotingMessage",RemotingMessage.class);
      xstream.alias("CommandMessage",CommandMessage.class);
      xstream.alias("AcknowledgeMessage",AcknowledgeMessage.class);
      xstream.alias("ErrorMessage",ErrorMessage.class);
      xstream.alias("ASObject",ASObject.class);
      xstream.alias("AsyncMessage",AsyncMessage.class);
      xstream.alias("DSC",CommandMessageExt.class);
      xstream.alias("DSK",AcknowledgeMessageExt.class);
      Mapper mapper=xstream.getMapper();
    }
    return xstream;
  }
}

Did not find solution for node: xstream_class_33 with type Type1
Did not find solution for node: XStream with type Type2
Did not find solution for node: XStream with type Type2
Cannot find matching typeVariable for: xstream
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: xstream
Cannot find matching typeVariable for: private static XStream xstream;

Cannot find matching typeVariable for: public class xstream_class_33 {
  private static XStream xstream;
  public static XStream getXStream(){
    if (xstream == null) {
      xstream=new XStream(new DomDriver());
      xstream.alias("ActionMessage",ActionMessage.class);
      xstream.alias("MessageHeader",MessageHeader.class);
      xstream.alias("MessageBody",MessageBody.class);
      xstream.alias("RemotingMessage",RemotingMessage.class);
      xstream.alias("CommandMessage",CommandMessage.class);
      xstream.alias("AcknowledgeMessage",AcknowledgeMessage.class);
      xstream.alias("ErrorMessage",ErrorMessage.class);
      xstream.alias("ASObject",ASObject.class);
      xstream.alias("AsyncMessage",AsyncMessage.class);
      xstream.alias("DSC",CommandMessageExt.class);
      xstream.alias("DSK",AcknowledgeMessageExt.class);
      Mapper mapper=xstream.getMapper();
    }
    return xstream;
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import com.thoughtworks.xstream.mapper.Mapper;
import flex.messaging.io.amf.ASObject;
import flex.messaging.io.amf.ActionMessage;
import flex.messaging.io.amf.MessageBody;
import flex.messaging.io.amf.MessageHeader;
import flex.messaging.messages.AcknowledgeMessage;
import flex.messaging.messages.AcknowledgeMessageExt;
import flex.messaging.messages.AsyncMessage;
import flex.messaging.messages.CommandMessage;
import flex.messaging.messages.CommandMessageExt;
import flex.messaging.messages.ErrorMessage;
import flex.messaging.messages.RemotingMessage;
public class xstream_class_33 {
  private static XStream xstream;
  public static XStream getXStream(){
    if (xstream == null) {
      xstream=new XStream(new DomDriver());
      xstream.alias("ActionMessage",ActionMessage.class);
      xstream.alias("MessageHeader",MessageHeader.class);
      xstream.alias("MessageBody",MessageBody.class);
      xstream.alias("RemotingMessage",RemotingMessage.class);
      xstream.alias("CommandMessage",CommandMessage.class);
      xstream.alias("AcknowledgeMessage",AcknowledgeMessage.class);
      xstream.alias("ErrorMessage",ErrorMessage.class);
      xstream.alias("ASObject",ASObject.class);
      xstream.alias("AsyncMessage",AsyncMessage.class);
      xstream.alias("DSC",CommandMessageExt.class);
      xstream.alias("DSK",AcknowledgeMessageExt.class);
      Mapper mapper=xstream.getMapper();
    }
    return xstream;
  }
}

Did not find solution for node: XStream with type Type2
Did not find solution for node: XStream with type Type2
Cannot find matching typeVariable for: getXStream
Cannot find matching typeVariable for: public static XStream getXStream(){
  if (xstream == null) {
    xstream=new XStream(new DomDriver());
    xstream.alias("ActionMessage",ActionMessage.class);
    xstream.alias("MessageHeader",MessageHeader.class);
    xstream.alias("MessageBody",MessageBody.class);
    xstream.alias("RemotingMessage",RemotingMessage.class);
    xstream.alias("CommandMessage",CommandMessage.class);
    xstream.alias("AcknowledgeMessage",AcknowledgeMessage.class);
    xstream.alias("ErrorMessage",ErrorMessage.class);
    xstream.alias("ASObject",ASObject.class);
    xstream.alias("AsyncMessage",AsyncMessage.class);
    xstream.alias("DSC",CommandMessageExt.class);
    xstream.alias("DSK",AcknowledgeMessageExt.class);
    Mapper mapper=xstream.getMapper();
  }
  return xstream;
}

Cannot find matching typeVariable for: public class xstream_class_33 {
  private static XStream xstream;
  public static XStream getXStream(){
    if (xstream == null) {
      xstream=new XStream(new DomDriver());
      xstream.alias("ActionMessage",ActionMessage.class);
      xstream.alias("MessageHeader",MessageHeader.class);
      xstream.alias("MessageBody",MessageBody.class);
      xstream.alias("RemotingMessage",RemotingMessage.class);
      xstream.alias("CommandMessage",CommandMessage.class);
      xstream.alias("AcknowledgeMessage",AcknowledgeMessage.class);
      xstream.alias("ErrorMessage",ErrorMessage.class);
      xstream.alias("ASObject",ASObject.class);
      xstream.alias("AsyncMessage",AsyncMessage.class);
      xstream.alias("DSC",CommandMessageExt.class);
      xstream.alias("DSK",AcknowledgeMessageExt.class);
      Mapper mapper=xstream.getMapper();
    }
    return xstream;
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import com.thoughtworks.xstream.mapper.Mapper;
import flex.messaging.io.amf.ASObject;
import flex.messaging.io.amf.ActionMessage;
import flex.messaging.io.amf.MessageBody;
import flex.messaging.io.amf.MessageHeader;
import flex.messaging.messages.AcknowledgeMessage;
import flex.messaging.messages.AcknowledgeMessageExt;
import flex.messaging.messages.AsyncMessage;
import flex.messaging.messages.CommandMessage;
import flex.messaging.messages.CommandMessageExt;
import flex.messaging.messages.ErrorMessage;
import flex.messaging.messages.RemotingMessage;
public class xstream_class_33 {
  private static XStream xstream;
  public static XStream getXStream(){
    if (xstream == null) {
      xstream=new XStream(new DomDriver());
      xstream.alias("ActionMessage",ActionMessage.class);
      xstream.alias("MessageHeader",MessageHeader.class);
      xstream.alias("MessageBody",MessageBody.class);
      xstream.alias("RemotingMessage",RemotingMessage.class);
      xstream.alias("CommandMessage",CommandMessage.class);
      xstream.alias("AcknowledgeMessage",AcknowledgeMessage.class);
      xstream.alias("ErrorMessage",ErrorMessage.class);
      xstream.alias("ASObject",ASObject.class);
      xstream.alias("AsyncMessage",AsyncMessage.class);
      xstream.alias("DSC",CommandMessageExt.class);
      xstream.alias("DSK",AcknowledgeMessageExt.class);
      Mapper mapper=xstream.getMapper();
    }
    return xstream;
  }
}

For node: xstream == null expected fqn: boolean with type: Type4 got: boolean
Did not find solution for node: xstream with type Type2
Did not find solution for node: null with type Type3
Did not find solution for node: xstream=new XStream(new DomDriver()) with type Type2
Did not find solution for node: xstream with type Type2
Did not find solution for node: new XStream(new DomDriver()) with type Type2
Did not find solution for node: XStream with type Type2
Did not find solution for node: XStream with type Type2
Did not find solution for node: new DomDriver() with type Type5
Did not find solution for node: DomDriver with type Type5
Did not find solution for node: DomDriver with type Type5
Did not find solution for node: xstream.alias("ActionMessage",ActionMessage.class) with type Type13
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type13
Did not find solution for node: "ActionMessage" with type Type10
Did not find solution for node: ActionMessage.class with type Type12
Did not find solution for node: ActionMessage with type Type11
Did not find solution for node: ActionMessage with type Type11
Did not find solution for node: xstream.alias("MessageHeader",MessageHeader.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "MessageHeader" with type Type10
Did not find solution for node: MessageHeader.class with type Type12
Did not find solution for node: MessageHeader with type Type17
Did not find solution for node: MessageHeader with type Type17
Did not find solution for node: xstream.alias("MessageBody",MessageBody.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "MessageBody" with type Type10
Did not find solution for node: MessageBody.class with type Type12
Did not find solution for node: MessageBody with type Type18
Did not find solution for node: MessageBody with type Type18
Did not find solution for node: xstream.alias("RemotingMessage",RemotingMessage.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "RemotingMessage" with type Type10
Did not find solution for node: RemotingMessage.class with type Type12
Did not find solution for node: RemotingMessage with type Type19
Did not find solution for node: RemotingMessage with type Type19
Did not find solution for node: xstream.alias("CommandMessage",CommandMessage.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "CommandMessage" with type Type10
Did not find solution for node: CommandMessage.class with type Type12
Did not find solution for node: CommandMessage with type Type20
Did not find solution for node: CommandMessage with type Type20
Did not find solution for node: xstream.alias("AcknowledgeMessage",AcknowledgeMessage.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "AcknowledgeMessage" with type Type10
Did not find solution for node: AcknowledgeMessage.class with type Type12
Did not find solution for node: AcknowledgeMessage with type Type21
Did not find solution for node: AcknowledgeMessage with type Type21
Did not find solution for node: xstream.alias("ErrorMessage",ErrorMessage.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "ErrorMessage" with type Type10
Did not find solution for node: ErrorMessage.class with type Type12
Did not find solution for node: ErrorMessage with type Type22
Did not find solution for node: ErrorMessage with type Type22
Did not find solution for node: xstream.alias("ASObject",ASObject.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "ASObject" with type Type10
Did not find solution for node: ASObject.class with type Type12
Did not find solution for node: ASObject with type Type23
Did not find solution for node: ASObject with type Type23
Did not find solution for node: xstream.alias("AsyncMessage",AsyncMessage.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "AsyncMessage" with type Type10
Did not find solution for node: AsyncMessage.class with type Type12
Did not find solution for node: AsyncMessage with type Type24
Did not find solution for node: AsyncMessage with type Type24
Did not find solution for node: xstream.alias("DSC",CommandMessageExt.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "DSC" with type Type10
Did not find solution for node: CommandMessageExt.class with type Type12
Did not find solution for node: CommandMessageExt with type Type25
Did not find solution for node: CommandMessageExt with type Type25
Did not find solution for node: xstream.alias("DSK",AcknowledgeMessageExt.class) with type Type16
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: alias
Did not find solution for node: alias with type Type16
Did not find solution for node: "DSK" with type Type10
Did not find solution for node: AcknowledgeMessageExt.class with type Type12
Did not find solution for node: AcknowledgeMessageExt with type Type26
Did not find solution for node: AcknowledgeMessageExt with type Type26
Did not find solution for node: Mapper with type Type27
Did not find solution for node: Mapper with type Type27
Cannot find matching typeVariable for: mapper=xstream.getMapper()
Did not find solution for node: mapper=xstream.getMapper() with type Type27
Did not find solution for node: mapper with type Type27
Did not find solution for node: xstream.getMapper() with type Type28
Did not find solution for node: xstream with type Type2
Cannot find matching typeVariable for: getMapper
Did not find solution for node: getMapper with type Type28
Did not find solution for node: xstream with type Type2
{Checked=102, Analyzed=1, Unsolved=101, Incorrect=0, Correct=1}
=SimpleName: {Checked=12, Analyzed=0, Unsolved=12, Incorrect=0, Correct=0}
=SimpleType: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=22, Analyzed=0, Unsolved=22, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleType: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
java=TypeLiteral: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
void=SimpleName: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
Total stats
{Checked=102, Analyzed=1, Unsolved=101, Incorrect=0, Correct=1}
=SimpleName: {Checked=12, Analyzed=0, Unsolved=12, Incorrect=0, Correct=0}
=SimpleType: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=22, Analyzed=0, Unsolved=22, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleType: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
java=TypeLiteral: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
void=SimpleName: {Checked=11, Analyzed=0, Unsolved=11, Incorrect=0, Correct=0}
,SimpleName,0,12,0,0,12
,SimpleType,0,11,0,0,11
boolean,InfixExpression,1,1,1,0,0
com.thoughtworks.xstream.,Assignment,0,1,0,0,1
com.thoughtworks.xstream.,ClassInstanceCreation,0,2,0,0,2
com.thoughtworks.xstream.,MethodInvocation,0,1,0,0,1
com.thoughtworks.xstream.,SimpleName,0,22,0,0,22
com.thoughtworks.xstream.,SimpleType,0,5,0,0,5
com.thoughtworks.xstream.,VariableDeclarationFragment,0,2,0,0,2
java,StringLiteral,0,11,0,0,11
java,TypeLiteral,0,11,0,0,11
null,NullLiteral,0,1,0,0,1
void,MethodInvocation,0,11,0,0,11
void,SimpleName,0,11,0,0,11
