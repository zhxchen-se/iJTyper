echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_2.java
Expect check=51
Cannot find matching typeVariable for: public class xstream_class_2 {
  public static void main(  String arg[]) throws IOException {
    XStream xstream=new XStream(new DomDriver());
    FileReader fin=new FileReader("path_to_file.xml");
    BufferedReader br=new BufferedReader(fin);
    String str=null;
    while (br.ready()) {
      str+=br.readLine() + "\n";
    }
  }
}

Cannot find matching typeVariable for: xstream_class_2
Cannot find matching typeVariable for: public class xstream_class_2 {
  public static void main(  String arg[]) throws IOException {
    XStream xstream=new XStream(new DomDriver());
    FileReader fin=new FileReader("path_to_file.xml");
    BufferedReader br=new BufferedReader(fin);
    String str=null;
    while (br.ready()) {
      str+=br.readLine() + "\n";
    }
  }
}

Cannot find matching typeVariable for: import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
public class xstream_class_2 {
  public static void main(  String arg[]) throws IOException {
    XStream xstream=new XStream(new DomDriver());
    FileReader fin=new FileReader("path_to_file.xml");
    BufferedReader br=new BufferedReader(fin);
    String str=null;
    while (br.ready()) {
      str+=br.readLine() + "\n";
    }
  }
}

Did not find solution for node: void with type Type2
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String arg[]) throws IOException {
  XStream xstream=new XStream(new DomDriver());
  FileReader fin=new FileReader("path_to_file.xml");
  BufferedReader br=new BufferedReader(fin);
  String str=null;
  while (br.ready()) {
    str+=br.readLine() + "\n";
  }
}

Cannot find matching typeVariable for: public class xstream_class_2 {
  public static void main(  String arg[]) throws IOException {
    XStream xstream=new XStream(new DomDriver());
    FileReader fin=new FileReader("path_to_file.xml");
    BufferedReader br=new BufferedReader(fin);
    String str=null;
    while (br.ready()) {
      str+=br.readLine() + "\n";
    }
  }
}

Cannot find matching typeVariable for: import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
public class xstream_class_2 {
  public static void main(  String arg[]) throws IOException {
    XStream xstream=new XStream(new DomDriver());
    FileReader fin=new FileReader("path_to_file.xml");
    BufferedReader br=new BufferedReader(fin);
    String str=null;
    while (br.ready()) {
      str+=br.readLine() + "\n";
    }
  }
}

Cannot find matching typeVariable for: String arg[]
For node: String arg[] expected fqn: java.lang.String[] with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: arg expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: IOException expected fqn: java.io.IOException with type: Type5 got: java.io.IOException
For node: IOException expected fqn: java.io.IOException with type: Type5 got: java.io.IOException
Did not find solution for node: XStream with type Type6
Did not find solution for node: XStream with type Type6
Cannot find matching typeVariable for: xstream=new XStream(new DomDriver())
Did not find solution for node: xstream=new XStream(new DomDriver()) with type Type6
Did not find solution for node: xstream with type Type6
Did not find solution for node: new XStream(new DomDriver()) with type Type6
Did not find solution for node: XStream with type Type6
Did not find solution for node: XStream with type Type6
Did not find solution for node: new DomDriver() with type Type7
Did not find solution for node: DomDriver with type Type7
Did not find solution for node: DomDriver with type Type7
Did not find solution for node: FileReader with type Type11
Did not find solution for node: FileReader with type Type11
Cannot find matching typeVariable for: fin=new FileReader("path_to_file.xml")
Did not find solution for node: fin=new FileReader("path_to_file.xml") with type Type11
Did not find solution for node: fin with type Type11
Did not find solution for node: new FileReader("path_to_file.xml") with type Type11
Did not find solution for node: FileReader with type Type11
Did not find solution for node: FileReader with type Type11
Did not find solution for node: "path_to_file.xml" with type Type12
Did not find solution for node: BufferedReader with type Type15
Did not find solution for node: BufferedReader with type Type15
Cannot find matching typeVariable for: br=new BufferedReader(fin)
Did not find solution for node: br=new BufferedReader(fin) with type Type15
Did not find solution for node: br with type Type15
Did not find solution for node: new BufferedReader(fin) with type Type15
Did not find solution for node: BufferedReader with type Type15
Did not find solution for node: BufferedReader with type Type15
Did not find solution for node: fin with type Type11
Did not find solution for node: String with type Type12
Did not find solution for node: String with type Type12
Cannot find matching typeVariable for: str=null
Did not find solution for node: str=null with type Type12
Did not find solution for node: str with type Type12
Did not find solution for node: null with type Type18
Did not find solution for node: br.ready() with type Type19
Did not find solution for node: br with type Type15
Cannot find matching typeVariable for: ready
Did not find solution for node: ready with type Type19
Did not find solution for node: str+=br.readLine() + "\n" with type Type12
Did not find solution for node: str with type Type12
Did not find solution for node: br.readLine() + "\n" with type Type21
Did not find solution for node: br.readLine() with type Type21
Did not find solution for node: br with type Type15
Cannot find matching typeVariable for: readLine
Did not find solution for node: readLine with type Type21
Did not find solution for node: "\n" with type Type12
{Checked=48, Analyzed=6, Unsolved=42, Incorrect=1, Correct=5}
boolean=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=InfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=16, Analyzed=3, Unsolved=13, Incorrect=0, Correct=3}
java=SimpleType: {Checked=7, Analyzed=2, Unsolved=5, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=StringLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
Total stats
{Checked=48, Analyzed=6, Unsolved=42, Incorrect=1, Correct=5}
boolean=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=0, Unsolved=4, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=Assignment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=InfixExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=16, Analyzed=3, Unsolved=13, Incorrect=0, Correct=3}
java=SimpleType: {Checked=7, Analyzed=2, Unsolved=5, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=StringLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
void=PrimitiveType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean,MethodInvocation,0,1,0,0,1
boolean,SimpleName,0,1,0,0,1
com.thoughtworks.xstream.,ClassInstanceCreation,0,2,0,0,2
com.thoughtworks.xstream.,SimpleName,0,4,0,0,4
com.thoughtworks.xstream.,SimpleType,0,3,0,0,3
com.thoughtworks.xstream.,VariableDeclarationFragment,0,1,0,0,1
java,Assignment,0,1,0,0,1
java,ClassInstanceCreation,0,2,0,0,2
java,InfixExpression,0,1,0,0,1
java,MethodInvocation,0,1,0,0,1
java,SimpleName,3,16,3,0,13
java,SimpleType,2,7,2,0,5
java,SingleVariableDeclaration,1,1,0,1,0
java,StringLiteral,0,2,0,0,2
java,VariableDeclarationFragment,0,3,0,0,3
null,NullLiteral,0,1,0,0,1
void,PrimitiveType,0,1,0,0,1
