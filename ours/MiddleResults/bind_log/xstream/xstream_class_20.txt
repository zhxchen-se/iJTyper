echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_20.java
Expect check=83
Cannot find matching typeVariable for: public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: xstream_class_20
Cannot find matching typeVariable for: public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.Charset;
import com.thoughtworks.xstream.XStream;
public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

For node: @SuppressWarnings("unchecked") expected fqn: java.lang.SuppressWarnings with type: Type4 got: java.lang.SuppressWarnings
For node: SuppressWarnings expected fqn: java.lang.SuppressWarnings with type: Type4 got: java.lang.SuppressWarnings
For node: "unchecked" expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: A
Cannot find matching typeVariable for: A
Cannot find matching typeVariable for: @SuppressWarnings("unchecked") public static <A>A fromXML(Class c,File file){
  XStream xStream=new XStream();
  InputStream inputStream=null;
  Reader reader=null;
  try {
    inputStream=new java.io.FileInputStream(file);
    reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
    Object object=xStream.fromXML(reader);
    if (c.isInstance(object)) {
      return (A)object;
    }
  }
 catch (  Exception exp) {
  }
 finally {
    if (false) {
      return null;
    }
    if (false) {
      return null;
    }
    reader=null;
    inputStream=null;
  }
  return null;
}

Cannot find matching typeVariable for: public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.Charset;
import com.thoughtworks.xstream.XStream;
public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: A
Cannot find matching typeVariable for: A
Cannot find matching typeVariable for: @SuppressWarnings("unchecked") public static <A>A fromXML(Class c,File file){
  XStream xStream=new XStream();
  InputStream inputStream=null;
  Reader reader=null;
  try {
    inputStream=new java.io.FileInputStream(file);
    reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
    Object object=xStream.fromXML(reader);
    if (c.isInstance(object)) {
      return (A)object;
    }
  }
 catch (  Exception exp) {
  }
 finally {
    if (false) {
      return null;
    }
    if (false) {
      return null;
    }
    reader=null;
    inputStream=null;
  }
  return null;
}

Cannot find matching typeVariable for: public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.Charset;
import com.thoughtworks.xstream.XStream;
public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: fromXML
Cannot find matching typeVariable for: @SuppressWarnings("unchecked") public static <A>A fromXML(Class c,File file){
  XStream xStream=new XStream();
  InputStream inputStream=null;
  Reader reader=null;
  try {
    inputStream=new java.io.FileInputStream(file);
    reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
    Object object=xStream.fromXML(reader);
    if (c.isInstance(object)) {
      return (A)object;
    }
  }
 catch (  Exception exp) {
  }
 finally {
    if (false) {
      return null;
    }
    if (false) {
      return null;
    }
    reader=null;
    inputStream=null;
  }
  return null;
}

Cannot find matching typeVariable for: public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.Charset;
import com.thoughtworks.xstream.XStream;
public class xstream_class_20 {
  @SuppressWarnings("unchecked") public static <A>A fromXML(  Class c,  File file){
    XStream xStream=new XStream();
    InputStream inputStream=null;
    Reader reader=null;
    try {
      inputStream=new java.io.FileInputStream(file);
      reader=new InputStreamReader(inputStream,Charset.forName("UTF-8"));
      Object object=xStream.fromXML(reader);
      if (c.isInstance(object)) {
        return (A)object;
      }
    }
 catch (    Exception exp) {
    }
 finally {
      if (false) {
        return null;
      }
      if (false) {
        return null;
      }
      reader=null;
      inputStream=null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: Class c
For node: Class c expected fqn: java.lang.Class with type: Type5 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type5 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type5 got: java.lang.Class
For node: c expected fqn: java.lang.Class with type: Type5 got: java.lang.Class
Cannot find matching typeVariable for: File file
Did not find solution for node: File file with type Type6
Did not find solution for node: File with type Type6
Did not find solution for node: File with type Type6
Did not find solution for node: file with type Type6
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: xStream=new XStream()
For node: xStream=new XStream() expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
For node: xStream expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
For node: new XStream() expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
For node: InputStream expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
For node: InputStream expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
Cannot find matching typeVariable for: inputStream=null
For node: inputStream=null expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
For node: inputStream expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
For node: null expected fqn: null with type: Type11 got: java.io.InputStream
For node: Reader expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: Reader expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
Cannot find matching typeVariable for: reader=null
For node: reader=null expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: reader expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: null expected fqn: null with type: Type13 got: java.io.Reader
For node: inputStream=new java.io.FileInputStream(file) expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
For node: inputStream expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
Did not find solution for node: new java.io.FileInputStream(file) with type Type14
Did not find solution for node: java.io.FileInputStream with type Type14
Did not find solution for node: java.io.FileInputStream with type Type14
No match for actual type QualifiedName: java.io and also not find solution for: Type15
No match for actual type SimpleName: java and also not find solution for: Type16
Cannot find matching typeVariable for: FileInputStream
Did not find solution for node: FileInputStream with type Type14
Did not find solution for node: file with type Type6
For node: reader=new InputStreamReader(inputStream,Charset.forName("UTF-8")) expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: reader expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: new InputStreamReader(inputStream,Charset.forName("UTF-8")) expected fqn: java.io.InputStreamReader with type: Type19 got: java.io.InputStreamReader
For node: InputStreamReader expected fqn: java.io.InputStreamReader with type: Type19 got: java.io.InputStreamReader
For node: InputStreamReader expected fqn: java.io.InputStreamReader with type: Type19 got: java.io.InputStreamReader
For node: inputStream expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
For node: Charset.forName("UTF-8") expected fqn: java.nio.charset.Charset with type: Type21 got: java.nio.charset.Charset
For node: Charset expected fqn: java.nio.charset.Charset with type: Type20 got: java.nio.charset.Charset
Cannot find matching typeVariable for: forName
For node: forName expected fqn: java.nio.charset.Charset with type: Type21 got: java.nio.charset.Charset
For node: "UTF-8" expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: Object expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
For node: Object expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
Cannot find matching typeVariable for: object=xStream.fromXML(reader)
For node: object=xStream.fromXML(reader) expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
For node: object expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
For node: xStream.fromXML(reader) expected fqn: java.lang.Object with type: Type28 got: java.lang.Object
For node: xStream expected fqn: com.thoughtworks.xstream.XStream with type: Type7 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: fromXML
For node: fromXML expected fqn: java.lang.Object with type: Type28 got: java.lang.Object
For node: reader expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: c.isInstance(object) expected fqn: boolean with type: Type31 got: boolean
For node: c expected fqn: java.lang.Class with type: Type5 got: java.lang.Class
Cannot find matching typeVariable for: isInstance
For node: isInstance expected fqn: boolean with type: Type31 got: boolean
For node: object expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
Did not find solution for node: (A)object with type Type2
Did not find solution for node: A with type Type2
Did not find solution for node: A with type Type2
For node: object expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
Cannot find matching typeVariable for: Exception exp
For node: Exception exp expected fqn: java.lang.Exception with type: Type34 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type34 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type34 got: java.lang.Exception
For node: exp expected fqn: java.lang.Exception with type: Type34 got: java.lang.Exception
For node: false expected fqn: boolean with type: Type35 got: boolean
Did not find solution for node: null with type Type36
For node: false expected fqn: boolean with type: Type35 got: boolean
Did not find solution for node: null with type Type37
For node: reader=null expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: reader expected fqn: java.io.Reader with type: Type12 got: java.io.Reader
For node: null expected fqn: null with type: Type38 got: java.io.Reader
For node: inputStream=null expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
For node: inputStream expected fqn: java.io.InputStream with type: Type10 got: java.io.InputStream
For node: null expected fqn: null with type: Type39 got: java.io.InputStream
Did not find solution for node: null with type Type40
{Checked=76, Analyzed=61, Unsolved=15, Incorrect=4, Correct=57}
=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=BooleanLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
com.thoughtworks.xstream.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=Assignment: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=ClassInstanceCreation: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=QualifiedName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=28, Analyzed=24, Unsolved=4, Incorrect=0, Correct=24}
java=SimpleType: {Checked=8, Analyzed=6, Unsolved=2, Incorrect=0, Correct=6}
java=SingleMemberAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=VariableDeclarationFragment: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
null=NullLiteral: {Checked=7, Analyzed=4, Unsolved=3, Incorrect=4, Correct=0}
Total stats
{Checked=76, Analyzed=61, Unsolved=15, Incorrect=4, Correct=57}
=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=BooleanLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
com.thoughtworks.xstream.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=Assignment: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=ClassInstanceCreation: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=QualifiedName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=28, Analyzed=24, Unsolved=4, Incorrect=0, Correct=24}
java=SimpleType: {Checked=8, Analyzed=6, Unsolved=2, Incorrect=0, Correct=6}
java=SingleMemberAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=VariableDeclarationFragment: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
null=NullLiteral: {Checked=7, Analyzed=4, Unsolved=3, Incorrect=4, Correct=0}
,CastExpression,0,1,0,0,1
,SimpleName,0,1,0,0,1
,SimpleType,0,1,0,0,1
boolean,BooleanLiteral,2,2,2,0,0
boolean,MethodInvocation,1,1,1,0,0
boolean,SimpleName,1,1,1,0,0
com.thoughtworks.xstream.,ClassInstanceCreation,1,1,1,0,0
com.thoughtworks.xstream.,SimpleName,4,4,4,0,0
com.thoughtworks.xstream.,SimpleType,2,2,2,0,0
com.thoughtworks.xstream.,VariableDeclarationFragment,1,1,1,0,0
java,Assignment,4,4,4,0,0
java,ClassInstanceCreation,1,2,1,0,1
java,MethodInvocation,2,2,2,0,0
java,QualifiedName,0,1,0,0,1
java,SimpleName,24,28,24,0,4
java,SimpleType,6,8,6,0,2
java,SingleMemberAnnotation,1,1,1,0,0
java,SingleVariableDeclaration,2,3,2,0,1
java,StringLiteral,2,2,2,0,0
java,VariableDeclarationFragment,3,3,3,0,0
null,NullLiteral,4,7,0,4,3
