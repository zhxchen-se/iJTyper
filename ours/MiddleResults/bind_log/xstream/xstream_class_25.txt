echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /api-resolution/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_25.java
Expect check=43
Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: xstream_class_25
Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

For node: void expected fqn: void with type: Type5 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: String arg[]
For node: String arg[] expected fqn: java.lang.String[] with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: arg expected fqn: java.lang.String[] with type: Type16 got: java.lang.String[]
Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

For node: @XStreamAlias("Object") expected fqn: com.thoughtworks.xstream.annotations.XStreamAlias with type: Type18 got: com.thoughtworks.xstream.annotations.XStreamAlias
For node: XStreamAlias expected fqn: com.thoughtworks.xstream.annotations.XStreamAlias with type: Type18 got: com.thoughtworks.xstream.annotations.XStreamAlias
For node: "Object" expected fqn: java.lang.String with type: Type17 got: java.lang.String
For node: @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) expected fqn: com.thoughtworks.xstream.annotations.XStreamConverter with type: Type23 got: com.thoughtworks.xstream.annotations.XStreamConverter
For node: XStreamConverter expected fqn: com.thoughtworks.xstream.annotations.XStreamConverter with type: Type23 got: com.thoughtworks.xstream.annotations.XStreamConverter
Cannot find matching typeVariable for: value
Cannot find matching typeVariable for: value=ToAttributedValueConverter.class
For node: value expected fqn: java.lang.Class<? extends com.thoughtworks.xstream.converters.ConverterMatcher> with type: Type23 got: com.thoughtworks.xstream.annotations.XStreamConverter
For node: ToAttributedValueConverter.class expected fqn: java.lang.Class<com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter> with type: Type20 got: java.lang.Class
Did not find solution for node: ToAttributedValueConverter with type Type19
Did not find solution for node: ToAttributedValueConverter with type Type19
Cannot find matching typeVariable for: strings
Cannot find matching typeVariable for: strings={"value"}
For node: strings expected fqn: java.lang.String[] with type: Type23 got: com.thoughtworks.xstream.annotations.XStreamConverter
Did not find solution for node: {"value"} with type Type21
For node: "value" expected fqn: java.lang.String with type: Type17 got: java.lang.String
Did not find solution for node: ResponseObject with type Type2
For node: @XStreamAlias("Type") expected fqn: com.thoughtworks.xstream.annotations.XStreamAlias with type: Type18 got: com.thoughtworks.xstream.annotations.XStreamAlias
For node: XStreamAlias expected fqn: com.thoughtworks.xstream.annotations.XStreamAlias with type: Type18 got: com.thoughtworks.xstream.annotations.XStreamAlias
For node: "Type" expected fqn: java.lang.String with type: Type17 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: type
For node: type expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: type
Cannot find matching typeVariable for: @XStreamAlias("Type") private String type;

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: {
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public static void main(String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: value
For node: value expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: value
Cannot find matching typeVariable for: private String value;

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: {
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public static void main(String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: ResponseObject
Cannot find matching typeVariable for: public ResponseObject(){
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: {
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public static void main(String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: getType
Cannot find matching typeVariable for: public String getType(){
  return type;
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: {
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public static void main(String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

For node: type expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: getValue
Cannot find matching typeVariable for: public String getValue(){
  return value;
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: @XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
  @XStreamAlias("Type") private String type;
  private String value;
  public ResponseObject(){
  }
  public String getType(){
    return type;
  }
  public String getValue(){
    return value;
  }
}

Cannot find matching typeVariable for: {
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public static void main(String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
    @XStreamAlias("Type") private String type;
    private String value;
    public ResponseObject(){
    }
    public String getType(){
      return type;
    }
    public String getValue(){
      return value;
    }
  }
}

Cannot find matching typeVariable for: public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
public class xstream_class_25 {
  public static void main(  String arg[]){
@XStreamAlias("Object") @XStreamConverter(value=ToAttributedValueConverter.class,strings={"value"}) class ResponseObject {
      @XStreamAlias("Type") private String type;
      private String value;
      public ResponseObject(){
      }
      public String getType(){
        return type;
      }
      public String getValue(){
        return value;
      }
    }
  }
}

For node: value expected fqn: java.lang.String with type: Type3 got: java.lang.String
{Checked=33, Analyzed=29, Unsolved=4, Incorrect=4, Correct=25}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=NormalAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=3, Unsolved=1, Incorrect=0, Correct=3}
com.thoughtworks.xstream.=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SingleMemberAnnotation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=ArrayInitializer: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=10, Analyzed=10, Unsolved=0, Incorrect=2, Correct=8}
java=SimpleType: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=StringLiteral: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=TypeLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=33, Analyzed=29, Unsolved=4, Incorrect=4, Correct=25}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=NormalAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=3, Unsolved=1, Incorrect=0, Correct=3}
com.thoughtworks.xstream.=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SingleMemberAnnotation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=ArrayInitializer: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=10, Analyzed=10, Unsolved=0, Incorrect=2, Correct=8}
java=SimpleType: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=StringLiteral: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=TypeLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
,SimpleName,0,1,0,0,1
com.thoughtworks.xstream.,NormalAnnotation,1,1,1,0,0
com.thoughtworks.xstream.,SimpleName,3,4,3,0,1
com.thoughtworks.xstream.,SimpleType,0,1,0,0,1
com.thoughtworks.xstream.,SingleMemberAnnotation,2,2,2,0,0
java,ArrayInitializer,0,1,0,0,1
java,SimpleName,10,10,8,2,0
java,SimpleType,5,5,5,0,0
java,SingleVariableDeclaration,1,1,0,1,0
java,StringLiteral,3,3,3,0,0
java,TypeLiteral,1,1,0,1,0
java,VariableDeclarationFragment,2,2,2,0,0
void,PrimitiveType,1,1,1,0,0
