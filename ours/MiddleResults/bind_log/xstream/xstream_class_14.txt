echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_14.java
Expect check=45
Cannot find matching typeVariable for: public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: xstream_class_14
Cannot find matching typeVariable for: public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;
public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: public class SingleValueEnumConverter extends AbstractSingleValueConverter {
  @SuppressWarnings("rawtypes") private final Class enumType;
  public SingleValueEnumConverter(  Class type){
    this.enumType=type;
  }
  public boolean canConvert(  Class c){
    return c.equals(enumType);
  }
  public Object fromString(  String value){
    return Enum.valueOf(enumType,value);
  }
}

Did not find solution for node: SingleValueEnumConverter with type Type2
For node: AbstractSingleValueConverter expected fqn: com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter with type: Type3 got: com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter
For node: AbstractSingleValueConverter expected fqn: com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter with type: Type3 got: com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter
For node: @SuppressWarnings("rawtypes") expected fqn: java.lang.SuppressWarnings with type: Type17 got: java.lang.SuppressWarnings
For node: SuppressWarnings expected fqn: java.lang.SuppressWarnings with type: Type17 got: java.lang.SuppressWarnings
For node: "rawtypes" expected fqn: java.lang.String with type: Type16 got: java.lang.String
For node: Class expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
Cannot find matching typeVariable for: enumType
For node: enumType expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
Cannot find matching typeVariable for: enumType
Cannot find matching typeVariable for: @SuppressWarnings("rawtypes") private final Class enumType;

Cannot find matching typeVariable for: public class SingleValueEnumConverter extends AbstractSingleValueConverter {
  @SuppressWarnings("rawtypes") private final Class enumType;
  public SingleValueEnumConverter(  Class type){
    this.enumType=type;
  }
  public boolean canConvert(  Class c){
    return c.equals(enumType);
  }
  public Object fromString(  String value){
    return Enum.valueOf(enumType,value);
  }
}

Cannot find matching typeVariable for: public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;
public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: SingleValueEnumConverter
Cannot find matching typeVariable for: public SingleValueEnumConverter(Class type){
  this.enumType=type;
}

Cannot find matching typeVariable for: public class SingleValueEnumConverter extends AbstractSingleValueConverter {
  @SuppressWarnings("rawtypes") private final Class enumType;
  public SingleValueEnumConverter(  Class type){
    this.enumType=type;
  }
  public boolean canConvert(  Class c){
    return c.equals(enumType);
  }
  public Object fromString(  String value){
    return Enum.valueOf(enumType,value);
  }
}

Cannot find matching typeVariable for: public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;
public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: Class type
For node: Class type expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: type expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: this.enumType=type expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: this.enumType expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
Did not find solution for node: this with type Type2
Cannot find matching typeVariable for: enumType
For node: enumType expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: type expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: boolean expected fqn: boolean with type: Type5 got: boolean
Cannot find matching typeVariable for: canConvert
Cannot find matching typeVariable for: public boolean canConvert(Class c){
  return c.equals(enumType);
}

Cannot find matching typeVariable for: public class SingleValueEnumConverter extends AbstractSingleValueConverter {
  @SuppressWarnings("rawtypes") private final Class enumType;
  public SingleValueEnumConverter(  Class type){
    this.enumType=type;
  }
  public boolean canConvert(  Class c){
    return c.equals(enumType);
  }
  public Object fromString(  String value){
    return Enum.valueOf(enumType,value);
  }
}

Cannot find matching typeVariable for: public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;
public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: Class c
For node: Class c expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: c expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: c.equals(enumType) expected fqn: boolean with type: Type18 got: boolean
For node: c expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
Cannot find matching typeVariable for: equals
For node: equals expected fqn: boolean with type: Type18 got: boolean
For node: enumType expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: Object expected fqn: java.lang.Object with type: Type6 got: java.lang.Object
For node: Object expected fqn: java.lang.Object with type: Type6 got: java.lang.Object
Cannot find matching typeVariable for: fromString
Cannot find matching typeVariable for: public Object fromString(String value){
  return Enum.valueOf(enumType,value);
}

Cannot find matching typeVariable for: public class SingleValueEnumConverter extends AbstractSingleValueConverter {
  @SuppressWarnings("rawtypes") private final Class enumType;
  public SingleValueEnumConverter(  Class type){
    this.enumType=type;
  }
  public boolean canConvert(  Class c){
    return c.equals(enumType);
  }
  public Object fromString(  String value){
    return Enum.valueOf(enumType,value);
  }
}

Cannot find matching typeVariable for: public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter;
public class xstream_class_14 {
public class SingleValueEnumConverter extends AbstractSingleValueConverter {
    @SuppressWarnings("rawtypes") private final Class enumType;
    public SingleValueEnumConverter(    Class type){
      this.enumType=type;
    }
    public boolean canConvert(    Class c){
      return c.equals(enumType);
    }
    public Object fromString(    String value){
      return Enum.valueOf(enumType,value);
    }
  }
}

Cannot find matching typeVariable for: String value
For node: String value expected fqn: java.lang.String with type: Type16 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type16 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type16 got: java.lang.String
For node: value expected fqn: java.lang.String with type: Type16 got: java.lang.String
For node: Enum.valueOf(enumType,value) expected fqn: java.lang.Enum with type: Type22 got: java.lang.Object
For node: Enum expected fqn: java.lang.Enum with type: Type21 got: java.lang.Enum
Cannot find matching typeVariable for: valueOf
For node: valueOf expected fqn: java.lang.Enum with type: Type22 got: java.lang.Object
For node: enumType expected fqn: java.lang.Class with type: Type15 got: java.lang.Class
For node: value expected fqn: java.lang.String with type: Type16 got: java.lang.String
{Checked=38, Analyzed=36, Unsolved=2, Incorrect=2, Correct=34}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=ThisExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=FieldAccess: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=17, Analyzed=17, Unsolved=0, Incorrect=1, Correct=16}
java=SimpleType: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SingleMemberAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=38, Analyzed=36, Unsolved=2, Incorrect=2, Correct=34}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=ThisExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=FieldAccess: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=17, Analyzed=17, Unsolved=0, Incorrect=1, Correct=16}
java=SimpleType: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=SingleMemberAnnotation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
,SimpleName,0,1,0,0,1
,ThisExpression,0,1,0,0,1
boolean,MethodInvocation,1,1,1,0,0
boolean,PrimitiveType,1,1,1,0,0
boolean,SimpleName,1,1,1,0,0
com.thoughtworks.xstream.,SimpleName,1,1,1,0,0
com.thoughtworks.xstream.,SimpleType,1,1,1,0,0
java,Assignment,1,1,1,0,0
java,FieldAccess,1,1,1,0,0
java,MethodInvocation,1,1,0,1,0
java,SimpleName,17,17,16,1,0
java,SimpleType,5,5,5,0,0
java,SingleMemberAnnotation,1,1,1,0,0
java,SingleVariableDeclaration,3,3,3,0,0
java,StringLiteral,1,1,1,0,0
java,VariableDeclarationFragment,1,1,1,0,0
