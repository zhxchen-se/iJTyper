echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_6.java
Expect check=50
Cannot find matching typeVariable for: public class xstream_class_6 {
  public static boolean toXML(  Object object,  File file){
    XStream xStream=new XStream(new DomDriver("UTF-8"));
    OutputStream outputStream=null;
    try {
      outputStream=new FileOutputStream(file);
      xStream.toXML(object,outputStream);
    }
 catch (    Exception exp) {
      return false;
    }
 finally {
      if (true) {
        return false;
      }
      outputStream=null;
    }
    return true;
  }
}

Cannot find matching typeVariable for: xstream_class_6
Cannot find matching typeVariable for: public class xstream_class_6 {
  public static boolean toXML(  Object object,  File file){
    XStream xStream=new XStream(new DomDriver("UTF-8"));
    OutputStream outputStream=null;
    try {
      outputStream=new FileOutputStream(file);
      xStream.toXML(object,outputStream);
    }
 catch (    Exception exp) {
      return false;
    }
 finally {
      if (true) {
        return false;
      }
      outputStream=null;
    }
    return true;
  }
}

Cannot find matching typeVariable for: import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
public class xstream_class_6 {
  public static boolean toXML(  Object object,  File file){
    XStream xStream=new XStream(new DomDriver("UTF-8"));
    OutputStream outputStream=null;
    try {
      outputStream=new FileOutputStream(file);
      xStream.toXML(object,outputStream);
    }
 catch (    Exception exp) {
      return false;
    }
 finally {
      if (true) {
        return false;
      }
      outputStream=null;
    }
    return true;
  }
}

For node: boolean expected fqn: boolean with type: Type2 got: boolean
Cannot find matching typeVariable for: toXML
Cannot find matching typeVariable for: public static boolean toXML(Object object,File file){
  XStream xStream=new XStream(new DomDriver("UTF-8"));
  OutputStream outputStream=null;
  try {
    outputStream=new FileOutputStream(file);
    xStream.toXML(object,outputStream);
  }
 catch (  Exception exp) {
    return false;
  }
 finally {
    if (true) {
      return false;
    }
    outputStream=null;
  }
  return true;
}

Cannot find matching typeVariable for: public class xstream_class_6 {
  public static boolean toXML(  Object object,  File file){
    XStream xStream=new XStream(new DomDriver("UTF-8"));
    OutputStream outputStream=null;
    try {
      outputStream=new FileOutputStream(file);
      xStream.toXML(object,outputStream);
    }
 catch (    Exception exp) {
      return false;
    }
 finally {
      if (true) {
        return false;
      }
      outputStream=null;
    }
    return true;
  }
}

Cannot find matching typeVariable for: import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
public class xstream_class_6 {
  public static boolean toXML(  Object object,  File file){
    XStream xStream=new XStream(new DomDriver("UTF-8"));
    OutputStream outputStream=null;
    try {
      outputStream=new FileOutputStream(file);
      xStream.toXML(object,outputStream);
    }
 catch (    Exception exp) {
      return false;
    }
 finally {
      if (true) {
        return false;
      }
      outputStream=null;
    }
    return true;
  }
}

Cannot find matching typeVariable for: Object object
Did not find solution for node: Object object with type Type3
Did not find solution for node: Object with type Type3
Did not find solution for node: Object with type Type3
Did not find solution for node: object with type Type3
Cannot find matching typeVariable for: File file
For node: File file expected fqn: java.io.File with type: Type4 got: java.io.File
For node: File expected fqn: java.io.File with type: Type4 got: java.io.File
For node: File expected fqn: java.io.File with type: Type4 got: java.io.File
For node: file expected fqn: java.io.File with type: Type4 got: java.io.File
Did not find solution for node: XStream with type Type5
Did not find solution for node: XStream with type Type5
Cannot find matching typeVariable for: xStream=new XStream(new DomDriver("UTF-8"))
Did not find solution for node: xStream=new XStream(new DomDriver("UTF-8")) with type Type5
Did not find solution for node: xStream with type Type5
Did not find solution for node: new XStream(new DomDriver("UTF-8")) with type Type5
Did not find solution for node: XStream with type Type5
Did not find solution for node: XStream with type Type5
Did not find solution for node: new DomDriver("UTF-8") with type Type6
Did not find solution for node: DomDriver with type Type6
Did not find solution for node: DomDriver with type Type6
Did not find solution for node: "UTF-8" with type Type7
Did not find solution for node: OutputStream with type Type13
Did not find solution for node: OutputStream with type Type13
Cannot find matching typeVariable for: outputStream=null
Did not find solution for node: outputStream=null with type Type13
Did not find solution for node: outputStream with type Type13
Did not find solution for node: null with type Type14
Did not find solution for node: outputStream=new FileOutputStream(file) with type Type13
Did not find solution for node: outputStream with type Type13
Did not find solution for node: new FileOutputStream(file) with type Type15
Did not find solution for node: FileOutputStream with type Type15
Did not find solution for node: FileOutputStream with type Type15
For node: file expected fqn: java.io.File with type: Type4 got: java.io.File
For node: xStream.toXML(object,outputStream) expected fqn: void with type: Type18 got: void
Did not find solution for node: xStream with type Type5
Cannot find matching typeVariable for: toXML
For node: toXML expected fqn: void with type: Type18 got: void
Did not find solution for node: object with type Type3
Did not find solution for node: outputStream with type Type13
Cannot find matching typeVariable for: Exception exp
For node: Exception exp expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: exp expected fqn: java.lang.Exception with type: Type22 got: java.lang.Exception
For node: false expected fqn: boolean with type: Type2 got: boolean
For node: true expected fqn: boolean with type: Type2 got: boolean
For node: false expected fqn: boolean with type: Type2 got: boolean
Did not find solution for node: outputStream=null with type Type13
Did not find solution for node: outputStream with type Type13
Did not find solution for node: null with type Type23
For node: true expected fqn: boolean with type: Type2 got: boolean
{Checked=47, Analyzed=16, Unsolved=31, Incorrect=0, Correct=16}
boolean=BooleanLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
boolean=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=Assignment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=14, Analyzed=5, Unsolved=9, Incorrect=0, Correct=5}
java=SimpleType: {Checked=5, Analyzed=2, Unsolved=3, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=47, Analyzed=16, Unsolved=31, Incorrect=0, Correct=16}
boolean=BooleanLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
boolean=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=5, Analyzed=0, Unsolved=5, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=Assignment: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=ClassInstanceCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=14, Analyzed=5, Unsolved=9, Incorrect=0, Correct=5}
java=SimpleType: {Checked=5, Analyzed=2, Unsolved=3, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
java=StringLiteral: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
null=NullLiteral: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
void=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean,BooleanLiteral,4,4,4,0,0
boolean,PrimitiveType,1,1,1,0,0
com.thoughtworks.xstream.,ClassInstanceCreation,0,2,0,0,2
com.thoughtworks.xstream.,SimpleName,0,5,0,0,5
com.thoughtworks.xstream.,SimpleType,0,3,0,0,3
com.thoughtworks.xstream.,VariableDeclarationFragment,0,1,0,0,1
java,Assignment,0,2,0,0,2
java,ClassInstanceCreation,0,1,0,0,1
java,SimpleName,5,14,5,0,9
java,SimpleType,2,5,2,0,3
java,SingleVariableDeclaration,2,3,2,0,1
java,StringLiteral,0,1,0,0,1
java,VariableDeclarationFragment,0,1,0,0,1
null,NullLiteral,0,2,0,0,2
void,MethodInvocation,1,1,1,0,0
void,SimpleName,1,1,1,0,0
