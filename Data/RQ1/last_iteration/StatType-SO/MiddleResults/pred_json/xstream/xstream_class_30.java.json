[
  {
    "originalCode": "public class xstream_class_30 implements Converter",
    "FQNCode": "public class xstream_class_30 implements <MASK>.Converter",
    "fqnToken": [
      [
        "com.thoughtworks.xstream.converters.Converter",
        "com.thoughtworks.xstream.converters.collections.Converter",
        "com.thoughtworks.xstream.convertersters.Converter",
        "com.thoughtworks.xstream.converters.ters.Converter",
        "com.thoughtworks.xstream.conver.Converter",
        "com.thoughtworks.xstream.converters.colavverters.Converter",
        "com.thoughtworks.xstream.converters.collections.verters.Converter",
        "com.thoughtworks.xstream.converters.xson.Converters.Converter",
        "java.io.Converter",
        "com.thoughtworks.xstream.converters.collections.Stream.converter.Converter",
        "com.thoughtworks.xstream.converters.collections.ConverConConverter.Converter",
        "com.thoughtworks.xstream.io.Converter",
        "com.thoughtworks.xstream.converters.collections.endedconReferencetersConverter.Converter",
        "com.thoughtworks.xstream.Converter",
        "com.thoughtworks.xstream.converters.colav.ean.Converablearshverter.Converter",
        "com.thoughtworks.xconvert.Converter",
        "com.time.conver.Converter",
        "j.util.ters.Converter",
        "java.mvert.Converter"
      ]
    ]
  },
  {
    "originalCode": "public void marshal(Object o, HierarchicalStreamWriter hierarchicalStreamWriter, MarshallingContext marshallingContext)",
    "FQNCode": "public void marshal(Object o, <MASK>.HierarchicalStreamWriter hierarchicalStreamWriter, <MASK>.MarshallingContext marshallingContext)",
    "fqnToken": [
      [
        "com.thoughtworks.xstream.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.path.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.serialier.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.path.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.ioical.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.path.ioier.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.io.xml.j.H.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.json.Jier.io.HierarchicalStreamWriter",
        "java.io.HierarchicalStreamWriter",
        "com.thoughtworks.stream.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.json.Xier.Imallizer.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.colH.archStreamverter.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.colHHioizableMarshverio.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.colsonHierarchicalStream.io.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.xson.io.icalarch.ExtTest.HierarchicalStreamWriter",
        "com.thoughtworks.stream.HierarchicalStreamWriter",
        "com.thoughtworks.xstream.core.ters.xsonHstream.ReferenceStreamter.allTest.HierarchicalStreamWriter",
        "com.util.stream.HierarchicalStreamWriter",
        "java.iostream.HierarchicalStreamWriter"
      ],
      [
        "com.thoughtworks.xstream.converters.MarshallingContext",
        "com.thoughtworks.xstream.convertersters.MarshallingContext",
        "com.thoughtworks.xstream.mver.MarshallingContext",
        "com.thoughtworks.xstream.converters.coler.MarshallingContext",
        "com.thoughtworks.xstream.convertersverters.MarshallingContext",
        "com.thoughtworks.xstream.core.MarshallingContext",
        "com.thoughtworks.xstream.converters.stream.verer.MarshallingContext",
        "com.thoughtworks.xstream.coreverters.colsonarshallter.MarshallingContext",
        "com.thoughtworks.xstream.coreverters.Xson.arshverter.MarshallingContext",
        "com.thoughtworks.xstream.converters.col.Marsh.avverter.MarshallingContext",
        "java.io.MarshallingContext",
        "com.thoughtworks.xstream.MarshallingContext",
        "com.thoughtworks.xstream.converters.colson.endedRecordConmarshverter.MarshallingContext",
        "com.thoughtworks.xstream.con.ters.json.java.ConverterConverter.MarshallingContext",
        "org.mphony.MarshallingContext",
        "com.Marshtworks.stream.MarshallingContext",
        "com.though.orks.streamxfer.MarshallingContext",
        "j.time.er.MarshallingContext"
      ]
    ]
  },
  {
    "originalCode": "public Object unmarshal(HierarchicalStreamReader hierarchicalStreamReader, UnmarshallingContext unmarshallingContext)",
    "FQNCode": "public Object unmarshal(<MASK>.HierarchicalStreamReader hierarchicalStreamReader, <MASK>.UnmarshallingContext unmarshallingContext)",
    "fqnToken": [
      [
        "com.thoughtworks.xstream.io.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.path.HierarchicalStreamReader",
        "java.io.HierarchicalStreamReader",
        "com.thoughtworks.xstream.HierarchicalStreamReader",
        "com.thoughtworks.xstream.ioax.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.path.io.HierarchicalStreamReader",
        "com.thoughtworks.stream.io.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.json.Primm.io.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.xml.jallstream.HierarchicalStreamReader",
        "com.thoughtworks.xstream.io.ters.refier.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.ters.XierMarsharchStDocumentter.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.ters.xlectionsHierarchMverter.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.m.colsonHierarchicalStream.io.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.ters.xsonHier.ReferenceReferenceReferencearshallTest.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.xml.jsonHier.ToName.AdaptTest.HierarchicalStreamReader",
        "com.thoughtworks.stream.HierarchicalStreamReader",
        "com.thoughtworks.xstream.core.ters.xsonHStream.ToReferenceReferencearchververTest.HierarchicalStreamReader",
        "j.util.stream.HierarchicalStreamReader",
        "io.ioio.HierarchicalStreamReader"
      ],
      [
        "com.thoughtworks.xstream.converters.UnmarshallingContext",
        "com.thoughtworks.xstream.conververters.UnmarshallingContext",
        "com.thoughtworks.xstream.mver.UnmarshallingContext",
        "com.thoughtworks.xstream.convertersverters.UnmarshallingContext",
        "com.thoughtworks.xstream.converters.exter.UnmarshallingContext",
        "com.thoughtworks.xstream.con.UnmarshallingContext",
        "com.thoughtworks.xstream.converters.xson.arshverters.UnmarshallingContext",
        "com.thoughtworks.xstream.converters.lavverer.UnmarshallingContext",
        "com.thoughtworks.xstream.converters.xsonarshverter.UnmarshallingContext",
        "com.thoughtworks.xstream.UnmarshallingContext",
        "com.thoughtworks.xstream.con.ters.json.ended.ConReferenceanarshverter.UnmarshallingContext",
        "java.widget.UnmarshallingContext",
        "com.thoughtworks.xxvert.UnmarshallingContext",
        "com.thoughtwxml.bind.UnmarshallingContext",
        "org.mtw.UnmarshallingContext",
        "com.time.er.UnmarshallingContext"
      ]
    ]
  }
]