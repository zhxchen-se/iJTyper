[
  {
    "originalCode": "private DataOutputStream dataStream = null;",
    "FQNCode": "private <MASK>.DataOutputStream dataStream = null;",
    "fqnToken": [
      [
        "java.io.DataOutputStream",
        "java.ioio.DataOutputStream",
        "java.io.zip.DataOutputStream",
        "com.sun.xml.internal.messaging.saaj.packaging.mime.ty.MimeUtConnection.DataOutputStream",
        "com.sun.xml.internal.messaging.saaj.packaging.mime.internetserverNonMLBUtResponse.DataOutputStream",
        "com.sun.xml.internal.messaging.saaj.packaging.Httpime.internethttp.riimeipportSession.DataOutputStream",
        "com.android.internal.util.wsDataax.DataOutputStream",
        "android.io.obex.DataOutputStream",
        "com.android.internal.telestream.DataOutputStream",
        "org.android.http.BA.DataOutputStream",
        "org.om.internal.BA.portable.DataOutputStream"
      ]
    ]
  },
  {
    "originalCode": "File uploadFile = new File(pictureFileName);",
    "FQNCode": "<MASK>.File uploadFile = new <MASK>.File(pictureFileName);",
    "fqnToken": [
      [
        "java.io.File",
        "java.util.zip.File",
        "java.ioio.File",
        "org.android.tools.aw.uni.Upload.File",
        "j.ax.print.ant.Folder.File"
      ],
      [
        "java.io.File",
        "java.io.zip.File",
        "java.nio.file.File",
        "org.gradclipse.file.Path.File",
        "com.android.tools.ob.uniPnp.File"
      ]
    ]
  },
  {
    "originalCode": "FileInputStream fileInputStream = new FileInputStream(uploadFile);",
    "FQNCode": "<MASK>.FileInputStream fileInputStream = new <MASK>.FileInputStream(uploadFile);",
    "fqnToken": [
      [
        "java.io.FileInputStream",
        "java.util.util.FileInputStream",
        "java.ioio.FileInputStream",
        "com.sun.xml.internal.messaging.saaj.mimepull.DataFile.FileInputStream",
        "java.n.http.util.FileInputStream",
        "com.apache.www.client.uni.util.FileInputStream"
      ],
      [
        "java.io.FileInputStream",
        "java.util.io.FileInputStream",
        "java.ioio.FileInputStream",
        "com.android.www.file.uni.file.FileInputStream",
        "org.n.file.util.FileInputStream",
        "sun.net.www.protocol.file.FileInputStream"
      ]
    ]
  },
  {
    "originalCode": "URL connectURL = new URL(postUrl);",
    "FQNCode": "<MASK>.URL connectURL = new <MASK>.URL(postUrl);",
    "fqnToken": [
      [
        "java.net.URL",
        "java.net.URL.URL",
        "java.nett.URL",
        "sun.net.jet.URL",
        "org.net.http.auth.URL",
        "org.apache.www.protocol.jar.URL",
        "org.apache.www.java.ers.URL"
      ],
      [
        "java.net.URL",
        "java.net.URL.URL",
        "java.netles.URL",
        "sun.net.jet.URL",
        "org.net.http.auth.URL",
        "sun.net.www.ac.file.URL"
      ]
    ]
  },
  {
    "originalCode": "HttpURLConnection conn = (HttpURLConnection)connectURL.openConnection();",
    "FQNCode": "<MASK>.HttpURLConnection conn = (<MASK>.HttpURLConnection)connectURL.openConnection();",
    "fqnToken": [
      [
        "java.net.HttpURLConnection",
        "org.net.http.HttpURLConnection",
        "sun.net.httpserver.HttpURLConnection",
        "org.net..HttpURLConnection",
        "com.sun.net.proterver.HttpURLConnection",
        "j.net.net.conn.HttpURLConnection",
        "sun.net.www.protocol.http.HttpURLConnection",
        "org.net.www.impl.http.HttpURLConnection"
      ],
      [
        "java.net.HttpURLConnection",
        "org.net.http.HttpURLConnection",
        "java.net.httpserver.HttpURLConnection",
        "j.net.net.ssl.HttpURLConnection",
        "sun.net.www.protocol.http.HttpURLConnection",
        "java.net..HttpURLConnection",
        "com.sun.net.proterver.HttpURLConnection",
        "sun.net.www.ws.http.HttpURLConnection"
      ]
    ]
  },
  {
    "originalCode": "dataStream = new DataOutputStream(conn.getOutputStream());",
    "FQNCode": "dataStream = new <MASK>.DataOutputStream(conn.getOutputStream());",
    "fqnToken": [
      [
        "java.io.DataOutputStream",
        "java.ioio.DataOutputStream",
        "com.sun.xml.internal.messaging.saaj.packaging.mime.DataFile.DataOutputStream",
        "com.sun.xml.internal.messaging.saaj.mimeCodivers.DataOutputStream",
        "sun.security.zip.DataOutputStream",
        "com.sun.xml.internal.messaging.vnet.mimepull.DataOutputStream",
        "com.sun.xml.internal.messaging.saaj.util.DataOutputStream",
        "sun.io.obex.DataOutputStream",
        "com.sun.activation.chstream.DataOutputStream",
        "com.sun.xml.internal.messaging.encajutable.DataOutputStream",
        "org.apache.http.util.DataOutputStream"
      ]
    ]
  },
  {
    "originalCode": "catch (MalformedURLException mue)",
    "FQNCode": "catch (<MASK>.MalformedURLException mue)",
    "fqnToken": [
      [
        "java.net.MalformedURLException",
        "java.net.URL.MalformedURLException",
        "java.net.Http.params.MalformedURLException",
        "java.rmi.MalformedURLException",
        "java.net.nConnection.MalformedURLException",
        "org.net.www.java.net.MalformedURLException",
        "org.sun.tools.client.uni.ri.MalformedURLException",
        "org.e.www.protocol.net.MalformedURLException",
        "org.apache.harm.apache.urljar.url.MalformedURLException"
      ]
    ]
  },
  {
    "originalCode": "catch (IOException ioe)",
    "FQNCode": "catch (<MASK>.IOException ioe)",
    "fqnToken": [
      [
        "java.io.IOException",
        "java.io.io.IOException",
        "java.ioio.IOException",
        "java.xmlio.file.IOException",
        "com.sun.tools.javac.j.JFileConfiguration.IOException",
        "org.sun.tools.G.HttpRotStream.IOException"
      ]
    ]
  },
  {
    "originalCode": "private String getResponse(HttpURLConnection conn)",
    "FQNCode": "private String getResponse(<MASK>.HttpURLConnection conn)",
    "fqnToken": [
      [
        "java.net.HttpURLConnection",
        "org.net.http.HttpURLConnection",
        "sun.net.httpserver.HttpURLConnection",
        "com.sun.net.protocol.HttpURLConnection",
        "sun.net.www.ssl.HttpURLConnection",
        "org.net.www.protocol.http.HttpURLConnection",
        "org.net..HttpURLConnection",
        "sun.net.www.ws.http.HttpURLConnection"
      ]
    ]
  },
  {
    "originalCode": "DataInputStream dis = new DataInputStream(conn.getInputStream());",
    "FQNCode": "<MASK>.DataInputStream dis = new <MASK>.DataInputStream(conn.getInputStream());",
    "fqnToken": [
      [
        "java.io.DataInputStream",
        "java.nio.DataInputStream",
        "java.ax.zip.DataInputStream",
        "com.sun.xml.util.ws.parser.DataInputStream",
        "sun.net.inputex.DataInputStream",
        "com.sun.xml.internal.messaging.saaj.packaging.mime.PboxPerimeimeUtConnection.DataInputStream",
        "com.android.xml.internal.messaging.sanetFilem.DataInputStream",
        "com.sun.xml.internal.messaging.saaj.packaging.mime.Phttp.ClientimeMDataportutil.DataInputStream",
        "org.apache.httpencutil.DataInputStream",
        "org.omio.datPlransable.DataInputStream",
        "com.om.back.portstream.DataInputStream"
      ],
      [
        "java.io.DataInputStream",
        "java.nio.DataInputStream",
        "j.apache.zip.DataInputStream",
        "sun.net.inputex.DataInputStream",
        "org.apache.http.util.DataInputStream",
        "com.sun.xml.internal.messaging.saajocol.aging.mime.portMOutputRConnection.DataInputStream",
        "com.sun.xml.internal.messaging.sa.ocol.aging.mime.PhttpURLURLClConnectionimeDataTransConnection.DataInputStream",
        "com.sun.back.protstream.DataInputStream"
      ]
    ]
  },
  {
    "originalCode": "private String getResponseOrig(HttpURLConnection conn)",
    "FQNCode": "private String getResponseOrig(<MASK>.HttpURLConnection conn)",
    "fqnToken": [
      [
        "java.net.HttpURLConnection",
        "org.net.http.HttpURLConnection",
        "sun.net.httpserver.HttpURLConnection",
        "org.net.net.http.HttpURLConnection",
        "com.sun.net.protocol.HttpURLConnection",
        "com.sun.net.internal.internal.transport.http.HttpConnection.HttpURLConnection",
        "org.net.www.ws.http.HttpURLConnection",
        "com.sun.xml.internal.ws.transportprotocol.client.HttplegateportURLConnection.HttpURLConnection",
        "com.sun.xml.internal.internal.trans.protocol.https.DelegateHttTransaction.Connection.HttpURLConnection",
        "com.sun.net.internal.internal.trans.protocol.https.DelegateNTransTransConnection.HttpURLConnection",
        "org.tele..HttpURLConnection",
        "com.sun.xml.internal.internal.trans.protocol.client.URLlegate.HttpURLConnection",
        "com.sun.xml.internal.ws.transportprotocol.client.ConnectionimeTransConnection.HttpURLConnection",
        "com.sun.xml.internal.internal.www.protocol.https.Delegate.ClientConnection.URLConnection.HttpURLConnection",
        "com.sun.xml.internal.internal.transportprotocol.httpsURLDe.Context.HttpURLConnection",
        "com.sun.xml.internal.internal.www.protocol.https.Delegate.URLClientM.URLConnection.HttpURLConnection"
      ]
    ]
  },
  {
    "originalCode": "InputStream is = null;",
    "FQNCode": "<MASK>.InputStream is = null;",
    "fqnToken": [
      [
        "java.io.InputStream",
        "java.io.io.InputStream",
        "java.ioio.InputStream",
        "org.http.sax.InputStream",
        "java.n.http.Stream.InputStream",
        "org.om.http.http.portable.InputStream",
        "org.om.http.utilportable.InputStream",
        "java.apache.http.httpsable.InputStream"
      ]
    ]
  },
  {
    "originalCode": "FileInputStream fis)",
    "FQNCode": "<MASK>.FileInputStream fis)",
    "fqnToken": [
      [
        "java.io.FileInputStream",
        "java.ioio.FileInputStream",
        "java.io.zip.FileInputStream",
        "com.sun.xml.internal.messaging.saaj.packaging.mimeDatautil.FileInputStream",
        "com.sun.xml.internal.messaging.saaj.packompullSetDataFiles.FileInputStream",
        "com.sun.xml.internalphonymessaging.saaj.packaging.mime.Datautil.FileInputStream",
        "com.sun.xml.internal.org.encvnet.mimepull.FileInputStream",
        "com.sun.xml.internal.messaging.saaj.mom.cff.FileInputStream",
        "com.sun.xml.internal.messaging.saaj.util.FileInputStream",
        "com.android.xml.internalphonymessaging.saaj.packaging.mOutput.File.Dataession.FileInputStream",
        "com.android.xml.internal.messaging.saaj.packaging.mime.internetioMimeUtFiles.FileInputStream",
        "com.android.xml.internal.messaging.saaj.packaging.mime.internetio.Choad.Dataio.FileInputStream",
        "com.android.xml.internal.messaging.saaj.packaging.mime.internetio.in.istent.Datautil.FileInputStream",
        "com.android.xml.internal.messaging.saaj.packaging.mime.internetio.Component.edBack.Datautil.FileInputStream",
        "com.android.xml.internal.messaging.saaj.packaging.mime.internetio.R.lectionipodingMMtom.Stream.FileInputStream",
        "com.android.xml.internal.messaging.saaj.packaging.mime.internetio.Component.lectionip.Byte.MManager.Stream.FileInputStream",
        "java.awio.datOP.stream.FileInputStream"
      ]
    ]
  }
]