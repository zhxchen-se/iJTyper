echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xt4.java
Expect check=22
Cannot find matching typeVariable for: public class xt4 {
  public static void h1(){
    XStream xstream=new XStream(new JettisonMappedXmlDriver());
    xstream.alias("entity",Entity[].class);
  }
}

Cannot find matching typeVariable for: xt4
Cannot find matching typeVariable for: public class xt4 {
  public static void h1(){
    XStream xstream=new XStream(new JettisonMappedXmlDriver());
    xstream.alias("entity",Entity[].class);
  }
}

Cannot find matching typeVariable for: package java.xstream;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver;
import javax.swing.text.html.parser.Entity;
import java.util.Arrays;
public class xt4 {
  public static void h1(){
    XStream xstream=new XStream(new JettisonMappedXmlDriver());
    xstream.alias("entity",Entity[].class);
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: h1
Cannot find matching typeVariable for: public static void h1(){
  XStream xstream=new XStream(new JettisonMappedXmlDriver());
  xstream.alias("entity",Entity[].class);
}

Cannot find matching typeVariable for: public class xt4 {
  public static void h1(){
    XStream xstream=new XStream(new JettisonMappedXmlDriver());
    xstream.alias("entity",Entity[].class);
  }
}

Cannot find matching typeVariable for: package java.xstream;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver;
import javax.swing.text.html.parser.Entity;
import java.util.Arrays;
public class xt4 {
  public static void h1(){
    XStream xstream=new XStream(new JettisonMappedXmlDriver());
    xstream.alias("entity",Entity[].class);
  }
}

For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: xstream=new XStream(new JettisonMappedXmlDriver())
For node: xstream=new XStream(new JettisonMappedXmlDriver()) expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
For node: xstream expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
For node: new XStream(new JettisonMappedXmlDriver()) expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
For node: new JettisonMappedXmlDriver() expected fqn: com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver with type: Type4 got: com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver
For node: JettisonMappedXmlDriver expected fqn: com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver with type: Type4 got: com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver
For node: JettisonMappedXmlDriver expected fqn: com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver with type: Type4 got: com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver
For node: xstream.alias("entity",Entity[].class) expected fqn: void with type: Type12 got: void
For node: xstream expected fqn: com.thoughtworks.xstream.XStream with type: Type3 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: alias
For node: alias expected fqn: void with type: Type12 got: void
For node: "entity" expected fqn: java.lang.String with type: Type8 got: java.lang.String
For node: Entity[].class expected fqn: java.lang.Class<javax.swing.text.html.parser.Entity[]> with type: Type11 got: java.lang.Class
Did not find solution for node: Entity[] with type Type10
Did not find solution for node: Entity with type Type9
Did not find solution for node: Entity with type Type9
{Checked=19, Analyzed=16, Unsolved=3, Incorrect=1, Correct=15}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=SimpleName: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ArrayType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=TypeLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
void=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=19, Analyzed=16, Unsolved=3, Incorrect=1, Correct=15}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=SimpleName: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ArrayType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleType: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=TypeLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
void=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
com.thoughtworks.xstream.,ClassInstanceCreation,2,2,2,0,0
com.thoughtworks.xstream.,SimpleName,5,5,5,0,0
com.thoughtworks.xstream.,SimpleType,3,3,3,0,0
com.thoughtworks.xstream.,VariableDeclarationFragment,1,1,1,0,0
java,ArrayType,0,1,0,0,1
java,SimpleName,0,1,0,0,1
java,SimpleType,0,1,0,0,1
java,StringLiteral,1,1,1,0,0
java,TypeLiteral,1,1,0,1,0
void,MethodInvocation,1,1,1,0,0
void,PrimitiveType,1,1,1,0,0
void,SimpleName,1,1,1,0,0
