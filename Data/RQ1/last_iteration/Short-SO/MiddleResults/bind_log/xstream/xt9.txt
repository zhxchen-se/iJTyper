echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xt9.java
Expect check=29
Cannot find matching typeVariable for: public class xt9 {
  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  Result outputTarget=new StreamResult(outputStream);
  Transformer t=TransformerFactory.newInstance().newTransformer();
  public xt9() throws TransformerConfigurationException {
  }
}

Did not find solution for node: xt9 with type Type1
For node: ByteArrayOutputStream expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
For node: ByteArrayOutputStream expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
Cannot find matching typeVariable for: outputStream=new ByteArrayOutputStream()
For node: outputStream=new ByteArrayOutputStream() expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
For node: outputStream expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
For node: new ByteArrayOutputStream() expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
For node: ByteArrayOutputStream expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
For node: ByteArrayOutputStream expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
For node: Result expected fqn: javax.xml.transform.Result with type: Type7 got: javax.xml.transform.Result
For node: Result expected fqn: javax.xml.transform.Result with type: Type7 got: javax.xml.transform.Result
Cannot find matching typeVariable for: outputTarget=new StreamResult(outputStream)
For node: outputTarget=new StreamResult(outputStream) expected fqn: javax.xml.transform.Result with type: Type7 got: javax.xml.transform.Result
For node: outputTarget expected fqn: javax.xml.transform.Result with type: Type7 got: javax.xml.transform.Result
For node: new StreamResult(outputStream) expected fqn: javax.xml.transform.stream.StreamResult with type: Type11 got: javax.xml.transform.stream.StreamResult
For node: StreamResult expected fqn: javax.xml.transform.stream.StreamResult with type: Type11 got: javax.xml.transform.stream.StreamResult
For node: StreamResult expected fqn: javax.xml.transform.stream.StreamResult with type: Type11 got: javax.xml.transform.stream.StreamResult
For node: outputStream expected fqn: java.io.ByteArrayOutputStream with type: Type6 got: java.io.ByteArrayOutputStream
For node: Transformer expected fqn: javax.xml.transform.Transformer with type: Type8 got: javax.xml.transform.Transformer
For node: Transformer expected fqn: javax.xml.transform.Transformer with type: Type8 got: javax.xml.transform.Transformer
Cannot find matching typeVariable for: t=TransformerFactory.newInstance().newTransformer()
For node: t=TransformerFactory.newInstance().newTransformer() expected fqn: javax.xml.transform.Transformer with type: Type8 got: javax.xml.transform.Transformer
For node: t expected fqn: javax.xml.transform.Transformer with type: Type8 got: javax.xml.transform.Transformer
For node: TransformerFactory.newInstance().newTransformer() expected fqn: javax.xml.transform.Transformer with type: Type17 got: javax.xml.transform.Transformer
For node: TransformerFactory.newInstance() expected fqn: javax.xml.transform.TransformerFactory with type: Type15 got: javax.xml.transform.TransformerFactory
For node: TransformerFactory expected fqn: javax.xml.transform.TransformerFactory with type: Type14 got: javax.xml.transform.TransformerFactory
Cannot find matching typeVariable for: newInstance
For node: newInstance expected fqn: javax.xml.transform.TransformerFactory with type: Type15 got: javax.xml.transform.TransformerFactory
Cannot find matching typeVariable for: newTransformer
For node: newTransformer expected fqn: javax.xml.transform.Transformer with type: Type17 got: javax.xml.transform.Transformer
Cannot find matching typeVariable for: xt9
Cannot find matching typeVariable for: public xt9() throws TransformerConfigurationException {
}

Cannot find matching typeVariable for: public class xt9 {
  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  Result outputTarget=new StreamResult(outputStream);
  Transformer t=TransformerFactory.newInstance().newTransformer();
  public xt9() throws TransformerConfigurationException {
  }
}

Cannot find matching typeVariable for: package java.xstream;
import javax.xml.transform.*;
import javax.xml.transform.stream.StreamResult;
import java.io.ByteArrayOutputStream;
public class xt9 {
  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  Result outputTarget=new StreamResult(outputStream);
  Transformer t=TransformerFactory.newInstance().newTransformer();
  public xt9() throws TransformerConfigurationException {
  }
}

For node: TransformerConfigurationException expected fqn: javax.xml.transform.TransformerConfigurationException with type: Type19 got: javax.xml.transform.TransformerConfigurationException
For node: TransformerConfigurationException expected fqn: javax.xml.transform.TransformerConfigurationException with type: Type19 got: javax.xml.transform.TransformerConfigurationException
{Checked=27, Analyzed=26, Unsolved=1, Incorrect=0, Correct=26}
java=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleName: {Checked=14, Analyzed=13, Unsolved=1, Incorrect=0, Correct=13}
java=SimpleType: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=VariableDeclarationFragment: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
Total stats
{Checked=27, Analyzed=26, Unsolved=1, Incorrect=0, Correct=26}
java=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleName: {Checked=14, Analyzed=13, Unsolved=1, Incorrect=0, Correct=13}
java=SimpleType: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=VariableDeclarationFragment: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java,ClassInstanceCreation,2,2,2,0,0
java,MethodInvocation,2,2,2,0,0
java,SimpleName,13,14,13,0,1
java,SimpleType,6,6,6,0,0
java,VariableDeclarationFragment,3,3,3,0,0
