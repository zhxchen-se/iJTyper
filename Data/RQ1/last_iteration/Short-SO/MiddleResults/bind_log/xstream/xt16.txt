echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xt16.java
Expect check=29
Cannot find matching typeVariable for: public class xt16 {
  public static Object Load(  String xmlPath){
    File FileIn=new File(xmlPath);
    if (FileIn.exists()) {
      DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
      return null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: xt16
Cannot find matching typeVariable for: public class xt16 {
  public static Object Load(  String xmlPath){
    File FileIn=new File(xmlPath);
    if (FileIn.exists()) {
      DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
      return null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: package java.xstream;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import com.thoughtworks.xstream.mapper.CannotResolveClassException;
import com.thoughtworks.xstream.mapper.MapperWrapper;
import org.dom4j.persistence.DocumentMarshalling;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.File;
import java.io.StringWriter;
public class xt16 {
  public static Object Load(  String xmlPath){
    File FileIn=new File(xmlPath);
    if (FileIn.exists()) {
      DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
      return null;
    }
    return null;
  }
}

For node: Object expected fqn: java.lang.Object with type: Type2 got: java.lang.Object
For node: Object expected fqn: java.lang.Object with type: Type2 got: java.lang.Object
Cannot find matching typeVariable for: Load
Cannot find matching typeVariable for: public static Object Load(String xmlPath){
  File FileIn=new File(xmlPath);
  if (FileIn.exists()) {
    DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
    return null;
  }
  return null;
}

Cannot find matching typeVariable for: public class xt16 {
  public static Object Load(  String xmlPath){
    File FileIn=new File(xmlPath);
    if (FileIn.exists()) {
      DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
      return null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: package java.xstream;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import com.thoughtworks.xstream.mapper.CannotResolveClassException;
import com.thoughtworks.xstream.mapper.MapperWrapper;
import org.dom4j.persistence.DocumentMarshalling;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.File;
import java.io.StringWriter;
public class xt16 {
  public static Object Load(  String xmlPath){
    File FileIn=new File(xmlPath);
    if (FileIn.exists()) {
      DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
      return null;
    }
    return null;
  }
}

Cannot find matching typeVariable for: String xmlPath
For node: String xmlPath expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: xmlPath expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: File expected fqn: java.io.File with type: Type4 got: java.io.File
For node: File expected fqn: java.io.File with type: Type4 got: java.io.File
Cannot find matching typeVariable for: FileIn=new File(xmlPath)
For node: FileIn=new File(xmlPath) expected fqn: java.io.File with type: Type4 got: java.io.File
For node: FileIn expected fqn: java.io.File with type: Type4 got: java.io.File
For node: new File(xmlPath) expected fqn: java.io.File with type: Type4 got: java.io.File
For node: File expected fqn: java.io.File with type: Type4 got: java.io.File
For node: File expected fqn: java.io.File with type: Type4 got: java.io.File
For node: xmlPath expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: FileIn.exists() expected fqn: boolean with type: Type8 got: boolean
For node: FileIn expected fqn: java.io.File with type: Type4 got: java.io.File
Cannot find matching typeVariable for: exists
For node: exists expected fqn: boolean with type: Type8 got: boolean
Did not find solution for node: DocumentBuilderFactory with type Type10
Did not find solution for node: DocumentBuilderFactory with type Type10
Cannot find matching typeVariable for: factory=DocumentBuilderFactory.newInstance()
Did not find solution for node: factory=DocumentBuilderFactory.newInstance() with type Type10
Did not find solution for node: factory with type Type10
Did not find solution for node: DocumentBuilderFactory.newInstance() with type Type11
Did not find solution for node: DocumentBuilderFactory with type Type10
Cannot find matching typeVariable for: newInstance
Did not find solution for node: newInstance with type Type11
For node: null expected fqn: null with type: Type13 got: java.lang.Object
For node: null expected fqn: null with type: Type14 got: java.lang.Object
{Checked=26, Analyzed=19, Unsolved=7, Incorrect=2, Correct=17}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=12, Analyzed=8, Unsolved=4, Incorrect=0, Correct=8}
java=SimpleType: {Checked=5, Analyzed=4, Unsolved=1, Incorrect=0, Correct=4}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=VariableDeclarationFragment: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
Total stats
{Checked=26, Analyzed=19, Unsolved=7, Incorrect=2, Correct=17}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=12, Analyzed=8, Unsolved=4, Incorrect=0, Correct=8}
java=SimpleType: {Checked=5, Analyzed=4, Unsolved=1, Incorrect=0, Correct=4}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=VariableDeclarationFragment: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
boolean,MethodInvocation,1,1,1,0,0
boolean,SimpleName,1,1,1,0,0
java,ClassInstanceCreation,1,1,1,0,0
java,MethodInvocation,0,1,0,0,1
java,SimpleName,8,12,8,0,4
java,SimpleType,4,5,4,0,1
java,SingleVariableDeclaration,1,1,1,0,0
java,VariableDeclarationFragment,1,2,1,0,1
null,NullLiteral,2,2,0,2,0
