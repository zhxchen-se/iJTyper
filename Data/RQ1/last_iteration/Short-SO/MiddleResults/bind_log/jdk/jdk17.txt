echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/jdk17.java
Expect check=33
Cannot find matching typeVariable for: public class jdk17 {
  private static InputStream stream;
  public static void h1() throws IOException {
    int bufferSize=1024;
    char[] buffer=new char[bufferSize];
    Reader in=new InputStreamReader(stream,StandardCharsets.UTF_8);
  }
}

Did not find solution for node: jdk17 with type Type1
For node: InputStream expected fqn: java.io.InputStream with type: Type3 got: java.io.InputStream
For node: InputStream expected fqn: java.io.InputStream with type: Type3 got: java.io.InputStream
Cannot find matching typeVariable for: stream
For node: stream expected fqn: java.io.InputStream with type: Type3 got: java.io.InputStream
Cannot find matching typeVariable for: stream
Cannot find matching typeVariable for: private static InputStream stream;

Cannot find matching typeVariable for: public class jdk17 {
  private static InputStream stream;
  public static void h1() throws IOException {
    int bufferSize=1024;
    char[] buffer=new char[bufferSize];
    Reader in=new InputStreamReader(stream,StandardCharsets.UTF_8);
  }
}

Cannot find matching typeVariable for: package java.jdk;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.StandardCharsets;
public class jdk17 {
  private static InputStream stream;
  public static void h1() throws IOException {
    int bufferSize=1024;
    char[] buffer=new char[bufferSize];
    Reader in=new InputStreamReader(stream,StandardCharsets.UTF_8);
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: h1
Cannot find matching typeVariable for: public static void h1() throws IOException {
  int bufferSize=1024;
  char[] buffer=new char[bufferSize];
  Reader in=new InputStreamReader(stream,StandardCharsets.UTF_8);
}

Cannot find matching typeVariable for: public class jdk17 {
  private static InputStream stream;
  public static void h1() throws IOException {
    int bufferSize=1024;
    char[] buffer=new char[bufferSize];
    Reader in=new InputStreamReader(stream,StandardCharsets.UTF_8);
  }
}

Cannot find matching typeVariable for: package java.jdk;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.StandardCharsets;
public class jdk17 {
  private static InputStream stream;
  public static void h1() throws IOException {
    int bufferSize=1024;
    char[] buffer=new char[bufferSize];
    Reader in=new InputStreamReader(stream,StandardCharsets.UTF_8);
  }
}

For node: IOException expected fqn: java.io.IOException with type: Type4 got: java.io.IOException
For node: IOException expected fqn: java.io.IOException with type: Type4 got: java.io.IOException
For node: int expected fqn: int with type: Type5 got: int
Cannot find matching typeVariable for: bufferSize=1024
For node: bufferSize=1024 expected fqn: int with type: Type5 got: int
For node: bufferSize expected fqn: int with type: Type5 got: int
For node: 1024 expected fqn: int with type: Type6 got: short
For node: char[] expected fqn: char[] with type: Type8 got: char[]
For node: char expected fqn: char with type: Type7 got: char
Cannot find matching typeVariable for: buffer=new char[bufferSize]
For node: buffer=new char[bufferSize] expected fqn: char[] with type: Type8 got: char[]
For node: buffer expected fqn: char[] with type: Type8 got: char[]
For node: new char[bufferSize] expected fqn: char[] with type: Type8 got: char[]
For node: char[] expected fqn: char[] with type: Type8 got: char[]
For node: char expected fqn: char with type: Type7 got: char
For node: bufferSize expected fqn: int with type: Type5 got: int
For node: Reader expected fqn: java.io.Reader with type: Type9 got: java.io.Reader
For node: Reader expected fqn: java.io.Reader with type: Type9 got: java.io.Reader
Cannot find matching typeVariable for: in=new InputStreamReader(stream,StandardCharsets.UTF_8)
For node: in=new InputStreamReader(stream,StandardCharsets.UTF_8) expected fqn: java.io.Reader with type: Type9 got: java.io.Reader
For node: in expected fqn: java.io.Reader with type: Type9 got: java.io.Reader
For node: new InputStreamReader(stream,StandardCharsets.UTF_8) expected fqn: java.io.InputStreamReader with type: Type10 got: java.io.InputStreamReader
For node: InputStreamReader expected fqn: java.io.InputStreamReader with type: Type10 got: java.io.InputStreamReader
For node: InputStreamReader expected fqn: java.io.InputStreamReader with type: Type10 got: java.io.InputStreamReader
For node: stream expected fqn: java.io.InputStream with type: Type3 got: java.io.InputStream
Cannot find matching typeVariable for: StandardCharsets.UTF_8
For node: StandardCharsets.UTF_8 expected fqn: java.nio.charset.Charset with type: Type10 got: java.io.InputStreamReader
For node: StandardCharsets expected fqn: java.nio.charset.StandardCharsets with type: Type11 got: java.nio.charset.StandardCharsets
For node: UTF_8 expected fqn: java.nio.charset.Charset with type: Type12 got: java.nio.charset.Charset
{Checked=30, Analyzed=29, Unsolved=1, Incorrect=2, Correct=27}
char=ArrayCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
char=ArrayType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
char=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
char=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
char=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=9, Analyzed=8, Unsolved=1, Incorrect=0, Correct=8}
java=SimpleType: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=30, Analyzed=29, Unsolved=1, Incorrect=2, Correct=27}
char=ArrayCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
char=ArrayType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
char=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
char=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
char=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=9, Analyzed=8, Unsolved=1, Incorrect=0, Correct=8}
java=SimpleType: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
char,ArrayCreation,1,1,1,0,0
char,ArrayType,2,2,2,0,0
char,PrimitiveType,2,2,2,0,0
char,SimpleName,1,1,1,0,0
char,VariableDeclarationFragment,1,1,1,0,0
int,NumberLiteral,1,1,0,1,0
int,PrimitiveType,1,1,1,0,0
int,SimpleName,2,2,2,0,0
int,VariableDeclarationFragment,1,1,1,0,0
java,ClassInstanceCreation,1,1,1,0,0
java,QualifiedName,1,1,0,1,0
java,SimpleName,8,9,8,0,1
java,SimpleType,4,4,4,0,0
java,VariableDeclarationFragment,2,2,2,0,0
void,PrimitiveType,1,1,1,0,0
