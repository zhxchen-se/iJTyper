[
  {
    "originalCode": "ByteArrayOutputStream outputStream = new ByteArrayOutputStream();",
    "FQNCode": "<MASK>.ByteArrayOutputStream outputStream = new <MASK>.ByteArrayOutputStream();",
    "fqnToken": [
      [
        "java.io.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xsltc.computil.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xsltc.io.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xs.c.runtime.util.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xsltc.m.outpututil.ByteArrayOutputStream",
        "com.sun.org.apache.xml.internal.serialtm.b.ByteArrayOutputStream",
        "java.lang.io.ByteArrayOutputStream",
        "com.sun.xml.internal.xml.internal.utils.ByteArrayOutputStream",
        "com.sun.xml.internal.ws.util.ByteArrayOutputStream",
        "com.sun.xml.internal.wsj.util.ByteArrayOutputStream",
        "java.nio.ByteArrayOutputStream",
        "com.sun.xml.transform.stream.ByteArrayOutputStream",
        "j.apache.xml.stream.ByteArrayOutputStream",
        "com.sun.xml.internal.portutil.ByteArrayOutputStream"
      ],
      [
        "java.io.ByteArrayOutputStream",
        "com.sun.org.apache.xml.internal.security.util.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xs.c.compWriter.ByteArrayOutputStream",
        "com.sun.xml.internal.ws.util.ByteArrayOutputStream",
        "com.sun.org.apache.xml.internal.utils.ByteArrayOutputStream",
        "com.sun.org.apache.xalan.internal.xs.c.runtime.output.ByteArrayOutputStream",
        "java.util.Byte.ByteArrayOutputStream",
        "com.sun.xml.internal.wsc.util.ByteArrayOutputStream",
        "com.sun.org.internal.xml.internal.serialtm.util.ByteArrayOutputStream",
        "java.nio.ByteArrayOutputStream",
        "com.sun.xml.transform.util.ByteArrayOutputStream",
        "com.sun.xml.internal.stutil.ByteArrayOutputStream",
        "org.apache.xml.stream.ByteArrayOutputStream"
      ]
    ]
  },
  {
    "originalCode": "Result outputTarget = new StreamResult(outputStream);",
    "FQNCode": "<MASK>.Result outputTarget = new <MASK>.StreamResult(outputStream);",
    "fqnToken": [
      [
        "javax.xml.transform.Result",
        "java.lang.Result",
        "javax.xml.transform.stream.Result",
        "javax.xml.transform.xing.Result",
        "com.sun.org.apache.xalan.internal.xs.c.compiler.Result",
        "com.sun.org.apache.xalan.internal.xsltc.runtime.Result",
        "com.sun.org.apache.xalan.internal.xsltc.compiler.util.Result",
        "javax.xml.transformtransform.Result",
        "com.sun.org.apache.xalan.internal.xsltc.runtime.SAXImpl.Result",
        "com.sun.org.apache.xalan.internal.writer.c.Result",
        "com.sun.org.apache.xpath.internal.transform.Result",
        "com.sun.org.apache.xalan.internal.xs.c.runtime.Result.Result",
        "javax.xml.transform.xml.util.Result",
        "com.sun.org.apache.xalan.internal.xsltc.trainfo.XXCheckMethod.Result",
        "java.lang.activation.Result",
        "org.xml.sax.Result",
        "com.sun.xml.transform.xpath.Result.Result",
        "com.sun.org.apache.xml.internal.transform.Result",
        "com.sun.org.apache.xalan.internal.xsltc.runtimeiler.ersJavaTransToildTransCheckTest.Result",
        "com.sun.org.apache.xalan.internal.xsltc.compiler.X.Transers.X.CheckAttribute.Result"
      ],
      [
        "javax.xml.transform.StreamResult",
        "javax.xml.transform.stream.StreamResult",
        "java.io.StreamResult",
        "com.sun.org.apache.xalan.internal.xsltc.StreamFactory.StreamResult",
        "javax.xml.transform.streamax.StreamResult",
        "com.sun.org.apache.xalan.internal.xsltc.parser.StreamResult",
        "javax.activation.StreamResult",
        "com.sun.org.apache.xalan.internal.xs.axStream.StreamResult",
        "com.sun.xml.apache.xpath.ing.StreamResult",
        "com.sun.xml.transform.stream.buffer.StreamResult",
        "j.xml.sstream.StreamResult",
        "java.ioStream.StreamResult"
      ]
    ]
  },
  {
    "originalCode": "Transformer t = TransformerFactory.newInstance().newTransformer();",
    "FQNCode": "<MASK>.Transformer t = <MASK>.TransformerFactory.newInstance().newTransformer();",
    "fqnToken": [
      [
        "javax.xml.transform.Transformer",
        "javax.xml.Transformer",
        "javax.xml.transform.Transax.Transformer",
        "javax.xml.xtransform.Transformer",
        "javax.xml.transform.transform.Transformer",
        "com.sun.org.apache.xalan.internal.xsltc.trailer.Transformer",
        "com.sun.org.apache.xalan.internal.xsltc.tra.output.Transformer",
        "com.sun.org.apache.xalan.internal.xsltc.runtime.SAXImpl.Transformer",
        "com.sun.org.apache.xalan.internal.xsltc.runtime.Transformer",
        "javax.trans..Transformer",
        "com.sun.org.apache.xml.internal.serialtransform.Transformer",
        "com.sun.org.apache.xml.internalTransutils.Transformer",
        "com.sun.org.apache.xalan.internal.xsltc.tra.outputTransXImpl.Transformer",
        "com.sun.org.apache.xpath.internal.transxml.Transformer",
        "com.sun.org.apache.xalan.internal.transform.cers.Transformer",
        "java.transform.Transformer",
        "com.sun.xml.transform.x.Transxml.Transformer",
        "com.sun.org.apache.xalan.internal.xsltc.trainfo.XXTransImpl.Transformer",
        "com.sun.org.apache.xalan.internal.xsltc.tra.output.TransXmlTransx.Transformer",
        "org.trans..Transformer"
      ],
      [
        "javax.xml.transform.TransformerFactory",
        "javax.xml.transform.transax.TransformerFactory",
        "javax.xml.TransformerFactory",
        "javax.xml.xformer.TransformerFactory",
        "javax.xml.transform.ers.TransformerFactory",
        "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactory",
        "javax.xml.transformtransform.traformer.TransformerFactory",
        "javax.xml..TransformerFactory",
        "com.sun.org.apache.xalan.internal.xsltc.tra.i.TransformerFactory",
        "com.sun.org.apache.xalan.internal.xsltc.traffoutputTransformerImpl.TransformerFactory",
        "javax.xml.transform.x.transxml.TransformerFactory",
        "com.sun.org.apache.xalan.internal.transform.Transp.TransformerFactory",
        "com.sun.org.apache.xml.util.ktransform.TransformerFactory",
        "com.sun.org.apache.xalan.internal.xsltc.trainfo.XXTransformer.TransformerFactory",
        "java.util.TransformerFactory",
        "com.sun.org.apache.x.util.k.transforms.TransformerFactory",
        "com.sun.xml.transform.ws.internal.utils.TransformerFactory",
        "com.sun.org.apache.xalan.internal.xsltc.tra.output.TransTCmlTransx.TransformerFactory",
        "com.sun.org.apache.xalan.internal.xsltc.runtime.output.JavaTransTrans.traformer.TransformerFactory",
        "j.trans..TransformerFactory"
      ]
    ]
  },
  {
    "originalCode": "public xt9() throws TransformerConfigurationException",
    "FQNCode": "public xt9() throws <MASK>.TransformerConfigurationException",
    "fqnToken": [
      [
        "javax.xml.transform.TransformerConfigurationException",
        "javax.xml.TransformerConfigurationException",
        "javax.xml.xpath.TransformerConfigurationException",
        "javax.xml.transform.ers.TransformerConfigurationException",
        "javax.xml.transform.sax.TransformerConfigurationException",
        "javax.xml..TransformerConfigurationException",
        "com.sun.org.apache.xalan.internal.xsltc.compx.TransformerConfigurationException",
        "java.util.TransformerConfigurationException",
        "com.sun.org.apache.xalan.internal.xsltc.parser.TransformerConfigurationException",
        "com.sun.org.apache.xalan.internal.transform.axdl.TransformerConfigurationException",
        "com.sun.org.apache.xml.internal.utils.TransformerConfigurationException",
        "com.sun.org.apache.xalan.internal.transform.tools.TransformerConfigurationException",
        "javsun.xml.internal.ws.former.TransformerConfigurationException",
        "com.sun.org.apache.xalan.internal.xsltc.traTransoutputXformerImpl.TransformerConfigurationException",
        "com.sun.org.apache.xalan.internal.xs.c.traO.XSLTransformer.TransformerConfigurationException",
        "org.ax..TransformerConfigurationException"
      ]
    ]
  }
]