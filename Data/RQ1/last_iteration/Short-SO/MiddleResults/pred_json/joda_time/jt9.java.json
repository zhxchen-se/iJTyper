[
  {
    "originalCode": "LocalDate today = LocalDate.now();",
    "FQNCode": "<MASK>.LocalDate today = <MASK>.LocalDate.now();",
    "fqnToken": [
      [
        "java.time.LocalDate",
        "org.joda.time.LocalDate",
        "java.time.time.LocalDate",
        "org.joda.time.LocalDate.LocalDate",
        "java.jtime.LocalDate",
        "org.joda.time.Date.LocalDate",
        "org.hibernate.orm.testTimeCh.Local.LocalDate",
        "org.hibernate.orm.test.annot.Dateronter.LocalDate",
        "org.hibernate.orm.testDateculacy.LocalDate",
        "org.hibernate.orm.test.endar.LocalDateTimeology.LocalDate",
        "org.hibernate.orm.test.query.Compc.LocalDate",
        "org.jibernate.orm.DateTimetime.LocalDate",
        "org.joda.time.BaseTimeDay.LocalDate",
        "org.hibernate.orm.test.j.LocalIdCTimeology.LocalDate",
        "org.jodantime.Date.DateTime.LocalDate",
        "org.hibernate.orm.test.sqlations.JJp.cDateypeChDateTest.LocalDate",
        "org.hibernate.orm.test.jvers.conj.queryTimeJ.LocalHDatePopLocaldTest.LocalDate",
        "org.hibernate.orm.test.jations.conJ.Jronron.RecordDateTimeDateTest.LocalDate",
        "org.hibernate.orm.test.jvers.conj.queryTime.ron.ologyPreZJChdTime.LocalDate"
      ],
      [
        "java.time.LocalDate",
        "org.joda.time.LocalDate",
        "java.time.time.LocalDate",
        "org.joda.time.LocalDate.LocalDate",
        "org.joda.time.base.LocalDate",
        "java.timetime.LocalDate",
        "org.joda.time.ChronTime.LocalDate",
        "org.jodantime.time.DateCaltime.LocalDate",
        "org.jodantime.orm.DateDateronacy.LocalDate",
        "org.jodantime.format.test.Ch.Time.LocalDate",
        "org.jibernate.orm.test.time.Chronology.LocalDate",
        "org.joda.time.M.DateTime.LocalDate",
        "org.hibernate.orm.test.j.LocalIdChronology.LocalDate",
        "org.jodantime.orm.test.jChCompiler.LocalDate",
        "org.hibernate.orm.j.j.ology.ologyChronology.LocalDate",
        "org.hibernate.orm.test.jations.conj.JTimeron.PreDateDateChDateology.LocalDate",
        "org.hibernate.orm.test.jations.conJpJronron.DateDateTimeDateeral.LocalDate",
        "org.hibernate.orm.test.queryvers.generatedj.queryTimeJron.ologyPreZJChdology.LocalDate"
      ]
    ]
  },
  {
    "originalCode": "ZonedDateTime zdt = today.atStartOfDay().atZone(ZoneId.systemDefault());",
    "FQNCode": "<MASK>.ZonedDateTime zdt = today.atStartOfDay().atZone(<MASK>.ZoneId.systemDefault());",
    "fqnToken": [
      [
        "java.time.ZonedDateTime",
        "java.time.zone.ZonedDateTime",
        "java.time.chrontime.ZonedDateTime",
        "org.j..ZonedDateTime",
        "org.joda.time.tz.ZonedDateTime",
        "org.jodazoneDatetime.ZonedDateTime",
        "org.joda.time.chrono.DateCh.Time.ZonedDateTime",
        "org.j.chronendar.chrono.ctype.ZonedDateTime",
        "org.hibernate.chrono.Copt.Chronology.ZonedDateTime",
        "org.j.chronendar.chrono.util.ZonedDateTime",
        "org.j.chronendar.chronoZone.ZonedDateTime",
        "org.apache.nate.ormxjcesinternalinternal.ologyZonedChronology.ZonedDateTime",
        "com.h.nate.orm.erces.internal.generatedvert.DateTimeChronology.ZonedDateTime",
        "org.apacheodagate.orm.jcesinternalinternalclientonedonedChronology.ZonedDateTime",
        "org.apache.nate.orm.testcestype.LocalIdChDateTime.ZonedDateTime",
        "com.h.nate.orm.test.eninternal.chronvertp.TimecBeChDateTime.ZonedDateTime",
        "com.h.nate.orm.test.eninternal.onedZp.Timec.DateDateDateImpl.ZonedDateTime",
        "com.h.nate.orm.test.mvers.convert.Joptc.PreonedonedChDateology.ZonedDateTime",
        "com.h.nate.orm.test.eninternal.onedZ.conqlc.azyDateConDateField.ZonedDateTime",
        "com.h.nate.orm.test.envers.convert.ChTimeJCh.ologyPreZConChDateeral.ZonedDateTime"
      ],
      [
        "java.time.ZoneId",
        "java.time.format.ZoneId",
        "org.joda.time.tz.ZoneId",
        "java.time.TimeId.ZoneId",
        "java.time..ZoneId",
        "org.joda.time.ZoneZone.ZoneId",
        "org.joda.time.Date.Zone.ZoneId",
        "org.jodantime.format.TestDateTimeronZone.ZoneId",
        "org.jodanate.Date.Constils.ZoneId",
        "org.hibernate.orm.test.annotations.con.ZJChronology.ZoneId",
        "org.hibernate.orm.test.annotations.utilvert.DateologyChCompology.ZoneId",
        "org.hibernate.orm.test.annotations.generated.p.Timec.ialChTimeImpl.ZoneId",
        "org.hibernate.orm.test.annotations.generated.p.TimeDateologyChDateImpl.ZoneId",
        "org.hibernate.chrono.Copt.TimeZoneter.ZoneId"
      ]
    ]
  },
  {
    "originalCode": "OffsetDateTime odt = zdt.toOffsetDateTime();",
    "FQNCode": "<MASK>.OffsetDateTime odt = zdt.toOffsetDateTime();",
    "fqnToken": [
      [
        "java.time.OffsetDateTime",
        "java.time.zone.OffsetDateTime",
        "org.time.zonetime.OffsetDateTime",
        "org.time.zone.time.OffsetDateTime",
        "java.timetime.OffsetDateTime",
        "sun.time.chronendar.TimeDateZone.OffsetDateTime",
        "org.hibernate.orm.test.annot.TimeZoneology.OffsetDateTime",
        "org.jodanate.tz.DateTimeCh.time.OffsetDateTime",
        "org.j.chronendar.orm.Datecutil.OffsetDateTime",
        "com.hibernate.orm.test.enations.xmljp.DateLypeChDateV.OffsetDateTime",
        "org.hibernate.orm.test.annotations.DateZoneDate.OffsetDateTime",
        "com.hibernate.orm.test.envers.embed.p.Timec.cChDateImpl.OffsetDateTime",
        "com.hibernate.orm.test.annotinternal.pvert.DateTimeChronology.OffsetDateTime",
        "com.hibernate.orm.test.annotations.pvertp.TimeDateChroniler.OffsetDateTime",
        "org.h.nate.orm.testcesants.LocalIdTimeZoneTime.OffsetDateTime",
        "org.apache.nate.orm.testceseriesinternal.ologyZDateChronology.OffsetDateTime",
        "org.h.nate.orm.ercesannotinternal.util.ZDateChronology.OffsetDateTime",
        "org.h.nate.orm.testcesinternal.client.IdChronology.OffsetDateTime",
        "com.h.nate.orm.test.envers.convertpcTimeJCh.ologyPreZManyChDateology.OffsetDateTime",
        "com.h.nate.orm.test.envers.con.p.Time.Date.Date.cZDateChduleTime.OffsetDateTime"
      ]
    ]
  }
]