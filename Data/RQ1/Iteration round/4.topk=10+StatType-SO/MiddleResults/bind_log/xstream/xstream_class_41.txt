echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_41.java
Expect check=106
Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: xstream_class_41
Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

For node: void expected fqn: void with type: Type6 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String arg[]){
  XStream xstream=new XStream(new StaxDriver());
  xstream.alias("data",DetList.class);
  xstream.alias("i",Details.class);
  String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
  System.out.println(s);
  DetList data=(DetList)xstream.fromXML(s);
}

Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: String arg[]
For node: String arg[] expected fqn: java.lang.String[] with type: Type7 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type7 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type7 got: java.lang.String
For node: arg expected fqn: java.lang.String[] with type: Type8 got: java.lang.String[]
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: xstream=new XStream(new StaxDriver())
For node: xstream=new XStream(new StaxDriver()) expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
For node: xstream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
For node: new XStream(new StaxDriver()) expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
For node: XStream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
For node: new StaxDriver() expected fqn: com.thoughtworks.xstream.io.xml.StaxDriver with type: Type10 got: com.thoughtworks.xstream.io.xml.StaxDriver
For node: StaxDriver expected fqn: com.thoughtworks.xstream.io.xml.StaxDriver with type: Type10 got: com.thoughtworks.xstream.io.xml.StaxDriver
For node: StaxDriver expected fqn: com.thoughtworks.xstream.io.xml.StaxDriver with type: Type10 got: com.thoughtworks.xstream.io.xml.StaxDriver
For node: xstream.alias("data",DetList.class) expected fqn: void with type: Type16 got: void
For node: xstream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: alias
For node: alias expected fqn: void with type: Type16 got: void
For node: "data" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: DetList.class expected fqn: java.lang.Class<xstream_class_41.DetList> with type: Type15 got: java.lang.Class
Did not find solution for node: DetList with type Type2
Did not find solution for node: DetList with type Type2
For node: xstream.alias("i",Details.class) expected fqn: void with type: Type19 got: void
For node: xstream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: alias
For node: alias expected fqn: void with type: Type19 got: void
For node: "i" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: Details.class expected fqn: java.lang.Class<xstream_class_41.Details> with type: Type15 got: java.lang.Class
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>")
For node: s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>") expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: s expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>") expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: "<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: "<data>\n" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: "\t<i Name='asia' type='continent' id='11'></i>\n" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: "\t<i Name='africa' type='continent' id='12'></i>\n" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: "\t<i Name='japan' type='country' id='13'></i>\n" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: "</data>" expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: System.out.println(s) expected fqn: void with type: Type24 got: void
Cannot find matching typeVariable for: System.out
For node: System.out expected fqn: java.io.PrintStream with type: Type24 got: void
For node: System expected fqn: java.lang.System with type: Type22 got: java.lang.System
For node: out expected fqn: java.io.PrintStream with type: Type23 got: java.io.PrintStream
Cannot find matching typeVariable for: println
For node: println expected fqn: void with type: Type24 got: void
For node: s expected fqn: java.lang.String with type: Type14 got: java.lang.String
Did not find solution for node: DetList with type Type2
Did not find solution for node: DetList with type Type2
Cannot find matching typeVariable for: data=(DetList)xstream.fromXML(s)
Did not find solution for node: data=(DetList)xstream.fromXML(s) with type Type2
Did not find solution for node: data with type Type2
Did not find solution for node: (DetList)xstream.fromXML(s) with type Type2
Did not find solution for node: DetList with type Type2
Did not find solution for node: DetList with type Type2
For node: xstream.fromXML(s) expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
For node: xstream expected fqn: com.thoughtworks.xstream.XStream with type: Type9 got: com.thoughtworks.xstream.XStream
Cannot find matching typeVariable for: fromXML
For node: fromXML expected fqn: java.lang.Object with type: Type27 got: java.lang.Object
For node: s expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: public class DetList {
  private List<Details> detlist;
  public List<Details> getDetlist(){
    return detlist;
  }
  public void setDetlist(  List<Details> detlist){
    this.detlist=detlist;
  }
}

Did not find solution for node: DetList with type Type2
For node: List<Details> expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
For node: List expected fqn: java.util.List<xstream_class_41.Details> with type: Type4 got: java.util.List
For node: List expected fqn: java.util.List<xstream_class_41.Details> with type: Type4 got: java.util.List
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
Cannot find matching typeVariable for: detlist
For node: detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
Cannot find matching typeVariable for: detlist
Cannot find matching typeVariable for: private List<Details> detlist;

Cannot find matching typeVariable for: public class DetList {
  private List<Details> detlist;
  public List<Details> getDetlist(){
    return detlist;
  }
  public void setDetlist(  List<Details> detlist){
    this.detlist=detlist;
  }
}

Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

For node: List<Details> expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
For node: List expected fqn: java.util.List<xstream_class_41.Details> with type: Type4 got: java.util.List
For node: List expected fqn: java.util.List<xstream_class_41.Details> with type: Type4 got: java.util.List
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
Cannot find matching typeVariable for: getDetlist
Cannot find matching typeVariable for: public List<Details> getDetlist(){
  return detlist;
}

Cannot find matching typeVariable for: public class DetList {
  private List<Details> detlist;
  public List<Details> getDetlist(){
    return detlist;
  }
  public void setDetlist(  List<Details> detlist){
    this.detlist=detlist;
  }
}

Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

For node: detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
For node: void expected fqn: void with type: Type6 got: void
Cannot find matching typeVariable for: setDetlist
Cannot find matching typeVariable for: public void setDetlist(List<Details> detlist){
  this.detlist=detlist;
}

Cannot find matching typeVariable for: public class DetList {
  private List<Details> detlist;
  public List<Details> getDetlist(){
    return detlist;
  }
  public void setDetlist(  List<Details> detlist){
    this.detlist=detlist;
  }
}

Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: List<Details> detlist
For node: List<Details> detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
For node: List<Details> expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
For node: List expected fqn: java.util.List<xstream_class_41.Details> with type: Type4 got: java.util.List
For node: List expected fqn: java.util.List<xstream_class_41.Details> with type: Type4 got: java.util.List
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
For node: detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
For node: this.detlist=detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
For node: this.detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
Did not find solution for node: this with type Type2
Cannot find matching typeVariable for: detlist
For node: detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
Cannot find matching typeVariable for: detlist
For node: detlist expected fqn: java.util.List<xstream_class_41.Details> with type: Type5=Type4<Type1> got: java.util.List<java.lang.Object>
Cannot find matching typeVariable for: public class Details {
  private String Name;
  private String type;
  private String id;
}

For node: Details expected fqn: xstream_class_41.Details with type: Type1 got: java.lang.Object
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: Name
For node: Name expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: Name
Cannot find matching typeVariable for: private String Name;

Cannot find matching typeVariable for: public class Details {
  private String Name;
  private String type;
  private String id;
}

Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: type
For node: type expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: type
Cannot find matching typeVariable for: private String type;

Cannot find matching typeVariable for: public class Details {
  private String Name;
  private String type;
  private String id;
}

Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: id
For node: id expected fqn: java.lang.String with type: Type14 got: java.lang.String
Cannot find matching typeVariable for: id
Cannot find matching typeVariable for: private String id;

Cannot find matching typeVariable for: public class Details {
  private String Name;
  private String type;
  private String id;
}

Cannot find matching typeVariable for: public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

Cannot find matching typeVariable for: import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
public class xstream_class_41 {
  public static void main(  String arg[]){
    XStream xstream=new XStream(new StaxDriver());
    xstream.alias("data",DetList.class);
    xstream.alias("i",Details.class);
    String s=new String("<data>\n" + "\t<i Name='asia' type='continent' id='11'></i>\n" + "\t<i Name='africa' type='continent' id='12'></i>\n"+ "\t<i Name='japan' type='country' id='13'></i>\n"+ "</data>");
    System.out.println(s);
    DetList data=(DetList)xstream.fromXML(s);
  }
public class DetList {
    private List<Details> detlist;
    public List<Details> getDetlist(){
      return detlist;
    }
    public void setDetlist(    List<Details> detlist){
      this.detlist=detlist;
    }
  }
public class Details {
    private String Name;
    private String type;
    private String id;
  }
}

{Checked=95, Analyzed=84, Unsolved=11, Incorrect=30, Correct=54}
=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleName: {Checked=10, Analyzed=5, Unsolved=5, Incorrect=5, Correct=0}
=SimpleType: {Checked=7, Analyzed=4, Unsolved=3, Incorrect=4, Correct=0}
=ThisExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=SimpleName: {Checked=7, Analyzed=7, Unsolved=0, Incorrect=0, Correct=7}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=FieldAccess: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ParameterizedType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=3, Correct=0}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=20, Analyzed=20, Unsolved=0, Incorrect=7, Correct=13}
java=SimpleType: {Checked=9, Analyzed=9, Unsolved=0, Incorrect=3, Correct=6}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
java=StringLiteral: {Checked=7, Analyzed=7, Unsolved=0, Incorrect=0, Correct=7}
java=TypeLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
java=VariableDeclarationFragment: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=1, Correct=4}
void=MethodInvocation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
Total stats
{Checked=95, Analyzed=84, Unsolved=11, Incorrect=30, Correct=54}
=CastExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=SimpleName: {Checked=10, Analyzed=5, Unsolved=5, Incorrect=5, Correct=0}
=SimpleType: {Checked=7, Analyzed=4, Unsolved=3, Incorrect=4, Correct=0}
=ThisExpression: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=SimpleName: {Checked=7, Analyzed=7, Unsolved=0, Incorrect=0, Correct=7}
com.thoughtworks.xstream.=SimpleType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
com.thoughtworks.xstream.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=FieldAccess: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ParameterizedType: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=3, Correct=0}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=SimpleName: {Checked=20, Analyzed=20, Unsolved=0, Incorrect=7, Correct=13}
java=SimpleType: {Checked=9, Analyzed=9, Unsolved=0, Incorrect=3, Correct=6}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
java=StringLiteral: {Checked=7, Analyzed=7, Unsolved=0, Incorrect=0, Correct=7}
java=TypeLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
java=VariableDeclarationFragment: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=1, Correct=4}
void=MethodInvocation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
,CastExpression,0,1,0,0,1
,SimpleName,5,10,0,5,5
,SimpleType,4,7,0,4,3
,ThisExpression,0,1,0,0,1
,VariableDeclarationFragment,0,1,0,0,1
com.thoughtworks.xstream.,ClassInstanceCreation,2,2,2,0,0
com.thoughtworks.xstream.,SimpleName,7,7,7,0,0
com.thoughtworks.xstream.,SimpleType,3,3,3,0,0
com.thoughtworks.xstream.,VariableDeclarationFragment,1,1,1,0,0
java,Assignment,1,1,0,1,0
java,ClassInstanceCreation,1,1,1,0,0
java,FieldAccess,1,1,0,1,0
java,InfixExpression,1,1,1,0,0
java,MethodInvocation,1,1,1,0,0
java,ParameterizedType,3,3,0,3,0
java,QualifiedName,1,1,0,1,0
java,SimpleName,20,20,13,7,0
java,SimpleType,9,9,6,3,0
java,SingleVariableDeclaration,2,2,0,2,0
java,StringLiteral,7,7,7,0,0
java,TypeLiteral,2,2,0,2,0
java,VariableDeclarationFragment,5,5,4,1,0
void,MethodInvocation,3,3,3,0,0
void,PrimitiveType,2,2,2,0,0
void,SimpleName,3,3,3,0,0
