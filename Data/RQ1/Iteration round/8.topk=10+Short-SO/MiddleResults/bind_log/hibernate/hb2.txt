echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/hb2.java
Expect check=25
Cannot find matching typeVariable for: public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

Cannot find matching typeVariable for: hb2
Cannot find matching typeVariable for: public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

Cannot find matching typeVariable for: package java.hibernate;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import java.util.List;
public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

Cannot find matching typeVariable for: @Entity public static class University<Student> {
  private String address;
  @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
}

Did not find solution for node: @Entity with type Type7
Did not find solution for node: Entity with type Type7
Did not find solution for node: University with type Type1
Cannot find matching typeVariable for: Student
Cannot find matching typeVariable for: Student
Cannot find matching typeVariable for: @Entity public static class University<Student> {
  private String address;
  @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
}

Cannot find matching typeVariable for: public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

Cannot find matching typeVariable for: package java.hibernate;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import java.util.List;
public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: address
For node: address expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: address
Cannot find matching typeVariable for: private String address;

Cannot find matching typeVariable for: @Entity public static class University<Student> {
  private String address;
  @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
}

Cannot find matching typeVariable for: public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

Cannot find matching typeVariable for: package java.hibernate;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import java.util.List;
public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

Did not find solution for node: @OneToMany(fetch=FetchType.LAZY) with type Type8
Did not find solution for node: OneToMany with type Type8
Cannot find matching typeVariable for: fetch
Cannot find matching typeVariable for: fetch=FetchType.LAZY
Did not find solution for node: fetch with type Type8
For node: FetchType.LAZY expected fqn: javax.persistence.FetchType with type: Type10 got: javax.persistence.FetchType
For node: FetchType expected fqn: javax.persistence.FetchType with type: Type9 got: javax.persistence.FetchType
For node: LAZY expected fqn: javax.persistence.FetchType with type: Type10 got: javax.persistence.FetchType
For node: List<Student> expected fqn: java.util.List<Student> with type: Type6=Type4<Type5> got: java.util.List<java.lang.Object>
For node: List expected fqn: java.util.List<Student> with type: Type4 got: java.util.List
For node: List expected fqn: java.util.List<Student> with type: Type4 got: java.util.List
For node: Student expected fqn: Student with type: Type5 got: java.lang.Object
For node: Student expected fqn: Student with type: Type5 got: java.lang.Object
Cannot find matching typeVariable for: students
For node: students expected fqn: java.util.List<Student> with type: Type6=Type4<Type5> got: java.util.List<java.lang.Object>
Cannot find matching typeVariable for: students
Cannot find matching typeVariable for: @OneToMany(fetch=FetchType.LAZY) private List<Student> students;

Cannot find matching typeVariable for: @Entity public static class University<Student> {
  private String address;
  @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
}

Cannot find matching typeVariable for: public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

Cannot find matching typeVariable for: package java.hibernate;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import java.util.List;
public class hb2 {
@Entity public static class University<Student> {
    private String address;
    @OneToMany(fetch=FetchType.LAZY) private List<Student> students;
  }
}

{Checked=18, Analyzed=12, Unsolved=6, Incorrect=6, Correct=6}
=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=MarkerAnnotation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=NormalAnnotation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=ParameterizedType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=8, Analyzed=4, Unsolved=4, Incorrect=1, Correct=3}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=1, Correct=1}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=1, Correct=1}
Total stats
{Checked=18, Analyzed=12, Unsolved=6, Incorrect=6, Correct=6}
=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=MarkerAnnotation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=NormalAnnotation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=ParameterizedType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
java=QualifiedName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=8, Analyzed=4, Unsolved=4, Incorrect=1, Correct=3}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=1, Correct=1}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=1, Correct=1}
,SimpleName,1,1,0,1,0
,SimpleType,1,1,0,1,0
java,MarkerAnnotation,0,1,0,0,1
java,NormalAnnotation,0,1,0,0,1
java,ParameterizedType,1,1,0,1,0
java,QualifiedName,1,1,1,0,0
java,SimpleName,4,8,3,1,4
java,SimpleType,2,2,1,1,0
java,VariableDeclarationFragment,2,2,1,1,0
