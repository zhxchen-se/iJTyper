echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime44.java
Expect check=73
Cannot find matching typeVariable for: public class JodaTime44 {
  public static void main(  String[] args){
    PeriodFormatter daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter();
    Period period=new Period(72,24,12,0);
    System.out.println(daysHoursMinutes.print(period));
    System.out.println(daysHoursMinutes.print(period.normalizedStandard()));
  }
}

Cannot find matching typeVariable for: JodaTime44
Cannot find matching typeVariable for: public class JodaTime44 {
  public static void main(  String[] args){
    PeriodFormatter daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter();
    Period period=new Period(72,24,12,0);
    System.out.println(daysHoursMinutes.print(period));
    System.out.println(daysHoursMinutes.print(period.normalizedStandard()));
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Period;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime44 {
  public static void main(  String[] args){
    PeriodFormatter daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter();
    Period period=new Period(72,24,12,0);
    System.out.println(daysHoursMinutes.print(period));
    System.out.println(daysHoursMinutes.print(period.normalizedStandard()));
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
  PeriodFormatter daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter();
  Period period=new Period(72,24,12,0);
  System.out.println(daysHoursMinutes.print(period));
  System.out.println(daysHoursMinutes.print(period.normalizedStandard()));
}

Cannot find matching typeVariable for: public class JodaTime44 {
  public static void main(  String[] args){
    PeriodFormatter daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter();
    Period period=new Period(72,24,12,0);
    System.out.println(daysHoursMinutes.print(period));
    System.out.println(daysHoursMinutes.print(period.normalizedStandard()));
  }
}

Cannot find matching typeVariable for: package jodatime;
import org.joda.time.Period;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class JodaTime44 {
  public static void main(  String[] args){
    PeriodFormatter daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter();
    Period period=new Period(72,24,12,0);
    System.out.println(daysHoursMinutes.print(period));
    System.out.println(daysHoursMinutes.print(period.normalizedStandard()));
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
Did not find solution for node: PeriodFormatter with type Type5
Did not find solution for node: PeriodFormatter with type Type5
Cannot find matching typeVariable for: daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter()
Did not find solution for node: daysHoursMinutes=new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter() with type Type5
Did not find solution for node: daysHoursMinutes with type Type5
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds").toFormatter() with type Type33
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds().appendSuffix(" second"," seconds") with type Type29
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ").appendSeconds() with type Type27
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes").appendSeparator(" and ") with type Type24
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes().appendSuffix(" minute"," minutes") with type Type20
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ").appendMinutes() with type Type18
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days").appendSeparator(" and ") with type Type15
Did not find solution for node: new PeriodFormatterBuilder().appendDays().appendSuffix(" day"," days") with type Type11
Did not find solution for node: new PeriodFormatterBuilder().appendDays() with type Type8
For node: new PeriodFormatterBuilder() expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type6 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type6 got: org.joda.time.format.PeriodFormatterBuilder
For node: PeriodFormatterBuilder expected fqn: org.joda.time.format.PeriodFormatterBuilder with type: Type6 got: org.joda.time.format.PeriodFormatterBuilder
Cannot find matching typeVariable for: appendDays
Did not find solution for node: appendDays with type Type8
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type11
For node: " day" expected fqn: java.lang.String with type: Type10 got: java.lang.String
For node: " days" expected fqn: java.lang.String with type: Type10 got: java.lang.String
Cannot find matching typeVariable for: appendSeparator
Did not find solution for node: appendSeparator with type Type15
For node: " and " expected fqn: java.lang.String with type: Type10 got: java.lang.String
Cannot find matching typeVariable for: appendMinutes
Did not find solution for node: appendMinutes with type Type18
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type20
For node: " minute" expected fqn: java.lang.String with type: Type10 got: java.lang.String
For node: " minutes" expected fqn: java.lang.String with type: Type10 got: java.lang.String
Cannot find matching typeVariable for: appendSeparator
Did not find solution for node: appendSeparator with type Type24
For node: " and " expected fqn: java.lang.String with type: Type10 got: java.lang.String
Cannot find matching typeVariable for: appendSeconds
Did not find solution for node: appendSeconds with type Type27
Cannot find matching typeVariable for: appendSuffix
Did not find solution for node: appendSuffix with type Type29
For node: " second" expected fqn: java.lang.String with type: Type10 got: java.lang.String
For node: " seconds" expected fqn: java.lang.String with type: Type10 got: java.lang.String
Cannot find matching typeVariable for: toFormatter
Did not find solution for node: toFormatter with type Type33
For node: Period expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
For node: Period expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
Cannot find matching typeVariable for: period=new Period(72,24,12,0)
For node: period=new Period(72,24,12,0) expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
For node: period expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
For node: new Period(72,24,12,0) expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
For node: Period expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
For node: Period expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
For node: 72 expected fqn: int with type: Type36 got: byte
For node: 24 expected fqn: int with type: Type36 got: byte
For node: 12 expected fqn: int with type: Type36 got: byte
For node: 0 expected fqn: int with type: Type36 got: byte
For node: System.out.println(daysHoursMinutes.print(period)) expected fqn: void with type: Type47 got: void
Cannot find matching typeVariable for: System.out
For node: System.out expected fqn: java.io.PrintStream with type: Type47 got: void
For node: System expected fqn: java.lang.System with type: Type45 got: java.lang.System
For node: out expected fqn: java.io.PrintStream with type: Type46 got: java.io.PrintStream
Cannot find matching typeVariable for: println
For node: println expected fqn: void with type: Type47 got: void
Did not find solution for node: daysHoursMinutes.print(period) with type Type42
Did not find solution for node: daysHoursMinutes with type Type5
Cannot find matching typeVariable for: print
Did not find solution for node: print with type Type42
For node: period expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
For node: System.out.println(daysHoursMinutes.print(period.normalizedStandard())) expected fqn: void with type: Type55 got: void
Cannot find matching typeVariable for: System.out
For node: System.out expected fqn: java.io.PrintStream with type: Type55 got: void
For node: System expected fqn: java.lang.System with type: Type45 got: java.lang.System
For node: out expected fqn: java.io.PrintStream with type: Type46 got: java.io.PrintStream
Cannot find matching typeVariable for: println
For node: println expected fqn: void with type: Type55 got: void
Did not find solution for node: daysHoursMinutes.print(period.normalizedStandard()) with type Type52
Did not find solution for node: daysHoursMinutes with type Type5
Cannot find matching typeVariable for: print
Did not find solution for node: print with type Type52
For node: period.normalizedStandard() expected fqn: org.joda.time.Period with type: Type50 got: org.joda.time.Period
For node: period expected fqn: org.joda.time.Period with type: Type35 got: org.joda.time.Period
Cannot find matching typeVariable for: normalizedStandard
For node: normalizedStandard expected fqn: org.joda.time.Period with type: Type50 got: org.joda.time.Period
{Checked=70, Analyzed=42, Unsolved=28, Incorrect=6, Correct=36}
int=NumberLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=4, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=QualifiedName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
java=SimpleName: {Checked=8, Analyzed=6, Unsolved=2, Incorrect=0, Correct=6}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=StringLiteral: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
org.joda.time.=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=MethodInvocation: {Checked=10, Analyzed=1, Unsolved=9, Incorrect=0, Correct=1}
org.joda.time.=SimpleName: {Checked=20, Analyzed=7, Unsolved=13, Incorrect=0, Correct=7}
org.joda.time.=SimpleType: {Checked=4, Analyzed=3, Unsolved=1, Incorrect=0, Correct=3}
org.joda.time.=VariableDeclarationFragment: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
Total stats
{Checked=70, Analyzed=42, Unsolved=28, Incorrect=6, Correct=36}
int=NumberLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=4, Correct=0}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=QualifiedName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
java=SimpleName: {Checked=8, Analyzed=6, Unsolved=2, Incorrect=0, Correct=6}
java=SimpleType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=StringLiteral: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
org.joda.time.=ClassInstanceCreation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=MethodInvocation: {Checked=10, Analyzed=1, Unsolved=9, Incorrect=0, Correct=1}
org.joda.time.=SimpleName: {Checked=20, Analyzed=7, Unsolved=13, Incorrect=0, Correct=7}
org.joda.time.=SimpleType: {Checked=4, Analyzed=3, Unsolved=1, Incorrect=0, Correct=3}
org.joda.time.=VariableDeclarationFragment: {Checked=2, Analyzed=1, Unsolved=1, Incorrect=0, Correct=1}
void=MethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int,NumberLiteral,4,4,0,4,0
java,ArrayType,1,1,1,0,0
java,MethodInvocation,0,2,0,0,2
java,QualifiedName,2,2,0,2,0
java,SimpleName,6,8,6,0,2
java,SimpleType,1,1,1,0,0
java,SingleVariableDeclaration,1,1,1,0,0
java,StringLiteral,8,8,8,0,0
org.joda.time.,ClassInstanceCreation,2,2,2,0,0
org.joda.time.,MethodInvocation,1,10,1,0,9
org.joda.time.,SimpleName,7,20,7,0,13
org.joda.time.,SimpleType,3,4,3,0,1
org.joda.time.,VariableDeclarationFragment,1,2,1,0,1
void,MethodInvocation,2,2,2,0,0
void,PrimitiveType,1,1,1,0,0
void,SimpleName,2,2,2,0,0
