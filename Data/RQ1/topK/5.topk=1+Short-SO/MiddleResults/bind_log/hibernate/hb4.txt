echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/hb4.java
Expect check=14
Cannot find matching typeVariable for: public class hb4 {
  public static Session getSessionobject(){
    SessionFactory sessionFactory=null;
    assert false;
    return sessionFactory.getCurrentSession();
  }
}

Cannot find matching typeVariable for: hb4
Cannot find matching typeVariable for: public class hb4 {
  public static Session getSessionobject(){
    SessionFactory sessionFactory=null;
    assert false;
    return sessionFactory.getCurrentSession();
  }
}

Cannot find matching typeVariable for: package java.hibernate;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
public class hb4 {
  public static Session getSessionobject(){
    SessionFactory sessionFactory=null;
    assert false;
    return sessionFactory.getCurrentSession();
  }
}

For node: Session expected fqn: org.hibernate.Session with type: Type2 got: org.hibernate.Session
For node: Session expected fqn: org.hibernate.Session with type: Type2 got: org.hibernate.Session
Cannot find matching typeVariable for: getSessionobject
Cannot find matching typeVariable for: public static Session getSessionobject(){
  SessionFactory sessionFactory=null;
  assert false;
  return sessionFactory.getCurrentSession();
}

Cannot find matching typeVariable for: public class hb4 {
  public static Session getSessionobject(){
    SessionFactory sessionFactory=null;
    assert false;
    return sessionFactory.getCurrentSession();
  }
}

Cannot find matching typeVariable for: package java.hibernate;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
public class hb4 {
  public static Session getSessionobject(){
    SessionFactory sessionFactory=null;
    assert false;
    return sessionFactory.getCurrentSession();
  }
}

For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: SessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: sessionFactory=null
For node: sessionFactory=null expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
For node: null expected fqn: null with type: Type4 got: org.hibernate.SessionFactory
For node: false expected fqn: boolean with type: Type5 got: boolean
For node: sessionFactory.getCurrentSession() expected fqn: org.hibernate.Session with type: Type6 got: org.hibernate.Session
For node: sessionFactory expected fqn: org.hibernate.SessionFactory with type: Type3 got: org.hibernate.SessionFactory
Cannot find matching typeVariable for: getCurrentSession
For node: getCurrentSession expected fqn: org.hibernate.Session with type: Type6 got: org.hibernate.Session
{Checked=11, Analyzed=11, Unsolved=0, Incorrect=1, Correct=10}
boolean=BooleanLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
org.hibernate.=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=SimpleName: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
org.hibernate.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.hibernate.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=11, Analyzed=11, Unsolved=0, Incorrect=1, Correct=10}
boolean=BooleanLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
org.hibernate.=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
org.hibernate.=SimpleName: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
org.hibernate.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.hibernate.=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean,BooleanLiteral,1,1,1,0,0
null,NullLiteral,1,1,0,1,0
org.hibernate.,MethodInvocation,1,1,1,0,0
org.hibernate.,SimpleName,5,5,5,0,0
org.hibernate.,SimpleType,2,2,2,0,0
org.hibernate.,VariableDeclarationFragment,1,1,1,0,0
