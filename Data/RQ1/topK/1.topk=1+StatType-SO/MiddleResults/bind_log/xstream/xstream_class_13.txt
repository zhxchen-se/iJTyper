echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/xstream_class_13.java
Expect check=44
Cannot find matching typeVariable for: public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: xstream_class_13
Cannot find matching typeVariable for: public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.mapper.ClassAliasingMapper;
import com.thoughtworks.xstream.mapper.Mapper;
public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: public class MyClassAliasingMapper extends ClassAliasingMapper {
  public MyClassAliasingMapper(  Mapper wrapped){
    super(wrapped);
  }
  @Override public Class realClass(  String elementName){
    try {
    }
 catch (    Exception e) {
    }
    return super.realClass(elementName);
  }
  @Override public String serializedClass(  Class type){
    try {
    }
 catch (    Exception e) {
    }
    return super.serializedClass(type);
  }
}

Did not find solution for node: MyClassAliasingMapper with type Type2
For node: ClassAliasingMapper expected fqn: com.thoughtworks.xstream.mapper.ClassAliasingMapper with type: Type3 got: com.thoughtworks.xstream.mapper.ClassAliasingMapper
For node: ClassAliasingMapper expected fqn: com.thoughtworks.xstream.mapper.ClassAliasingMapper with type: Type3 got: com.thoughtworks.xstream.mapper.ClassAliasingMapper
Cannot find matching typeVariable for: MyClassAliasingMapper
Cannot find matching typeVariable for: public MyClassAliasingMapper(Mapper wrapped){
  super(wrapped);
}

Cannot find matching typeVariable for: public class MyClassAliasingMapper extends ClassAliasingMapper {
  public MyClassAliasingMapper(  Mapper wrapped){
    super(wrapped);
  }
  @Override public Class realClass(  String elementName){
    try {
    }
 catch (    Exception e) {
    }
    return super.realClass(elementName);
  }
  @Override public String serializedClass(  Class type){
    try {
    }
 catch (    Exception e) {
    }
    return super.serializedClass(type);
  }
}

Cannot find matching typeVariable for: public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.mapper.ClassAliasingMapper;
import com.thoughtworks.xstream.mapper.Mapper;
public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: Mapper wrapped
For node: Mapper wrapped expected fqn: com.thoughtworks.xstream.mapper.Mapper with type: Type19 got: com.thoughtworks.xstream.mapper.Mapper
For node: Mapper expected fqn: com.thoughtworks.xstream.mapper.Mapper with type: Type19 got: com.thoughtworks.xstream.mapper.Mapper
For node: Mapper expected fqn: com.thoughtworks.xstream.mapper.Mapper with type: Type19 got: com.thoughtworks.xstream.mapper.Mapper
For node: wrapped expected fqn: com.thoughtworks.xstream.mapper.Mapper with type: Type19 got: com.thoughtworks.xstream.mapper.Mapper
For node: wrapped expected fqn: com.thoughtworks.xstream.mapper.Mapper with type: Type19 got: com.thoughtworks.xstream.mapper.Mapper
For node: @Override expected fqn: java.lang.Override with type: Type23 got: java.lang.Override
For node: Override expected fqn: java.lang.Override with type: Type23 got: java.lang.Override
For node: Class expected fqn: java.lang.Class with type: Type4 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type4 got: java.lang.Class
Cannot find matching typeVariable for: realClass
Cannot find matching typeVariable for: @Override public Class realClass(String elementName){
  try {
  }
 catch (  Exception e) {
  }
  return super.realClass(elementName);
}

Cannot find matching typeVariable for: public class MyClassAliasingMapper extends ClassAliasingMapper {
  public MyClassAliasingMapper(  Mapper wrapped){
    super(wrapped);
  }
  @Override public Class realClass(  String elementName){
    try {
    }
 catch (    Exception e) {
    }
    return super.realClass(elementName);
  }
  @Override public String serializedClass(  Class type){
    try {
    }
 catch (    Exception e) {
    }
    return super.serializedClass(type);
  }
}

Cannot find matching typeVariable for: public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.mapper.ClassAliasingMapper;
import com.thoughtworks.xstream.mapper.Mapper;
public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: String elementName
For node: String elementName expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: elementName expected fqn: java.lang.String with type: Type6 got: java.lang.String
Cannot find matching typeVariable for: Exception e
For node: Exception e expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: e expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: super.realClass(elementName) expected fqn: java.lang.Class with type: Type25 got: java.lang.Class
Cannot find matching typeVariable for: realClass
For node: realClass expected fqn: java.lang.Class with type: Type25 got: java.lang.Class
For node: elementName expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: @Override expected fqn: java.lang.Override with type: Type23 got: java.lang.Override
For node: Override expected fqn: java.lang.Override with type: Type23 got: java.lang.Override
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
Cannot find matching typeVariable for: serializedClass
Cannot find matching typeVariable for: @Override public String serializedClass(Class type){
  try {
  }
 catch (  Exception e) {
  }
  return super.serializedClass(type);
}

Cannot find matching typeVariable for: public class MyClassAliasingMapper extends ClassAliasingMapper {
  public MyClassAliasingMapper(  Mapper wrapped){
    super(wrapped);
  }
  @Override public Class realClass(  String elementName){
    try {
    }
 catch (    Exception e) {
    }
    return super.realClass(elementName);
  }
  @Override public String serializedClass(  Class type){
    try {
    }
 catch (    Exception e) {
    }
    return super.serializedClass(type);
  }
}

Cannot find matching typeVariable for: public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: import com.thoughtworks.xstream.mapper.ClassAliasingMapper;
import com.thoughtworks.xstream.mapper.Mapper;
public class xstream_class_13 {
public class MyClassAliasingMapper extends ClassAliasingMapper {
    public MyClassAliasingMapper(    Mapper wrapped){
      super(wrapped);
    }
    @Override public Class realClass(    String elementName){
      try {
      }
 catch (      Exception e) {
      }
      return super.realClass(elementName);
    }
    @Override public String serializedClass(    Class type){
      try {
      }
 catch (      Exception e) {
      }
      return super.serializedClass(type);
    }
  }
}

Cannot find matching typeVariable for: Class type
For node: Class type expected fqn: java.lang.Class with type: Type4 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type4 got: java.lang.Class
For node: Class expected fqn: java.lang.Class with type: Type4 got: java.lang.Class
For node: type expected fqn: java.lang.Class with type: Type4 got: java.lang.Class
Cannot find matching typeVariable for: Exception e
For node: Exception e expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: Exception expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: e expected fqn: java.lang.Exception with type: Type24 got: java.lang.Exception
For node: super.serializedClass(type) expected fqn: java.lang.String with type: Type28 got: java.lang.String
Cannot find matching typeVariable for: serializedClass
For node: serializedClass expected fqn: java.lang.String with type: Type28 got: java.lang.String
For node: type expected fqn: java.lang.Class with type: Type4 got: java.lang.Class
{Checked=38, Analyzed=37, Unsolved=1, Incorrect=0, Correct=37}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
com.thoughtworks.xstream.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MarkerAnnotation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleName: {Checked=16, Analyzed=16, Unsolved=0, Incorrect=0, Correct=16}
java=SimpleType: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=SingleVariableDeclaration: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=SuperMethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
Total stats
{Checked=38, Analyzed=37, Unsolved=1, Incorrect=0, Correct=37}
=SimpleName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
com.thoughtworks.xstream.=SimpleName: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
com.thoughtworks.xstream.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
com.thoughtworks.xstream.=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MarkerAnnotation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SimpleName: {Checked=16, Analyzed=16, Unsolved=0, Incorrect=0, Correct=16}
java=SimpleType: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=SingleVariableDeclaration: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=SuperMethodInvocation: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
,SimpleName,0,1,0,0,1
com.thoughtworks.xstream.,SimpleName,4,4,4,0,0
com.thoughtworks.xstream.,SimpleType,2,2,2,0,0
com.thoughtworks.xstream.,SingleVariableDeclaration,1,1,1,0,0
java,MarkerAnnotation,2,2,2,0,0
java,SimpleName,16,16,16,0,0
java,SimpleType,6,6,6,0,0
java,SingleVariableDeclaration,4,4,4,0,0
java,SuperMethodInvocation,2,2,2,0,0
