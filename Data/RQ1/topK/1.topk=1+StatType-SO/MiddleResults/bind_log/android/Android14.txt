echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/Android14.java
Expect check=118
Cannot find matching typeVariable for: public class Android14 {
  public static void main(  String[] args){
    try {
      URL u=new URL("http://www.path.to/a.mp4?video");
      HttpURLConnection c=(HttpURLConnection)u.openConnection();
      c.setRequestMethod("GET");
      c.setDoOutput(true);
      c.connect();
      String root="root";
      FileOutputStream f=new FileOutputStream(new File(root,"Video.mp4"));
      InputStream in=c.getInputStream();
      byte[] buffer=new byte[1024];
      int len1=0;
      while ((len1=in.read(buffer)) > 0) {
        f.write(buffer);
      }
      f.close();
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
catch (    ProtocolException e) {
      e.printStackTrace();
    }
catch (    FileNotFoundException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
}

Cannot find matching typeVariable for: Android14
Cannot find matching typeVariable for: public class Android14 {
  public static void main(  String[] args){
    try {
      URL u=new URL("http://www.path.to/a.mp4?video");
      HttpURLConnection c=(HttpURLConnection)u.openConnection();
      c.setRequestMethod("GET");
      c.setDoOutput(true);
      c.connect();
      String root="root";
      FileOutputStream f=new FileOutputStream(new File(root,"Video.mp4"));
      InputStream in=c.getInputStream();
      byte[] buffer=new byte[1024];
      int len1=0;
      while ((len1=in.read(buffer)) > 0) {
        f.write(buffer);
      }
      f.close();
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
catch (    ProtocolException e) {
      e.printStackTrace();
    }
catch (    FileNotFoundException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
}

Cannot find matching typeVariable for: package androidExamples;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
public class Android14 {
  public static void main(  String[] args){
    try {
      URL u=new URL("http://www.path.to/a.mp4?video");
      HttpURLConnection c=(HttpURLConnection)u.openConnection();
      c.setRequestMethod("GET");
      c.setDoOutput(true);
      c.connect();
      String root="root";
      FileOutputStream f=new FileOutputStream(new File(root,"Video.mp4"));
      InputStream in=c.getInputStream();
      byte[] buffer=new byte[1024];
      int len1=0;
      while ((len1=in.read(buffer)) > 0) {
        f.write(buffer);
      }
      f.close();
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
catch (    ProtocolException e) {
      e.printStackTrace();
    }
catch (    FileNotFoundException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
  try {
    URL u=new URL("http://www.path.to/a.mp4?video");
    HttpURLConnection c=(HttpURLConnection)u.openConnection();
    c.setRequestMethod("GET");
    c.setDoOutput(true);
    c.connect();
    String root="root";
    FileOutputStream f=new FileOutputStream(new File(root,"Video.mp4"));
    InputStream in=c.getInputStream();
    byte[] buffer=new byte[1024];
    int len1=0;
    while ((len1=in.read(buffer)) > 0) {
      f.write(buffer);
    }
    f.close();
  }
 catch (  MalformedURLException e) {
    e.printStackTrace();
  }
catch (  ProtocolException e) {
    e.printStackTrace();
  }
catch (  FileNotFoundException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
}

Cannot find matching typeVariable for: public class Android14 {
  public static void main(  String[] args){
    try {
      URL u=new URL("http://www.path.to/a.mp4?video");
      HttpURLConnection c=(HttpURLConnection)u.openConnection();
      c.setRequestMethod("GET");
      c.setDoOutput(true);
      c.connect();
      String root="root";
      FileOutputStream f=new FileOutputStream(new File(root,"Video.mp4"));
      InputStream in=c.getInputStream();
      byte[] buffer=new byte[1024];
      int len1=0;
      while ((len1=in.read(buffer)) > 0) {
        f.write(buffer);
      }
      f.close();
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
catch (    ProtocolException e) {
      e.printStackTrace();
    }
catch (    FileNotFoundException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
}

Cannot find matching typeVariable for: package androidExamples;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
public class Android14 {
  public static void main(  String[] args){
    try {
      URL u=new URL("http://www.path.to/a.mp4?video");
      HttpURLConnection c=(HttpURLConnection)u.openConnection();
      c.setRequestMethod("GET");
      c.setDoOutput(true);
      c.connect();
      String root="root";
      FileOutputStream f=new FileOutputStream(new File(root,"Video.mp4"));
      InputStream in=c.getInputStream();
      byte[] buffer=new byte[1024];
      int len1=0;
      while ((len1=in.read(buffer)) > 0) {
        f.write(buffer);
      }
      f.close();
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
catch (    ProtocolException e) {
      e.printStackTrace();
    }
catch (    FileNotFoundException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: URL expected fqn: java.net.URL with type: Type5 got: java.net.URL
For node: URL expected fqn: java.net.URL with type: Type5 got: java.net.URL
Cannot find matching typeVariable for: u=new URL("http://www.path.to/a.mp4?video")
For node: u=new URL("http://www.path.to/a.mp4?video") expected fqn: java.net.URL with type: Type5 got: java.net.URL
For node: u expected fqn: java.net.URL with type: Type5 got: java.net.URL
For node: new URL("http://www.path.to/a.mp4?video") expected fqn: java.net.URL with type: Type5 got: java.net.URL
For node: URL expected fqn: java.net.URL with type: Type5 got: java.net.URL
For node: URL expected fqn: java.net.URL with type: Type5 got: java.net.URL
For node: "http://www.path.to/a.mp4?video" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: HttpURLConnection expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
For node: HttpURLConnection expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
Cannot find matching typeVariable for: c=(HttpURLConnection)u.openConnection()
For node: c=(HttpURLConnection)u.openConnection() expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
For node: c expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
For node: (HttpURLConnection)u.openConnection() expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
For node: HttpURLConnection expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
For node: HttpURLConnection expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
Did not find solution for node: u.openConnection() with type Type10
For node: u expected fqn: java.net.URL with type: Type5 got: java.net.URL
Cannot find matching typeVariable for: openConnection
Did not find solution for node: openConnection with type Type10
For node: c.setRequestMethod("GET") expected fqn: void with type: Type12 got: void
For node: c expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
Cannot find matching typeVariable for: setRequestMethod
For node: setRequestMethod expected fqn: void with type: Type12 got: void
For node: "GET" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: c.setDoOutput(true) expected fqn: void with type: Type16 got: void
For node: c expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
Cannot find matching typeVariable for: setDoOutput
For node: setDoOutput expected fqn: void with type: Type16 got: void
For node: true expected fqn: boolean with type: Type15 got: boolean
For node: c.connect() expected fqn: void with type: Type19 got: void
For node: c expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
Cannot find matching typeVariable for: connect
For node: connect expected fqn: void with type: Type19 got: void
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type6 got: java.lang.String
Cannot find matching typeVariable for: root="root"
For node: root="root" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: root expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: "root" expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: FileOutputStream expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
For node: FileOutputStream expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
Cannot find matching typeVariable for: f=new FileOutputStream(new File(root,"Video.mp4"))
For node: f=new FileOutputStream(new File(root,"Video.mp4")) expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
For node: f expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
For node: new FileOutputStream(new File(root,"Video.mp4")) expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
For node: FileOutputStream expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
For node: FileOutputStream expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
For node: new File(root,"Video.mp4") expected fqn: java.io.File with type: Type22 got: java.io.File
For node: File expected fqn: java.io.File with type: Type22 got: java.io.File
For node: File expected fqn: java.io.File with type: Type22 got: java.io.File
For node: root expected fqn: java.lang.String with type: Type6 got: java.lang.String
For node: "Video.mp4" expected fqn: java.lang.String with type: Type6 got: java.lang.String
Did not find solution for node: InputStream with type Type28
Did not find solution for node: InputStream with type Type28
Cannot find matching typeVariable for: in=c.getInputStream()
Did not find solution for node: in=c.getInputStream() with type Type28
Did not find solution for node: in with type Type28
Did not find solution for node: c.getInputStream() with type Type29
For node: c expected fqn: java.net.HttpURLConnection with type: Type9 got: java.net.HttpURLConnection
Cannot find matching typeVariable for: getInputStream
Did not find solution for node: getInputStream with type Type29
Did not find solution for node: byte[] with type Type32
For node: byte expected fqn: byte with type: Type31 got: byte
Cannot find matching typeVariable for: buffer=new byte[1024]
Did not find solution for node: buffer=new byte[1024] with type Type32
Did not find solution for node: buffer with type Type32
Did not find solution for node: new byte[1024] with type Type32
Did not find solution for node: byte[] with type Type32
For node: byte expected fqn: byte with type: Type31 got: byte
For node: 1024 expected fqn: int with type: Type33 got: short
For node: int expected fqn: int with type: Type34 got: int
Cannot find matching typeVariable for: len1=0
For node: len1=0 expected fqn: int with type: Type34 got: int
For node: len1 expected fqn: int with type: Type34 got: int
For node: 0 expected fqn: int with type: Type31 got: byte
For node: (len1=in.read(buffer)) > 0 expected fqn: boolean with type: Type15 got: boolean
For node: (len1=in.read(buffer)) expected fqn: int with type: Type34 got: int
For node: len1=in.read(buffer) expected fqn: int with type: Type34 got: int
For node: len1 expected fqn: int with type: Type34 got: int
For node: in.read(buffer) expected fqn: int with type: Type35 got: int
Did not find solution for node: in with type Type28
Cannot find matching typeVariable for: read
For node: read expected fqn: int with type: Type35 got: int
Did not find solution for node: buffer with type Type32
For node: 0 expected fqn: int with type: Type31 got: byte
For node: f.write(buffer) expected fqn: void with type: Type38 got: void
For node: f expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
Cannot find matching typeVariable for: write
For node: write expected fqn: void with type: Type38 got: void
Did not find solution for node: buffer with type Type32
For node: f.close() expected fqn: void with type: Type41 got: void
For node: f expected fqn: java.io.FileOutputStream with type: Type21 got: java.io.FileOutputStream
Cannot find matching typeVariable for: close
For node: close expected fqn: void with type: Type41 got: void
Cannot find matching typeVariable for: MalformedURLException e
For node: MalformedURLException e expected fqn: java.net.MalformedURLException with type: Type43 got: java.net.MalformedURLException
For node: MalformedURLException expected fqn: java.net.MalformedURLException with type: Type43 got: java.net.MalformedURLException
For node: MalformedURLException expected fqn: java.net.MalformedURLException with type: Type43 got: java.net.MalformedURLException
For node: e expected fqn: java.net.MalformedURLException with type: Type43 got: java.net.MalformedURLException
For node: e.printStackTrace() expected fqn: void with type: Type44 got: void
For node: e expected fqn: java.net.MalformedURLException with type: Type43 got: java.net.MalformedURLException
Cannot find matching typeVariable for: printStackTrace
For node: printStackTrace expected fqn: void with type: Type44 got: void
Cannot find matching typeVariable for: ProtocolException e
For node: ProtocolException e expected fqn: java.net.ProtocolException with type: Type46 got: java.net.ProtocolException
For node: ProtocolException expected fqn: java.net.ProtocolException with type: Type46 got: java.net.ProtocolException
For node: ProtocolException expected fqn: java.net.ProtocolException with type: Type46 got: java.net.ProtocolException
For node: e expected fqn: java.net.ProtocolException with type: Type46 got: java.net.ProtocolException
For node: e.printStackTrace() expected fqn: void with type: Type47 got: void
For node: e expected fqn: java.net.ProtocolException with type: Type46 got: java.net.ProtocolException
Cannot find matching typeVariable for: printStackTrace
For node: printStackTrace expected fqn: void with type: Type47 got: void
Cannot find matching typeVariable for: FileNotFoundException e
For node: FileNotFoundException e expected fqn: java.io.FileNotFoundException with type: Type49 got: java.io.FileNotFoundException
For node: FileNotFoundException expected fqn: java.io.FileNotFoundException with type: Type49 got: java.io.FileNotFoundException
For node: FileNotFoundException expected fqn: java.io.FileNotFoundException with type: Type49 got: java.io.FileNotFoundException
For node: e expected fqn: java.io.FileNotFoundException with type: Type49 got: java.io.FileNotFoundException
For node: e.printStackTrace() expected fqn: void with type: Type50 got: void
For node: e expected fqn: java.io.FileNotFoundException with type: Type49 got: java.io.FileNotFoundException
Cannot find matching typeVariable for: printStackTrace
For node: printStackTrace expected fqn: void with type: Type50 got: void
Cannot find matching typeVariable for: IOException e
For node: IOException e expected fqn: java.io.IOException with type: Type52 got: java.io.IOException
For node: IOException expected fqn: java.io.IOException with type: Type52 got: java.io.IOException
For node: IOException expected fqn: java.io.IOException with type: Type52 got: java.io.IOException
For node: e expected fqn: java.io.IOException with type: Type52 got: java.io.IOException
For node: e.printStackTrace() expected fqn: void with type: Type53 got: void
For node: e expected fqn: java.io.IOException with type: Type52 got: java.io.IOException
Cannot find matching typeVariable for: printStackTrace
For node: printStackTrace expected fqn: void with type: Type53 got: void
{Checked=115, Analyzed=99, Unsolved=16, Incorrect=3, Correct=96}
boolean=BooleanLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
byte=ArrayCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
byte=ArrayType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
byte=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
byte=SimpleName: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
byte=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=3, Correct=0}
int=ParenthesizedExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=MethodInvocation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=SimpleName: {Checked=39, Analyzed=34, Unsolved=5, Incorrect=0, Correct=34}
java=SimpleType: {Checked=14, Analyzed=13, Unsolved=1, Incorrect=0, Correct=13}
java=SingleVariableDeclaration: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=StringLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=VariableDeclarationFragment: {Checked=5, Analyzed=4, Unsolved=1, Incorrect=0, Correct=4}
void=MethodInvocation: {Checked=9, Analyzed=9, Unsolved=0, Incorrect=0, Correct=9}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=9, Analyzed=9, Unsolved=0, Incorrect=0, Correct=9}
Total stats
{Checked=115, Analyzed=99, Unsolved=16, Incorrect=3, Correct=96}
boolean=BooleanLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
byte=ArrayCreation: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
byte=ArrayType: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
byte=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
byte=SimpleName: {Checked=3, Analyzed=0, Unsolved=3, Incorrect=0, Correct=0}
byte=VariableDeclarationFragment: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
int=Assignment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=NumberLiteral: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=3, Correct=0}
int=ParenthesizedExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=MethodInvocation: {Checked=2, Analyzed=0, Unsolved=2, Incorrect=0, Correct=0}
java=SimpleName: {Checked=39, Analyzed=34, Unsolved=5, Incorrect=0, Correct=34}
java=SimpleType: {Checked=14, Analyzed=13, Unsolved=1, Incorrect=0, Correct=13}
java=SingleVariableDeclaration: {Checked=5, Analyzed=5, Unsolved=0, Incorrect=0, Correct=5}
java=StringLiteral: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=VariableDeclarationFragment: {Checked=5, Analyzed=4, Unsolved=1, Incorrect=0, Correct=4}
void=MethodInvocation: {Checked=9, Analyzed=9, Unsolved=0, Incorrect=0, Correct=9}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=SimpleName: {Checked=9, Analyzed=9, Unsolved=0, Incorrect=0, Correct=9}
boolean,BooleanLiteral,1,1,1,0,0
boolean,InfixExpression,1,1,1,0,0
byte,ArrayCreation,0,1,0,0,1
byte,ArrayType,0,2,0,0,2
byte,PrimitiveType,2,2,2,0,0
byte,SimpleName,0,3,0,0,3
byte,VariableDeclarationFragment,0,1,0,0,1
int,Assignment,1,1,1,0,0
int,MethodInvocation,1,1,1,0,0
int,NumberLiteral,3,3,0,3,0
int,ParenthesizedExpression,1,1,1,0,0
int,PrimitiveType,1,1,1,0,0
int,SimpleName,3,3,3,0,0
int,VariableDeclarationFragment,1,1,1,0,0
java,ArrayType,1,1,1,0,0
java,CastExpression,1,1,1,0,0
java,ClassInstanceCreation,3,3,3,0,0
java,MethodInvocation,0,2,0,0,2
java,SimpleName,34,39,34,0,5
java,SimpleType,13,14,13,0,1
java,SingleVariableDeclaration,5,5,5,0,0
java,StringLiteral,4,4,4,0,0
java,VariableDeclarationFragment,4,5,4,0,1
void,MethodInvocation,9,9,9,0,0
void,PrimitiveType,1,1,1,0,0
void,SimpleName,9,9,9,0,0
