echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/JodaTime19.java
Expect check=52
Cannot find matching typeVariable for: public class JodaTime19 {
  public static void main(  String[] args){
    Instant now=new Instant(new Date().getTime());
    Interval i2=new Interval(now,(ReadableInstant)null);
    Interval i1=new Interval(now,(ReadableInstant)null);
    boolean overlapping=i2.overlaps(i1);
  }
}

Cannot find matching typeVariable for: JodaTime19
Cannot find matching typeVariable for: public class JodaTime19 {
  public static void main(  String[] args){
    Instant now=new Instant(new Date().getTime());
    Interval i2=new Interval(now,(ReadableInstant)null);
    Interval i1=new Interval(now,(ReadableInstant)null);
    boolean overlapping=i2.overlaps(i1);
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.util.Date;
import org.joda.time.Instant;
import org.joda.time.Interval;
import org.joda.time.ReadableInstant;
public class JodaTime19 {
  public static void main(  String[] args){
    Instant now=new Instant(new Date().getTime());
    Interval i2=new Interval(now,(ReadableInstant)null);
    Interval i1=new Interval(now,(ReadableInstant)null);
    boolean overlapping=i2.overlaps(i1);
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: main
Cannot find matching typeVariable for: public static void main(String[] args){
  Instant now=new Instant(new Date().getTime());
  Interval i2=new Interval(now,(ReadableInstant)null);
  Interval i1=new Interval(now,(ReadableInstant)null);
  boolean overlapping=i2.overlaps(i1);
}

Cannot find matching typeVariable for: public class JodaTime19 {
  public static void main(  String[] args){
    Instant now=new Instant(new Date().getTime());
    Interval i2=new Interval(now,(ReadableInstant)null);
    Interval i1=new Interval(now,(ReadableInstant)null);
    boolean overlapping=i2.overlaps(i1);
  }
}

Cannot find matching typeVariable for: package jodatime;
import java.util.Date;
import org.joda.time.Instant;
import org.joda.time.Interval;
import org.joda.time.ReadableInstant;
public class JodaTime19 {
  public static void main(  String[] args){
    Instant now=new Instant(new Date().getTime());
    Interval i2=new Interval(now,(ReadableInstant)null);
    Interval i1=new Interval(now,(ReadableInstant)null);
    boolean overlapping=i2.overlaps(i1);
  }
}

Cannot find matching typeVariable for: String[] args
For node: String[] args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String[] expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: args expected fqn: java.lang.String[] with type: Type4 got: java.lang.String[]
For node: Instant expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: Instant expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
Cannot find matching typeVariable for: now=new Instant(new Date().getTime())
For node: now=new Instant(new Date().getTime()) expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: now expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: new Instant(new Date().getTime()) expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: Instant expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: Instant expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: new Date().getTime() expected fqn: long with type: Type8 got: long
For node: new Date() expected fqn: java.util.Date with type: Type6 got: java.util.Date
For node: Date expected fqn: java.util.Date with type: Type6 got: java.util.Date
For node: Date expected fqn: java.util.Date with type: Type6 got: java.util.Date
Cannot find matching typeVariable for: getTime
For node: getTime expected fqn: long with type: Type8 got: long
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
Cannot find matching typeVariable for: i2=new Interval(now,(ReadableInstant)null)
For node: i2=new Interval(now,(ReadableInstant)null) expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: i2 expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: new Interval(now,(ReadableInstant)null) expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: now expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: (ReadableInstant)null expected fqn: org.joda.time.ReadableInstant with type: Type13 got: org.joda.time.ReadableInstant
For node: ReadableInstant expected fqn: org.joda.time.ReadableInstant with type: Type13 got: org.joda.time.ReadableInstant
For node: ReadableInstant expected fqn: org.joda.time.ReadableInstant with type: Type13 got: org.joda.time.ReadableInstant
For node: null expected fqn: null with type: Type14 got: org.joda.time.ReadableInstant
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
Cannot find matching typeVariable for: i1=new Interval(now,(ReadableInstant)null)
For node: i1=new Interval(now,(ReadableInstant)null) expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: i1 expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: new Interval(now,(ReadableInstant)null) expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: Interval expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
For node: now expected fqn: org.joda.time.Instant with type: Type5 got: org.joda.time.Instant
For node: (ReadableInstant)null expected fqn: org.joda.time.ReadableInstant with type: Type13 got: org.joda.time.ReadableInstant
For node: ReadableInstant expected fqn: org.joda.time.ReadableInstant with type: Type13 got: org.joda.time.ReadableInstant
For node: ReadableInstant expected fqn: org.joda.time.ReadableInstant with type: Type13 got: org.joda.time.ReadableInstant
For node: null expected fqn: null with type: Type18 got: org.joda.time.ReadableInstant
For node: boolean expected fqn: boolean with type: Type19 got: boolean
Cannot find matching typeVariable for: overlapping=i2.overlaps(i1)
For node: overlapping=i2.overlaps(i1) expected fqn: boolean with type: Type19 got: boolean
For node: overlapping expected fqn: boolean with type: Type19 got: boolean
For node: i2.overlaps(i1) expected fqn: boolean with type: Type20 got: boolean
For node: i2 expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
Cannot find matching typeVariable for: overlaps
For node: overlaps expected fqn: boolean with type: Type20 got: boolean
For node: i1 expected fqn: org.joda.time.Interval with type: Type12 got: org.joda.time.Interval
{Checked=49, Analyzed=49, Unsolved=0, Incorrect=2, Correct=47}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
boolean=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
org.joda.time.=CastExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=ClassInstanceCreation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.joda.time.=SimpleName: {Checked=15, Analyzed=15, Unsolved=0, Incorrect=0, Correct=15}
org.joda.time.=SimpleType: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
org.joda.time.=VariableDeclarationFragment: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=49, Analyzed=49, Unsolved=0, Incorrect=2, Correct=47}
boolean=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
boolean=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ArrayType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
java=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=SingleVariableDeclaration: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=SimpleName: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
null=NullLiteral: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=2, Correct=0}
org.joda.time.=CastExpression: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=ClassInstanceCreation: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
org.joda.time.=SimpleName: {Checked=15, Analyzed=15, Unsolved=0, Incorrect=0, Correct=15}
org.joda.time.=SimpleType: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
org.joda.time.=VariableDeclarationFragment: {Checked=3, Analyzed=3, Unsolved=0, Incorrect=0, Correct=3}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
boolean,MethodInvocation,1,1,1,0,0
boolean,PrimitiveType,1,1,1,0,0
boolean,SimpleName,2,2,2,0,0
boolean,VariableDeclarationFragment,1,1,1,0,0
java,ArrayType,1,1,1,0,0
java,ClassInstanceCreation,1,1,1,0,0
java,SimpleName,3,3,3,0,0
java,SimpleType,2,2,2,0,0
java,SingleVariableDeclaration,1,1,1,0,0
long,MethodInvocation,1,1,1,0,0
long,SimpleName,1,1,1,0,0
null,NullLiteral,2,2,0,2,0
org.joda.time.,CastExpression,2,2,2,0,0
org.joda.time.,ClassInstanceCreation,3,3,3,0,0
org.joda.time.,SimpleName,15,15,15,0,0
org.joda.time.,SimpleType,8,8,8,0,0
org.joda.time.,VariableDeclarationFragment,3,3,3,0,0
void,PrimitiveType,1,1,1,0,0
