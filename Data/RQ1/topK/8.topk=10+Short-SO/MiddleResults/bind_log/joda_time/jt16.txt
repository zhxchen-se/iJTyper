echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/jt16.java
Expect check=26
Cannot find matching typeVariable for: public class jt16 {
  public static int getDaysBetween(  DateTime earlier,  DateTime later){
    return (int)TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis());
  }
}

Cannot find matching typeVariable for: jt16
Cannot find matching typeVariable for: public class jt16 {
  public static int getDaysBetween(  DateTime earlier,  DateTime later){
    return (int)TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis());
  }
}

Cannot find matching typeVariable for: package java.joda_time;
import org.joda.time.DateTime;
import java.util.concurrent.TimeUnit;
public class jt16 {
  public static int getDaysBetween(  DateTime earlier,  DateTime later){
    return (int)TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis());
  }
}

For node: int expected fqn: int with type: Type2 got: int
Cannot find matching typeVariable for: getDaysBetween
Cannot find matching typeVariable for: public static int getDaysBetween(DateTime earlier,DateTime later){
  return (int)TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis());
}

Cannot find matching typeVariable for: public class jt16 {
  public static int getDaysBetween(  DateTime earlier,  DateTime later){
    return (int)TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis());
  }
}

Cannot find matching typeVariable for: package java.joda_time;
import org.joda.time.DateTime;
import java.util.concurrent.TimeUnit;
public class jt16 {
  public static int getDaysBetween(  DateTime earlier,  DateTime later){
    return (int)TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis());
  }
}

Cannot find matching typeVariable for: DateTime earlier
For node: DateTime earlier expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
For node: DateTime expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
For node: DateTime expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
For node: earlier expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
Cannot find matching typeVariable for: DateTime later
For node: DateTime later expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
For node: DateTime expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
For node: DateTime expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
For node: later expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
For node: (int)TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis()) expected fqn: int with type: Type2 got: int
For node: int expected fqn: int with type: Type2 got: int
Did not find solution for node: TimeUnit.MILLISECONDS.toDays(later.getMillis() - earlier.getMillis()) with type Type8
Cannot find matching typeVariable for: TimeUnit.MILLISECONDS
Did not find solution for node: TimeUnit.MILLISECONDS with type Type8
For node: TimeUnit expected fqn: java.util.concurrent.TimeUnit with type: Type6 got: java.util.concurrent.TimeUnit
For node: MILLISECONDS expected fqn: java.util.concurrent.TimeUnit with type: Type7 got: java.util.concurrent.TimeUnit
Cannot find matching typeVariable for: toDays
Did not find solution for node: toDays with type Type8
For node: later.getMillis() - earlier.getMillis() expected fqn: long with type: Type4 got: long
For node: later.getMillis() expected fqn: long with type: Type4 got: long
For node: later expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
Cannot find matching typeVariable for: getMillis
For node: getMillis expected fqn: long with type: Type4 got: long
For node: earlier.getMillis() expected fqn: long with type: Type5 got: long
For node: earlier expected fqn: org.joda.time.DateTime with type: Type3 got: org.joda.time.DateTime
Cannot find matching typeVariable for: getMillis
For node: getMillis expected fqn: long with type: Type5 got: long
{Checked=23, Analyzed=20, Unsolved=3, Incorrect=0, Correct=20}
int=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=QualifiedName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=MethodInvocation: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
long=SimpleName: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
org.joda.time.=SimpleName: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
org.joda.time.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
Total stats
{Checked=23, Analyzed=20, Unsolved=3, Incorrect=0, Correct=20}
int=CastExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=PrimitiveType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=QualifiedName: {Checked=1, Analyzed=0, Unsolved=1, Incorrect=0, Correct=0}
java=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=InfixExpression: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=MethodInvocation: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
long=SimpleName: {Checked=3, Analyzed=2, Unsolved=1, Incorrect=0, Correct=2}
org.joda.time.=SimpleName: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
org.joda.time.=SimpleType: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
org.joda.time.=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int,CastExpression,1,1,1,0,0
int,PrimitiveType,2,2,2,0,0
java,QualifiedName,0,1,0,0,1
java,SimpleName,2,2,2,0,0
long,InfixExpression,1,1,1,0,0
long,MethodInvocation,2,3,2,0,1
long,SimpleName,2,3,2,0,1
org.joda.time.,SimpleName,6,6,6,0,0
org.joda.time.,SimpleType,2,2,2,0,0
org.joda.time.,SingleVariableDeclaration,2,2,2,0,0
