echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/jdk4.java
Expect check=36
Cannot find matching typeVariable for: public class jdk4 {
  public static void h1(  String oldDate,  String format) throws ParseException {
    SimpleDateFormat sdf=new SimpleDateFormat(format);
    Date dt=sdf.parse(oldDate);
    long epoch=dt.getTime();
  }
}

Cannot find matching typeVariable for: jdk4
Cannot find matching typeVariable for: public class jdk4 {
  public static void h1(  String oldDate,  String format) throws ParseException {
    SimpleDateFormat sdf=new SimpleDateFormat(format);
    Date dt=sdf.parse(oldDate);
    long epoch=dt.getTime();
  }
}

Cannot find matching typeVariable for: package java.jdk;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
public class jdk4 {
  public static void h1(  String oldDate,  String format) throws ParseException {
    SimpleDateFormat sdf=new SimpleDateFormat(format);
    Date dt=sdf.parse(oldDate);
    long epoch=dt.getTime();
  }
}

For node: void expected fqn: void with type: Type2 got: void
Cannot find matching typeVariable for: h1
Cannot find matching typeVariable for: public static void h1(String oldDate,String format) throws ParseException {
  SimpleDateFormat sdf=new SimpleDateFormat(format);
  Date dt=sdf.parse(oldDate);
  long epoch=dt.getTime();
}

Cannot find matching typeVariable for: public class jdk4 {
  public static void h1(  String oldDate,  String format) throws ParseException {
    SimpleDateFormat sdf=new SimpleDateFormat(format);
    Date dt=sdf.parse(oldDate);
    long epoch=dt.getTime();
  }
}

Cannot find matching typeVariable for: package java.jdk;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
public class jdk4 {
  public static void h1(  String oldDate,  String format) throws ParseException {
    SimpleDateFormat sdf=new SimpleDateFormat(format);
    Date dt=sdf.parse(oldDate);
    long epoch=dt.getTime();
  }
}

Cannot find matching typeVariable for: String oldDate
For node: String oldDate expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: oldDate expected fqn: java.lang.String with type: Type3 got: java.lang.String
Cannot find matching typeVariable for: String format
For node: String format expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: format expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: ParseException expected fqn: java.text.ParseException with type: Type4 got: java.text.ParseException
For node: ParseException expected fqn: java.text.ParseException with type: Type4 got: java.text.ParseException
For node: SimpleDateFormat expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
For node: SimpleDateFormat expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
Cannot find matching typeVariable for: sdf=new SimpleDateFormat(format)
For node: sdf=new SimpleDateFormat(format) expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
For node: sdf expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
For node: new SimpleDateFormat(format) expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
For node: SimpleDateFormat expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
For node: SimpleDateFormat expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
For node: format expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: Date expected fqn: java.util.Date with type: Type8 got: java.util.Date
For node: Date expected fqn: java.util.Date with type: Type8 got: java.util.Date
Cannot find matching typeVariable for: dt=sdf.parse(oldDate)
For node: dt=sdf.parse(oldDate) expected fqn: java.util.Date with type: Type8 got: java.util.Date
For node: dt expected fqn: java.util.Date with type: Type8 got: java.util.Date
For node: sdf.parse(oldDate) expected fqn: java.util.Date with type: Type9 got: java.util.Date
For node: sdf expected fqn: java.text.SimpleDateFormat with type: Type5 got: java.text.SimpleDateFormat
Cannot find matching typeVariable for: parse
For node: parse expected fqn: java.util.Date with type: Type9 got: java.util.Date
For node: oldDate expected fqn: java.lang.String with type: Type3 got: java.lang.String
For node: long expected fqn: long with type: Type12 got: long
Cannot find matching typeVariable for: epoch=dt.getTime()
For node: epoch=dt.getTime() expected fqn: long with type: Type12 got: long
For node: epoch expected fqn: long with type: Type12 got: long
For node: dt.getTime() expected fqn: long with type: Type13 got: long
For node: dt expected fqn: java.util.Date with type: Type8 got: java.util.Date
Cannot find matching typeVariable for: getTime
For node: getTime expected fqn: long with type: Type13 got: long
{Checked=33, Analyzed=33, Unsolved=0, Incorrect=0, Correct=33}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=15, Analyzed=15, Unsolved=0, Incorrect=0, Correct=15}
java=SimpleType: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
Total stats
{Checked=33, Analyzed=33, Unsolved=0, Incorrect=0, Correct=33}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=15, Analyzed=15, Unsolved=0, Incorrect=0, Correct=15}
java=SimpleType: {Checked=6, Analyzed=6, Unsolved=0, Incorrect=0, Correct=6}
java=SingleVariableDeclaration: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
long=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
long=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
void=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java,ClassInstanceCreation,1,1,1,0,0
java,MethodInvocation,1,1,1,0,0
java,SimpleName,15,15,15,0,0
java,SimpleType,6,6,6,0,0
java,SingleVariableDeclaration,2,2,2,0,0
java,VariableDeclarationFragment,2,2,2,0,0
long,MethodInvocation,1,1,1,0,0
long,PrimitiveType,1,1,1,0,0
long,SimpleName,2,2,2,0,0
long,VariableDeclarationFragment,1,1,1,0,0
void,PrimitiveType,1,1,1,0,0
