echo package -Dmaven.test.skip=True
package -Dmaven.test.skip=True
echo 'java ${java_d_options} -cp ./target/snr-server-0.0.1-SNAPSHOT.jar:lib/*:target/lib/* org.javelus.snr.toy.CompareBindingAnalysisAndEclipseJDT "${snr_snippets_folder}" "${snr_library_external}" true false' | ./benchmark/set_env.bash
Processing snippet: /iJTyper/Baseline/SnR/benchmark/../src/test/resources/snippets/so/gt18.java
Expect check=26
Cannot find matching typeVariable for: public class gt18 {
  public static String h1(){
    Formatter format=new Formatter();
    int matches=0;
    Formatter formattedString=format.format("%d numbers(s, args) in correct position",matches);
    return null;
  }
}

Cannot find matching typeVariable for: gt18
Cannot find matching typeVariable for: public class gt18 {
  public static String h1(){
    Formatter format=new Formatter();
    int matches=0;
    Formatter formattedString=format.format("%d numbers(s, args) in correct position",matches);
    return null;
  }
}

Cannot find matching typeVariable for: package java.gwt;
import java.util.Formatter;
public class gt18 {
  public static String h1(){
    Formatter format=new Formatter();
    int matches=0;
    Formatter formattedString=format.format("%d numbers(s, args) in correct position",matches);
    return null;
  }
}

For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
For node: String expected fqn: java.lang.String with type: Type2 got: java.lang.String
Cannot find matching typeVariable for: h1
Cannot find matching typeVariable for: public static String h1(){
  Formatter format=new Formatter();
  int matches=0;
  Formatter formattedString=format.format("%d numbers(s, args) in correct position",matches);
  return null;
}

Cannot find matching typeVariable for: public class gt18 {
  public static String h1(){
    Formatter format=new Formatter();
    int matches=0;
    Formatter formattedString=format.format("%d numbers(s, args) in correct position",matches);
    return null;
  }
}

Cannot find matching typeVariable for: package java.gwt;
import java.util.Formatter;
public class gt18 {
  public static String h1(){
    Formatter format=new Formatter();
    int matches=0;
    Formatter formattedString=format.format("%d numbers(s, args) in correct position",matches);
    return null;
  }
}

For node: Formatter expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: Formatter expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
Cannot find matching typeVariable for: format=new Formatter()
For node: format=new Formatter() expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: format expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: new Formatter() expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: Formatter expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: Formatter expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: int expected fqn: int with type: Type6 got: int
Cannot find matching typeVariable for: matches=0
For node: matches=0 expected fqn: int with type: Type6 got: int
For node: matches expected fqn: int with type: Type6 got: int
For node: 0 expected fqn: int with type: Type7 got: byte
For node: Formatter expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: Formatter expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
Cannot find matching typeVariable for: formattedString=format.format("%d numbers(s, args) in correct position",matches)
For node: formattedString=format.format("%d numbers(s, args) in correct position",matches) expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: formattedString expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: format.format("%d numbers(s, args) in correct position",matches) expected fqn: java.util.Formatter with type: Type9 got: java.util.Formatter
For node: format expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: format expected fqn: java.util.Formatter with type: Type3 got: java.util.Formatter
For node: "%d numbers(s, args) in correct position" expected fqn: java.lang.String with type: Type8 got: java.lang.String
For node: matches expected fqn: int with type: Type6 got: int
For node: null expected fqn: null with type: Type13 got: java.lang.String
{Checked=23, Analyzed=23, Unsolved=0, Incorrect=2, Correct=21}
int=NumberLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
java=SimpleType: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
null=NullLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
Total stats
{Checked=23, Analyzed=23, Unsolved=0, Incorrect=2, Correct=21}
int=NumberLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
int=PrimitiveType: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
int=SimpleName: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
int=VariableDeclarationFragment: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=ClassInstanceCreation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=MethodInvocation: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=SimpleName: {Checked=8, Analyzed=8, Unsolved=0, Incorrect=0, Correct=8}
java=SimpleType: {Checked=4, Analyzed=4, Unsolved=0, Incorrect=0, Correct=4}
java=StringLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=0, Correct=1}
java=VariableDeclarationFragment: {Checked=2, Analyzed=2, Unsolved=0, Incorrect=0, Correct=2}
null=NullLiteral: {Checked=1, Analyzed=1, Unsolved=0, Incorrect=1, Correct=0}
int,NumberLiteral,1,1,0,1,0
int,PrimitiveType,1,1,1,0,0
int,SimpleName,2,2,2,0,0
int,VariableDeclarationFragment,1,1,1,0,0
java,ClassInstanceCreation,1,1,1,0,0
java,MethodInvocation,1,1,1,0,0
java,SimpleName,8,8,8,0,0
java,SimpleType,4,4,4,0,0
java,StringLiteral,1,1,1,0,0
java,VariableDeclarationFragment,2,2,2,0,0
null,NullLiteral,1,1,0,1,0
